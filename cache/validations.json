{
  "version": "3.2",
  "log": [
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "e2495392e3c4dec5b1def741d2836d1d46cdc7f7792217fc11aaa35863d73429",
          "withoutMetadata": "907a77ad929b7ce2b5e9695e082ebd29ff1680cc4dc9c08468bc61bed562a3c0",
          "linkedWithoutMetadata": "907a77ad929b7ce2b5e9695e082ebd29ff1680cc4dc9c08468bc61bed562a3c0"
        },
        "inherit": [
          "IERC721Receiver"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)102",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)102": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "42303bb766129ee813079e28f74a28acde1cd20a4151eeecf5075ffdcb7ab15a",
          "withoutMetadata": "00f1ef9492a196e6e8bbd5c5b98ac1b30ada73e8e04c11a1cb527bb8494b10b5",
          "linkedWithoutMetadata": "00f1ef9492a196e6e8bbd5c5b98ac1b30ada73e8e04c11a1cb527bb8494b10b5"
        },
        "inherit": [
          "IERC721Receiver"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "e4007d0b257359703a8d2d2dfeee68c5aa80c89b0d30443246760ee9660e750f",
          "withoutMetadata": "382a38b554bc71af6db8ffa2f76ad6cb23cf8106ac704141fc135b2599661798",
          "linkedWithoutMetadata": "382a38b554bc71af6db8ffa2f76ad6cb23cf8106ac704141fc135b2599661798"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "6bfcf0c230a7d79697cce4fd710e4c37936b8c1f38a30f331e7d8d343f9c8077",
          "withoutMetadata": "fa40b79b8531a26214843b5afaaf24188f642cf5dd0daeb1408c87c0a46b7f41",
          "linkedWithoutMetadata": "fa40b79b8531a26214843b5afaaf24188f642cf5dd0daeb1408c87c0a46b7f41"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "367ff96a0db24bedb7e788745113767f563462e85ceee3d1c0b41b5c74e8ff0e",
          "withoutMetadata": "ffd580ed51482f214677587e9bbb8390efa16df96cf7ad58c22740ab06c2ded1",
          "linkedWithoutMetadata": "ffd580ed51482f214677587e9bbb8390efa16df96cf7ad58c22740ab06c2ded1"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "99778e35fe58af4bd5bd2fd2fc3664a401047e47f29c955a6670bca3f15f83cf",
          "withoutMetadata": "653eb498798e8fa552fb783fe00c2b32b75fc260bfe40b738850034d043724e8",
          "linkedWithoutMetadata": "653eb498798e8fa552fb783fe00c2b32b75fc260bfe40b738850034d043724e8"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "189a2211866abfa7df0ce70cbd2300b1a87f20af25f8ab478ae84e1d5aff06b9",
          "withoutMetadata": "653eb498798e8fa552fb783fe00c2b32b75fc260bfe40b738850034d043724e8",
          "linkedWithoutMetadata": "653eb498798e8fa552fb783fe00c2b32b75fc260bfe40b738850034d043724e8"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "46fadf780832e2e833547fa937175ecf4ad0a4d1cde3440cb84f3c6b5cd1093c",
          "withoutMetadata": "653eb498798e8fa552fb783fe00c2b32b75fc260bfe40b738850034d043724e8",
          "linkedWithoutMetadata": "653eb498798e8fa552fb783fe00c2b32b75fc260bfe40b738850034d043724e8"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "b1c0b58055a9936bbf9ca2f2009280425d330e94b654992dc8d508b25993ac2d",
          "withoutMetadata": "ffd580ed51482f214677587e9bbb8390efa16df96cf7ad58c22740ab06c2ded1",
          "linkedWithoutMetadata": "ffd580ed51482f214677587e9bbb8390efa16df96cf7ad58c22740ab06c2ded1"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "46fadf780832e2e833547fa937175ecf4ad0a4d1cde3440cb84f3c6b5cd1093c",
          "withoutMetadata": "653eb498798e8fa552fb783fe00c2b32b75fc260bfe40b738850034d043724e8",
          "linkedWithoutMetadata": "653eb498798e8fa552fb783fe00c2b32b75fc260bfe40b738850034d043724e8"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "b5fdd5e6cf24f8c5c791db544e370c66cd72d4fcb5a18e813a98a2e795763d31",
          "withoutMetadata": "e7934bd50135624cb77e447dd234ec709928a78aa02740de238c4975b2ad89bb",
          "linkedWithoutMetadata": "e7934bd50135624cb77e447dd234ec709928a78aa02740de238c4975b2ad89bb"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "c8caaa12aec48cf0628a1a77ff7771186fc09955fdd1a8990e80c0258d24b1ec",
          "withoutMetadata": "9e8c5e3c97e679c3fe82776abea2cc5ee12acd7b85bbbae43c30c7c181a49ed9",
          "linkedWithoutMetadata": "9e8c5e3c97e679c3fe82776abea2cc5ee12acd7b85bbbae43c30c7c181a49ed9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FreeRiderRecovery": {
        "src": "contracts/free-rider/FreeRiderRecovery.sol:13",
        "version": {
          "withMetadata": "6a3f6e2948a1bdb49ffaa2c6912f9c5d0ddd19465cda425f0926239d100bf646",
          "withoutMetadata": "6a35cc984f424dc55871068a4da2631b0e70b6e720f26082d5f18b153f37a1f1",
          "linkedWithoutMetadata": "6a35cc984f424dc55871068a4da2631b0e70b6e720f26082d5f18b153f37a1f1"
        },
        "inherit": [
          "IERC721Receiver",
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderRecovery",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "beneficiary",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nft",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "received",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FreeRiderRecovery",
              "src": "contracts/free-rider/FreeRiderRecovery.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FreeRiderRecovery": {
        "src": "contracts/free-rider/FreeRiderRecovery.sol:13",
        "version": {
          "withMetadata": "4792cf199ec28f352cba6630b25edd570ed5e7774b274f2a24173807857d0862",
          "withoutMetadata": "1d83bf5472478482a0611c66f95fa1d3e5a677e6002ddc7a60118242bf76313f",
          "linkedWithoutMetadata": "1d83bf5472478482a0611c66f95fa1d3e5a677e6002ddc7a60118242bf76313f"
        },
        "inherit": [
          "IERC721Receiver",
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderRecovery",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "beneficiary",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nft",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "received",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FreeRiderRecovery",
              "src": "contracts/free-rider/FreeRiderRecovery.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "b5fdd5e6cf24f8c5c791db544e370c66cd72d4fcb5a18e813a98a2e795763d31",
          "withoutMetadata": "e7934bd50135624cb77e447dd234ec709928a78aa02740de238c4975b2ad89bb",
          "linkedWithoutMetadata": "e7934bd50135624cb77e447dd234ec709928a78aa02740de238c4975b2ad89bb"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "c8caaa12aec48cf0628a1a77ff7771186fc09955fdd1a8990e80c0258d24b1ec",
          "withoutMetadata": "9e8c5e3c97e679c3fe82776abea2cc5ee12acd7b85bbbae43c30c7c181a49ed9",
          "linkedWithoutMetadata": "9e8c5e3c97e679c3fe82776abea2cc5ee12acd7b85bbbae43c30c7c181a49ed9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "b5fdd5e6cf24f8c5c791db544e370c66cd72d4fcb5a18e813a98a2e795763d31",
          "withoutMetadata": "e7934bd50135624cb77e447dd234ec709928a78aa02740de238c4975b2ad89bb",
          "linkedWithoutMetadata": "e7934bd50135624cb77e447dd234ec709928a78aa02740de238c4975b2ad89bb"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "c8caaa12aec48cf0628a1a77ff7771186fc09955fdd1a8990e80c0258d24b1ec",
          "withoutMetadata": "9e8c5e3c97e679c3fe82776abea2cc5ee12acd7b85bbbae43c30c7c181a49ed9",
          "linkedWithoutMetadata": "9e8c5e3c97e679c3fe82776abea2cc5ee12acd7b85bbbae43c30c7c181a49ed9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "5f42496d1a7ec5fab8d34b74085ae3395c775dd8e0b9b3c6f7ad19c7942d6187",
          "withoutMetadata": "9ff74a92102bb66505d5f54346fed86b0e0e5cf8b764fe8a016df5530507b0f9",
          "linkedWithoutMetadata": "9ff74a92102bb66505d5f54346fed86b0e0e5cf8b764fe8a016df5530507b0f9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "4b49c854bc9859fc022186f58ac60629500212815a8226e84838a887097fc5d2",
          "withoutMetadata": "62d924a0d204383b9ab634ba962c71d41039afa2743ea0dbc2549843caeaac95",
          "linkedWithoutMetadata": "62d924a0d204383b9ab634ba962c71d41039afa2743ea0dbc2549843caeaac95"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:95"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "844c25e3029e63dcb1e938d0cc5e39e8818af411993db29ed3d611bde6555675",
          "withoutMetadata": "ad6bf0f2b8b737dbb8e4d360c0e17ca5b7311d7bc053f5eb0a4544d87ea2c46e",
          "linkedWithoutMetadata": "ad6bf0f2b8b737dbb8e4d360c0e17ca5b7311d7bc053f5eb0a4544d87ea2c46e"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:95"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:39",
        "version": {
          "withMetadata": "5bd84a6f1dd8dc1f5a76c222db49e013a8eb745894cef3b168fd3d716a03a983",
          "withoutMetadata": "46127bbc55a90a991ddb32dc44418cebf507c75c1b7a520e5c47d83dc1b52485",
          "linkedWithoutMetadata": "46127bbc55a90a991ddb32dc44418cebf507c75c1b7a520e5c47d83dc1b52485"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:46"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:95"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)24",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)58",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:42"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)76",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:43"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)100",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:44"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)100": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)58": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)24": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)76": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "deefb9dfbf1a4b5376a1a21d9a7f62353dcd82eae424a1e7f2eb0694ae36a23c",
          "withoutMetadata": "9ff74a92102bb66505d5f54346fed86b0e0e5cf8b764fe8a016df5530507b0f9",
          "linkedWithoutMetadata": "9ff74a92102bb66505d5f54346fed86b0e0e5cf8b764fe8a016df5530507b0f9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:93"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "90791db1310ec83d10855c4fa5834945d06062c03312dab05b281b79ce25e483",
          "withoutMetadata": "902ecb867e5cece3d836c077abcf7cfff0ffea6345b865f1f446743aa3908dee",
          "linkedWithoutMetadata": "902ecb867e5cece3d836c077abcf7cfff0ffea6345b865f1f446743aa3908dee"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:93"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "deefb9dfbf1a4b5376a1a21d9a7f62353dcd82eae424a1e7f2eb0694ae36a23c",
          "withoutMetadata": "9ff74a92102bb66505d5f54346fed86b0e0e5cf8b764fe8a016df5530507b0f9",
          "linkedWithoutMetadata": "9ff74a92102bb66505d5f54346fed86b0e0e5cf8b764fe8a016df5530507b0f9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:93"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "2bd39032ffa3b9c66f6b7385c67e41ab108316bb8a923c8468998428d75e5582",
          "withoutMetadata": "3668659d83ed97d0132dd47f772cd57eeae8324af5317b9f31e22437b4d8aebf",
          "linkedWithoutMetadata": "3668659d83ed97d0132dd47f772cd57eeae8324af5317b9f31e22437b4d8aebf"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:93"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "1018edd60da2a123b1f304174c686ce06a48093b9d0b245d65e649a70fa323a8",
          "withoutMetadata": "6024b6889798133a35c2cddc451b5026aa927f4a401bf5207743516dfc3d21c7",
          "linkedWithoutMetadata": "6024b6889798133a35c2cddc451b5026aa927f4a401bf5207743516dfc3d21c7"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:90"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "b665f0ad0ed4e4648dfd00245b0b10f3265ab37adb9967c6089fce695ac61e9c",
          "withoutMetadata": "8457d8c8c0aa9b1d89de6ee27a079b699b23e10903dfdfd0cc891f9a462e417e",
          "linkedWithoutMetadata": "8457d8c8c0aa9b1d89de6ee27a079b699b23e10903dfdfd0cc891f9a462e417e"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/free-rider/FreeRiderExploit.sol:89"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "91a0f6f675bf75ffd9b56ce6b0e643e380fc2e2f0b0721015f71b7b3ba6afdf3",
          "withoutMetadata": "03e0f3d0a2ae59c0c47e018f44e9248f4f7db601c20fab1210c1203c27e207c2",
          "linkedWithoutMetadata": "03e0f3d0a2ae59c0c47e018f44e9248f4f7db601c20fab1210c1203c27e207c2"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "874e73eeb6b198a5026098b8372438d8a9a6f8d0c8ead5ce610dfcd55ddf2d69",
          "withoutMetadata": "d361b1d5f418f3956be42b84473b8495ab618d258f35d1e1ac7617f25dc281ca",
          "linkedWithoutMetadata": "d361b1d5f418f3956be42b84473b8495ab618d258f35d1e1ac7617f25dc281ca"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "0be96e8088dec5b6469021a6dc05c9657d80a99ee75cfde5c8a2a0b5989f7bac",
          "withoutMetadata": "38d5564d0a195372b0e6cd6a7b81ebf3bd478f13694f0d44a3b7e7ae385cfc5b",
          "linkedWithoutMetadata": "38d5564d0a195372b0e6cd6a7b81ebf3bd478f13694f0d44a3b7e7ae385cfc5b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "68f6fd5017a8c05cd49c0817f0088d604a88dfd65047183feea7e55ee858c685",
          "withoutMetadata": "c34ecebabc04e88d3b711fb1d1e8a9cb35e808543ba9ba3abe488a4f5e9cab05",
          "linkedWithoutMetadata": "c34ecebabc04e88d3b711fb1d1e8a9cb35e808543ba9ba3abe488a4f5e9cab05"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "f53addd9ac65e43060821cacb2366748e77f4033319fd58137ebb90e728a638b",
          "withoutMetadata": "730ce19dbcbae805ce78618c8abf421255026486f6251ca43424217ff7c8aa99",
          "linkedWithoutMetadata": "730ce19dbcbae805ce78618c8abf421255026486f6251ca43424217ff7c8aa99"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "32a858185b9fe5d3f5aa9b63be41e93f326f914d7f1d29957d0dc952ecc3465f",
          "withoutMetadata": "a7aaa1b7e4d50869dee895e69c1ef1ecb4b202fc47e239386c673a52c5c77715",
          "linkedWithoutMetadata": "a7aaa1b7e4d50869dee895e69c1ef1ecb4b202fc47e239386c673a52c5c77715"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "033aec0b6b8c1d3d06116aefef336ab270e6d7b519377d87c628d64ef83fea57",
          "withoutMetadata": "d67918802d9083fb88ce96384546e8bbbaf41f705f3be9093ebf7ce4cc15777f",
          "linkedWithoutMetadata": "d67918802d9083fb88ce96384546e8bbbaf41f705f3be9093ebf7ce4cc15777f"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "4e59008000ed4853a6aa8ab21f9a687a0680b1ac01920dd22a1a599f9c823432",
          "withoutMetadata": "f7a9d9fa3494bc25a2332a9aefd3c2455c58649b9754973fa8c1eff813887080",
          "linkedWithoutMetadata": "f7a9d9fa3494bc25a2332a9aefd3c2455c58649b9754973fa8c1eff813887080"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "b05df3b642b46f353052466b1f576a3bba527470f2e1dc7078ec18df7a989d74",
          "withoutMetadata": "0f12b860607a54fb2b01f54363a7a92c4bba549eae4e991ded26f514234cbbfa",
          "linkedWithoutMetadata": "0f12b860607a54fb2b01f54363a7a92c4bba549eae4e991ded26f514234cbbfa"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:35",
        "version": {
          "withMetadata": "38ae1018824c7e66b1ae4f42b43fe567756a063aff7dfcb95cc9c3959cb79fc2",
          "withoutMetadata": "01a79840c281de1fba847a22cce26ebd17a01bfdd26da2e2c3d0e45c146d17e1",
          "linkedWithoutMetadata": "01a79840c281de1fba847a22cce26ebd17a01bfdd26da2e2c3d0e45c146d17e1"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)90",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)90": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:34",
        "version": {
          "withMetadata": "800d85f75c5ea5d96fd37a7f0482ef5cade7f2d7f50d2b8080859a2c542107ab",
          "withoutMetadata": "0328c01eed09c267762fdc6286533f1e5e6c7a8fd9c06e94b04fec79b3e78e51",
          "linkedWithoutMetadata": "0328c01eed09c267762fdc6286533f1e5e6c7a8fd9c06e94b04fec79b3e78e51"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:41"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:35"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)83",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)83": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "FreeRiderExploit": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:34",
        "version": {
          "withMetadata": "8079e235a8714c809fb0e01456dec0406361513c5294a022237dfeaf6a17179f",
          "withoutMetadata": "1901b13694cddfa91991d04f8303bc9380a79d26d02237078dcef81770e1672a",
          "linkedWithoutMetadata": "1901b13694cddfa91991d04f8303bc9380a79d26d02237078dcef81770e1672a"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderExploit",
            "src": "contracts/free-rider/FreeRiderExploit.sol:41"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "player",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:35"
            },
            {
              "label": "uniswapPair",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Pair)14",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:36"
            },
            {
              "label": "nftMarketplace",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFreeRiderNFTMarketplace)48",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:37"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IWETH)66",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:38"
            },
            {
              "label": "nft",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC721)83",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:39"
            },
            {
              "label": "freeRiderBuyer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "FreeRiderExploit",
              "src": "contracts/free-rider/FreeRiderExploit.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)83": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(IFreeRiderNFTMarketplace)48": {
              "label": "contract IFreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)14": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)66": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setApprovalForAll(address,bool)",
          "safeTransferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Callee": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swap(uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/free-rider/FreeRiderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20Minimal": {
        "src": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "IUniswapV3PoolEvents",
          "IUniswapV3PoolOwnerActions",
          "IUniswapV3PoolActions",
          "IUniswapV3PoolDerivedState",
          "IUniswapV3PoolState",
          "IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FullMath": {
        "src": "@uniswap/v3-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "cf2c4d4d3bea0b2e9ef49240613f3cb48d73dcd714b95b447441facc9fa72621",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TickMath": {
        "src": "@uniswap/v3-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "e2ce058f5eb0ffc8e9823618f74bd13009d16afb69f48051ee868452d0b1b42b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "@uniswap/v3-core/contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "05d7ae5f8b7e957e62d88103b3429af299b19c71345bd7bb139f330d28672bdd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OracleLibrary": {
        "src": "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:10",
        "version": {
          "withMetadata": "92e5c62062317d7d72978a4409d80341a03e453f3f748a17498ab2afb57a9093",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "TickMath",
          "FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV3Pool": {
        "src": "contracts/puppet-v3/PuppetV3Pool.sol:14",
        "version": {
          "withMetadata": "77c81b3ba77c3e43c76399ef8a6a715013b192a49b4d2afaf5971084e79936cc",
          "withoutMetadata": "7f41d709fd2d64f937de627398ac22f010648d313d0bd98237cef5c246ecf774",
          "linkedWithoutMetadata": "7f41d709fd2d64f937de627398ac22f010648d313d0bd98237cef5c246ecf774"
        },
        "inherit": [],
        "libraries": [
          "TransferHelper",
          "OracleLibrary"
        ],
        "methods": [
          "(address,address,address)",
          "borrow(uint256)",
          "calculateDepositOfWETHRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV3Pool",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "weth",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswapV3Pool",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetV3Pool",
              "src": "contracts/puppet-v3/PuppetV3Pool.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "cfc55ce51b27a66b87c7f0da5787a31c35abf40e90b578b989670cabf8c02e23",
          "withoutMetadata": "9eea8ecbb6587451bd0fc9431d0e7cf1ac52fcfd98b030223e4528b46ea0dd96",
          "linkedWithoutMetadata": "9eea8ecbb6587451bd0fc9431d0e7cf1ac52fcfd98b030223e4528b46ea0dd96"
        },
        "inherit": [
          "GuardManager",
          "StorageAccessible",
          "FallbackManager",
          "ISignatureValidatorConstants",
          "SecuredTokenTransfer",
          "SignatureDecoder",
          "OwnerManager",
          "ModuleManager",
          "Executor",
          "SelfAuthorized",
          "Singleton",
          "EtherPaymentFallback"
        ],
        "libraries": [
          "GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "1123bd35224680e2c32ba89c35e13183ecf6d43ff64f93b69ad6124882ab1475",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "30c255bdaa2a976b50f871a75376c0f75bc9026ab2750f3b47a9dec94ff2806f",
          "withoutMetadata": "3ac5655136666b142f425391f53843c36a3603a86aa4c6aeb1c7fb8a1de177ba",
          "linkedWithoutMetadata": "3ac5655136666b142f425391f53843c36a3603a86aa4c6aeb1c7fb8a1de177ba"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "7c3f153bbc8bd88876e5506aac86c2d91f7b7f908d7b2705e76da787c460ffff",
          "withoutMetadata": "fc7ef81238283a2d1cc2e126f8bbaf431d4dca91dbbf475d58340386770ecbc4",
          "linkedWithoutMetadata": "fc7ef81238283a2d1cc2e126f8bbaf431d4dca91dbbf475d58340386770ecbc4"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "49bb258682294002be5a9675956a7d3ba70d1557e8715ccc1a292d05b0fe1e96",
          "withoutMetadata": "da3402829f09dcf600da2153f8080ddabd64ccd8a036dd5a19599fd71c13eaec",
          "linkedWithoutMetadata": "da3402829f09dcf600da2153f8080ddabd64ccd8a036dd5a19599fd71c13eaec"
        },
        "inherit": [
          "Executor",
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "d58f0ef96cf70ceb6ca018b9e6db6d54f094e6d8cd2aa3f99a23c793aac00cc8",
          "withoutMetadata": "cb7759f9f859a8a6d470ef997bb276bd95f084b2a02ee46df34574e8990f3b61",
          "linkedWithoutMetadata": "cb7759f9f859a8a6d470ef997bb276bd95f084b2a02ee46df34574e8990f3b61"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "f494b134a56e2f98648350dded7d7f9e63ff92b2420189f3b4df6a0fcf807b9c",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "f77b47e11c244dbea953b3f0af40242f595fc65efbf918a3ba2552c4db35d7f2",
          "withoutMetadata": "aa9f6ca005d60a39d6bbf035dd936b9d9b8fca26233fee462c90b41cf3a4eeeb",
          "linkedWithoutMetadata": "aa9f6ca005d60a39d6bbf035dd936b9d9b8fca26233fee462c90b41cf3a4eeeb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "a62cef5c0d2965ccb2586973868dd54f6c4b51a16cdeaa0697b01aa3a1d368d8",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "4049cdc67f91f3b1f2a06418b36774a486644c40fb9b9f8cace712bde431441b",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "1b816bf9c0f2c0fa6f8ad29fa730f0cac60000d77cba696db6f7ed78f0a5fce4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "b6f1a3b0b3f5a42fde470b7a0d40337a2b6d308f0804c0fe9744f3807a6af3cb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "f6d97a0ed0e695461ae1f35cbf78bae9ec142c05acac03ba5e6315fffbec048e",
          "withoutMetadata": "475cc06389df6fff164fc2399d0b2efa267e8e5ffb3c15ff30825d10e9f5f791",
          "linkedWithoutMetadata": "475cc06389df6fff164fc2399d0b2efa267e8e5ffb3c15ff30825d10e9f5f791"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "003629153ddecc38f91225a421a909dd954dd25ceffbf5100176a9177e3ff65d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "1ee6b8496a02c5ee1488f3d081515c679212a2604cd42dfb45236011275d2e80",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "ceee13c3ef642412c57bdf5682b2b096665e7978fb36a17c6d6fcd617cf77f10",
          "withoutMetadata": "bd64e1ae69adb745796d30e323e9e6b42c7fc9ca418c8897db4f8d44970361af",
          "linkedWithoutMetadata": "bd64e1ae69adb745796d30e323e9e6b42c7fc9ca418c8897db4f8d44970361af"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "294f0b467ad2203cdb2058787259c641795106cbc64370b8c274a6e0d0a27de0",
          "withoutMetadata": "b09f353c740e7ec3f9c66b0b5e4c067b7b9004eae144d8bbabc872f0f494ad83",
          "linkedWithoutMetadata": "b09f353c740e7ec3f9c66b0b5e4c067b7b9004eae144d8bbabc872f0f494ad83"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "a7501a82ca3537d09f53cb97c8cd1a495ad13f58bdf7bba0cd4018b0f07c719d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "59b6dc9630efde0604c6fe8a808b8b015877ca50b3272c3db0cbc1347c77268f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "ERC165",
          "IERC165",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AccessControlEnumerable": {
        "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:13",
        "inherit": [
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControlEnumerable",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)",
              "contract": "AccessControlEnumerable",
              "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)8003_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)7702_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)7702_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAccessControlEnumerable": {
        "src": "@openzeppelin/contracts/access/IAccessControlEnumerable.sol:11",
        "inherit": [
          "IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "solmate/src/utils/ReentrancyGuard.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "solmate/src/utils/ReentrancyGuard.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "solmate/src/utils/ReentrancyGuard.sol:8"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)5061_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)5061_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)6857_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)5061_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6857_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)5061_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "9f023b903b41630670b0fa6fd541ca4980908980eb5b26a8c51f04f3dc6079df",
          "withoutMetadata": "ec2b03b26bc843bec40bcade1595cd999bb83fb78eb039972e923f40d6b460be",
          "linkedWithoutMetadata": "ec2b03b26bc843bec40bcade1595cd999bb83fb78eb039972e923f40d6b460be"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "fd40d8ea8bea82af2079c30c856c0d79b1737610b260b0b90b633ac1d5931b22",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:38",
        "version": {
          "withMetadata": "c125d14211d838b012854b63105a733b5214b1e8f269dfa8bb1127b37a6c2f42",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Minimal": {
        "src": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "IUniswapV3PoolEvents",
          "IUniswapV3PoolOwnerActions",
          "IUniswapV3PoolActions",
          "IUniswapV3PoolDerivedState",
          "IUniswapV3PoolState",
          "IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "@uniswap/v3-core/contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "5a5432e901cb55bf29ac8a5580c43db43e85079775876defb174b7e21d124180",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableNFT": {
        "src": "contracts/DamnValuableNFT.sol:13",
        "version": {
          "withMetadata": "3e85dbb94f62df048d83f6c52a269c2092933c19b1093a3c0abe715766bfc2ca",
          "withoutMetadata": "c074aa150e2f9248f568f8307186172071aa176d6c31fe9b7f28266352fe4c86",
          "linkedWithoutMetadata": "c074aa150e2f9248f568f8307186172071aa176d6c31fe9b7f28266352fe4c86"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC721Burnable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "safeMint(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableNFT",
            "src": "contracts/DamnValuableNFT.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DamnValuableNFT",
              "src": "contracts/DamnValuableNFT.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DamnValuableTokenSnapshot": {
        "src": "contracts/DamnValuableTokenSnapshot.sol:11",
        "version": {
          "withMetadata": "db14bdf42c78dc7e942731390b31456393a4893551369250e89711aa4dd6c0e5",
          "withoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f",
          "linkedWithoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f"
        },
        "inherit": [
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "snapshot()",
          "getBalanceAtLastSnapshot(address)",
          "getTotalSupplyAtLastSnapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableTokenSnapshot",
            "src": "contracts/DamnValuableTokenSnapshot.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)5061_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)5061_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)6857_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            },
            {
              "label": "_lastSnapshotId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DamnValuableTokenSnapshot",
              "src": "contracts/DamnValuableTokenSnapshot.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)5061_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6857_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)5061_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AuthorizedExecutor": {
        "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:11",
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "setPermissions(bytes32[])",
          "execute(address,bytes)",
          "getActionId(bytes4,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:14"
            },
            {
              "label": "permissions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:17"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SelfAuthorizedVault": {
        "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:12",
        "version": {
          "withMetadata": "2e1f4236192382614706f07381fca360bb47487c004dc4763f532a1aba9d49df",
          "withoutMetadata": "f2318384b2ecd5a7433f6f18332b585222a5b42bb54d6539c32a4814a0454eac",
          "linkedWithoutMetadata": "f2318384b2ecd5a7433f6f18332b585222a5b42bb54d6539c32a4814a0454eac"
        },
        "inherit": [
          "AuthorizedExecutor",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "withdraw(address,address,uint256)",
          "sweepFunds(address,address)",
          "getLastWithdrawalTimestamp()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_lastWithdrawalTimestamp",
            "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:14"
            },
            {
              "label": "permissions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:17"
            },
            {
              "label": "_lastWithdrawalTimestamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfAuthorizedVault",
              "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WalletRegistry": {
        "src": "contracts/backdoor/WalletRegistry.sol:17",
        "version": {
          "withMetadata": "b85b53bcc5a9e0f8323ad7bb9509c55d7c723279436f51b04075946a62e09dec",
          "withoutMetadata": "116314d1cf422ddcd1da4f5cbf2e14170a872957a9bf9c5bd43c464249266126",
          "linkedWithoutMetadata": "116314d1cf422ddcd1da4f5cbf2e14170a872957a9bf9c5bd43c464249266126"
        },
        "inherit": [
          "Ownable",
          "IProxyCreationCallback"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "(address,address,address,address[])",
          "addBeneficiary(address)",
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WalletRegistry",
            "src": "contracts/backdoor/WalletRegistry.sol:40"
          },
          {
            "kind": "state-variable-immutable",
            "name": "masterCopy",
            "src": "contracts/backdoor/WalletRegistry.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "walletFactory",
            "src": "contracts/backdoor/WalletRegistry.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/backdoor/WalletRegistry.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaries",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "WalletRegistry",
              "src": "contracts/backdoor/WalletRegistry.sol:26"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "WalletRegistry",
              "src": "contracts/backdoor/WalletRegistry.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ClimberTimelock": {
        "src": "contracts/climber/ClimberTimelock.sol:21",
        "version": {
          "withMetadata": "054db4ec5a4a2ac56efcf2e41fe3cbf13c1a6b6f83d970f428709f61c7c34b9c",
          "withoutMetadata": "22c50716512da2f691ef9dd8184fb4590e51b50fc11565f4ee77b403413bbadb",
          "linkedWithoutMetadata": "22c50716512da2f691ef9dd8184fb4590e51b50fc11565f4ee77b403413bbadb"
        },
        "inherit": [
          "ClimberTimelockBase",
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "schedule(address[],uint256[],bytes[],bytes32)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "updateDelay(uint64)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ClimberTimelock",
            "src": "contracts/climber/ClimberTimelock.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "operations",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(Operation)10612_storage)",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:27"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Operation)10612_storage)": {
              "label": "mapping(bytes32 => struct ClimberTimelockBase.Operation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Operation)10612_storage": {
              "label": "struct ClimberTimelockBase.Operation",
              "members": [
                {
                  "label": "readyAtTimestamp",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "known",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 9,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ClimberTimelockBase": {
        "src": "contracts/climber/ClimberTimelockBase.sol:10",
        "inherit": [
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControl",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getOperationState(bytes32)",
          "getOperationId(address[],uint256[],bytes[],bytes32)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "operations",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(Operation)10612_storage)",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:27"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Operation)10612_storage)": {
              "label": "mapping(bytes32 => struct ClimberTimelockBase.Operation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Operation)10612_storage": {
              "label": "struct ClimberTimelockBase.Operation",
              "members": [
                {
                  "label": "readyAtTimestamp",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "known",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 9,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ClimberVault": {
        "src": "contracts/climber/ClimberVault.sol:19",
        "version": {
          "withMetadata": "4405546fbc5bd1456300e7d72faeb83c91b838971af76d722a18d9e34cb647fc",
          "withoutMetadata": "5464eb85cc8d892d42052478761138b79df192f598e61e0b35c6f84fbef159a3",
          "linkedWithoutMetadata": "5464eb85cc8d892d42052478761138b79df192f598e61e0b35c6f84fbef159a3"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "()",
          "initialize(address,address,address)",
          "withdraw(address,address,uint256)",
          "sweepFunds(address)",
          "getSweeper()",
          "getLastWithdrawalTimestamp()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_lastWithdrawalTimestamp",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "ClimberVault",
              "src": "contracts/climber/ClimberVault.sol:20"
            },
            {
              "label": "_sweeper",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "ClimberVault",
              "src": "contracts/climber/ClimberVault.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Exchange": {
        "src": "contracts/compromised/Exchange.sol:13",
        "version": {
          "withMetadata": "9842e6c036533b9161a2a166d0be0d03bc47618ae73a4072ceb7f8999e83545c",
          "withoutMetadata": "73f2c676d65da64189c93a2460dc7676c85d920e271131c5df8ffa91b96d075e",
          "linkedWithoutMetadata": "73f2c676d65da64189c93a2460dc7676c85d920e271131c5df8ffa91b96d075e"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "buyOne()",
          "sellOne(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Exchange",
            "src": "contracts/compromised/Exchange.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/compromised/Exchange.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "oracle",
            "src": "contracts/compromised/Exchange.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrustfulOracle": {
        "src": "contracts/compromised/TrustfulOracle.sol:14",
        "version": {
          "withMetadata": "6bc4f9b2180fc6404c974e5d92ab841345d271e66dc4542f153d18e8e2b38657",
          "withoutMetadata": "48fea9c040abc744dbbd5627858061e16925140e19945063abbd9fe89ccac777",
          "linkedWithoutMetadata": "48fea9c040abc744dbbd5627858061e16925140e19945063abbd9fe89ccac777"
        },
        "inherit": [
          "AccessControlEnumerable",
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControlEnumerable",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "LibSort"
        ],
        "methods": [
          "(address[],bool)",
          "setupInitialPrices(address[],string[],uint256[])",
          "postPrice(string,uint256)",
          "getMedianPrice(string)",
          "getAllPricesForSymbol(string)",
          "getPriceBySource(string,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrustfulOracle",
            "src": "contracts/compromised/TrustfulOracle.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)",
              "contract": "AccessControlEnumerable",
              "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:16"
            },
            {
              "label": "_pricesBySource",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "TrustfulOracle",
              "src": "contracts/compromised/TrustfulOracle.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)8003_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)7702_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)7702_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrustfulOracleInitializer": {
        "src": "contracts/compromised/TrustfulOracleInitializer.sol:10",
        "version": {
          "withMetadata": "060d7bf1f908c663d18878109858aed37cf6a0abc1b15368809c8a0045a83154",
          "withoutMetadata": "90afaf52087944c708d6cb2ad864418462a5f1b32e7732f1ec467b2cabb87250",
          "linkedWithoutMetadata": "90afaf52087944c708d6cb2ad864418462a5f1b32e7732f1ec467b2cabb87250"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],string[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrustfulOracleInitializer",
            "src": "contracts/compromised/TrustfulOracleInitializer.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(TrustfulOracle)11471",
              "contract": "TrustfulOracleInitializer",
              "src": "contracts/compromised/TrustfulOracleInitializer.sol:13"
            }
          ],
          "types": {
            "t_contract(TrustfulOracle)11471": {
              "label": "contract TrustfulOracle",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:12",
        "version": {
          "withMetadata": "bd09b2293f7b537a3e55cee94f2cf7d3034cf6ccdfa9fd1eb6d31d391716d1e8",
          "withoutMetadata": "b2653bf4183ffa557908eb8bf3a731867ef6dd73a67a7e27b679562c9a3890e3",
          "linkedWithoutMetadata": "b2653bf4183ffa557908eb8bf3a731867ef6dd73a67a7e27b679562c9a3890e3"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(uint256)",
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderNFTMarketplace",
            "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(DamnValuableNFT)9553",
              "contract": "FreeRiderNFTMarketplace",
              "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:15"
            },
            {
              "label": "offersCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FreeRiderNFTMarketplace",
              "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:16"
            },
            {
              "label": "offers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FreeRiderNFTMarketplace",
              "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableNFT)9553": {
              "label": "contract DamnValuableNFT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FreeRiderRecovery": {
        "src": "contracts/free-rider/FreeRiderRecovery.sol:13",
        "version": {
          "withMetadata": "6a3f6e2948a1bdb49ffaa2c6912f9c5d0ddd19465cda425f0926239d100bf646",
          "withoutMetadata": "6a35cc984f424dc55871068a4da2631b0e70b6e720f26082d5f18b153f37a1f1",
          "linkedWithoutMetadata": "6a35cc984f424dc55871068a4da2631b0e70b6e720f26082d5f18b153f37a1f1"
        },
        "inherit": [
          "IERC721Receiver",
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderRecovery",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "beneficiary",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nft",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "received",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FreeRiderRecovery",
              "src": "contracts/free-rider/FreeRiderRecovery.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FlashLoanReceiver": {
        "src": "contracts/naive-receiver/FlashLoanReceiver.sol:13",
        "version": {
          "withMetadata": "e45bdc30ef87f025f8523ae5e71e4f6e28bcdf90463eed794be37acdfc3a9a68",
          "withoutMetadata": "b597bd3d8d0bc3f3656f400764af0a6919580cb4338c0d18a724332e611d1d28",
          "linkedWithoutMetadata": "b597bd3d8d0bc3f3656f400764af0a6919580cb4338c0d18a724332e611d1d28"
        },
        "inherit": [
          "IERC3156FlashBorrower"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "(address)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FlashLoanReceiver",
            "src": "contracts/naive-receiver/FlashLoanReceiver.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FlashLoanReceiver",
              "src": "contracts/naive-receiver/FlashLoanReceiver.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NaiveReceiverLenderPool": {
        "src": "contracts/naive-receiver/NaiveReceiverLenderPool.sol:14",
        "version": {
          "withMetadata": "7c19afc91ec483d4e9fa06df804e45b139c933956a61f22f9a8c03c1aae216bc",
          "withoutMetadata": "7e2db52589a95ef0b5d3e2d3a94a2469f7be7212339a6d88aca4061c7d6fd035",
          "linkedWithoutMetadata": "7e2db52589a95ef0b5d3e2d3a94a2469f7be7212339a6d88aca4061c7d6fd035"
        },
        "inherit": [
          "IERC3156FlashLender",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "bb59a66fc767d62d21285ec4ee5e099ca51802ee7c234aebf54f268fcdba9b44",
          "withoutMetadata": "0c80620fb77be40f61f1b36892da7be0a2e0123769fa33a0725d861ba2ab1d3c",
          "linkedWithoutMetadata": "0c80620fb77be40f61f1b36892da7be0a2e0123769fa33a0725d861ba2ab1d3c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "_addr()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)12278",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)12263",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)9579",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DamnValuableToken)9579": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)12263": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)12278": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PuppetPool": {
        "src": "contracts/puppet/PuppetPool.sol:12",
        "version": {
          "withMetadata": "913a39698f6ff9d65b7ccffda531f8f7a9cfd0c8b14904c571c1112c6345c892",
          "withoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72",
          "linkedWithoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetPool",
            "src": "contracts/puppet/PuppetPool.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswapPair",
            "src": "contracts/puppet/PuppetPool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/puppet/PuppetPool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetPool",
              "src": "contracts/puppet/PuppetPool.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ISimpleGovernance": {
        "src": "contracts/selfie/ISimpleGovernance.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "fed05c2b1c5891318c144046681e699303d5831d16e04c78c248e4fc7772aa5f",
          "withoutMetadata": "7b4aa616b2d613bbd02d4ac9c02979747d5d1fa3da337dff1207b0c82a3150f2",
          "linkedWithoutMetadata": "7b4aa616b2d613bbd02d4ac9c02979747d5d1fa3da337dff1207b0c82a3150f2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)12654",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)12673",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)12704",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)12704": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)12673": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)12654": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SelfiePool": {
        "src": "contracts/selfie/SelfiePool.sol:15",
        "version": {
          "withMetadata": "7707d76863addef8af9b3d106c7b9b2ab1529244d573e7db9a0f3bf704d08e5b",
          "withoutMetadata": "0c7fb8f86d00c6ccf27cef2e84f76ac997b192b843b4adc60c56d461933e8d13",
          "linkedWithoutMetadata": "0c7fb8f86d00c6ccf27cef2e84f76ac997b192b843b4adc60c56d461933e8d13"
        },
        "inherit": [
          "IERC3156FlashLender",
          "ReentrancyGuard"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfiePool",
            "src": "contracts/selfie/SelfiePool.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/selfie/SelfiePool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "governance",
            "src": "contracts/selfie/SelfiePool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SimpleGovernance": {
        "src": "contracts/selfie/SimpleGovernance.sol:12",
        "version": {
          "withMetadata": "141f0eb0a8983b339944378a8cb37e82bf41ead00f4d20921704d7bda97a289f",
          "withoutMetadata": "dc7894ff5a63cc3bcf5aa71170954b02c4fa61b7eb4d53cdbb684b8483fec1a0",
          "linkedWithoutMetadata": "dc7894ff5a63cc3bcf5aa71170954b02c4fa61b7eb4d53cdbb684b8483fec1a0"
        },
        "inherit": [
          "ISimpleGovernance"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleGovernance",
            "src": "contracts/selfie/SimpleGovernance.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_governanceToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DamnValuableTokenSnapshot)9642",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:15"
            },
            {
              "label": "_actionCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:16"
            },
            {
              "label": "_actions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(GovernanceAction)12557_storage)",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableTokenSnapshot)9642": {
              "label": "contract DamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(GovernanceAction)12557_storage)": {
              "label": "mapping(uint256 => struct ISimpleGovernance.GovernanceAction)",
              "numberOfBytes": "32"
            },
            "t_struct(GovernanceAction)12557_storage": {
              "label": "struct ISimpleGovernance.GovernanceAction",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proposedAt",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SideEntrance": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceExploit": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:12",
        "version": {
          "withMetadata": "8359ce810e5df458fcd0e53fc69416d979ae17bcfac2cb660e1500d4d2a90762",
          "withoutMetadata": "76c8079cd54b799b4ebe9e0d49561c35c21782df964abd9dd082aeb9a7062936",
          "linkedWithoutMetadata": "76c8079cd54b799b4ebe9e0d49561c35c21782df964abd9dd082aeb9a7062936"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balanceOf()",
          "exploit()",
          "execute()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SideEntranceExploit",
            "src": "contracts/side-entrance/SideEntranceExploit.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "S",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntrance)13410",
              "contract": "SideEntranceExploit",
              "src": "contracts/side-entrance/SideEntranceExploit.sol:13"
            }
          ],
          "types": {
            "t_contract(SideEntrance)13410": {
              "label": "contract SideEntrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IFlashLoanEtherReceiver": {
        "src": "contracts/side-entrance/SideEntranceLenderPool.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceLenderPool": {
        "src": "contracts/side-entrance/SideEntranceLenderPool.sol:15",
        "version": {
          "withMetadata": "690a3dce8717c5466d2cc12dbf84fc128a79fd48619d5be624aca54534467e67",
          "withoutMetadata": "15548b6006e89d74f5c12bf3c4bdcabb069631699345b84b04f3dc2caac589a0",
          "linkedWithoutMetadata": "15548b6006e89d74f5c12bf3c4bdcabb069631699345b84b04f3dc2caac589a0"
        },
        "inherit": [],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "deposit()",
          "withdraw()",
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SideEntranceLenderPool",
              "src": "contracts/side-entrance/SideEntranceLenderPool.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AccountingToken": {
        "src": "contracts/the-rewarder/AccountingToken.sol:14",
        "version": {
          "withMetadata": "dd9302d5117cd5c6f8c6f6cfd6f03bdd68a55f2f5909baade8c2fd8f3dabc2e0",
          "withoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db",
          "linkedWithoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "snapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccountingToken",
            "src": "contracts/the-rewarder/AccountingToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)5061_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)5061_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)6857_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)5061_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6857_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)5061_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FlashLoanerPool": {
        "src": "contracts/the-rewarder/FlashLoanerPool.sol:14",
        "version": {
          "withMetadata": "b6cf364faffb67a9311293324ad13bbcf44dae88c7621e763d4aceab37fd622d",
          "withoutMetadata": "5a080ea82edf5897f193b2e457636bf7b19d73cd14d8a7c6ca402fedc7e9861e",
          "linkedWithoutMetadata": "5a080ea82edf5897f193b2e457636bf7b19d73cd14d8a7c6ca402fedc7e9861e"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FlashLoanerPool",
            "src": "contracts/the-rewarder/FlashLoanerPool.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "liquidityToken",
            "src": "contracts/the-rewarder/FlashLoanerPool.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RewardToken": {
        "src": "contracts/the-rewarder/RewardToken.sol:12",
        "version": {
          "withMetadata": "5e9ef001191b02986ab7e2c2f9d3da443d2bfdd611b59f073913718998802325",
          "withoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c",
          "linkedWithoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewardToken",
            "src": "contracts/the-rewarder/RewardToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "fbe6b08d411c9ac70e2588c03f9170ab879612316a1d6534c55b3b55850e8be8",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)13923",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)13929",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)4960",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)13907",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)4960": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)13907": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)13929": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)13923": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderPool.sol:14",
        "version": {
          "withMetadata": "ae70ba4fecf3f0ffb65c9c1735cce630060fded79a08ce80cb21cf8432874e6a",
          "withoutMetadata": "a41b2701c2a15816aef554d51adb1e46bf413a225772673974ff28f164f090e3",
          "linkedWithoutMetadata": "a41b2701c2a15816aef554d51adb1e46bf413a225772673974ff28f164f090e3"
        },
        "inherit": [],
        "libraries": [
          "FixedPointMathLib",
          "SafeTransferLib",
          "console"
        ],
        "methods": [
          "(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()",
          "isNewRewardsRound()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderPool",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "liquidityToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountingToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rewardToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lastSnapshotIdForRewards",
              "offset": 0,
              "slot": "0",
              "type": "t_uint128",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:32"
            },
            {
              "label": "lastRecordedSnapshotTimestamp",
              "offset": 16,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:33"
            },
            {
              "label": "roundNumber",
              "offset": 24,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:34"
            },
            {
              "label": "lastRewardTimestamps",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint64)",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint64)": {
              "label": "mapping(address => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "60f85cb92ce463c987e6aeae4ed536f6e4705487dc5683d7e804c03eff6e66b0",
          "withoutMetadata": "ba4da2c71f50b64256026665aa16e6b1f79cd546a0c91cef0633910ee7e4faed",
          "linkedWithoutMetadata": "ba4da2c71f50b64256026665aa16e6b1f79cd546a0c91cef0633910ee7e4faed"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)14398",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "E",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)4960",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20)4960": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)14398": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReceiverUnstoppable": {
        "src": "contracts/unstoppable/ReceiverUnstoppable.sol:12",
        "version": {
          "withMetadata": "01fa500f06a24f2b0740580854d3be6f386f174585dd8b33d80e29402c637bf0",
          "withoutMetadata": "a314e95cabc5d00000eca6575da729edead499639043e73a6758b8ba7b583148",
          "linkedWithoutMetadata": "a314e95cabc5d00000eca6575da729edead499639043e73a6758b8ba7b583148"
        },
        "inherit": [
          "IERC3156FlashBorrower",
          "Owned"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "executeFlashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReceiverUnstoppable",
            "src": "contracts/unstoppable/ReceiverUnstoppable.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pool",
            "src": "contracts/unstoppable/ReceiverUnstoppable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate/src/auth/Owned.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnstoppableVault": {
        "src": "contracts/unstoppable/UnstoppableVault.sol:14",
        "version": {
          "withMetadata": "8f5c639f30001bdc4cd23260978c54d8cf369d4accbc08a665e4cef55d98ab97",
          "withoutMetadata": "929faa6e5329cd43c38d6e12b76b7093c8acda3c73bcd35e74256e6b8b078d40",
          "linkedWithoutMetadata": "929faa6e5329cd43c38d6e12b76b7093c8acda3c73bcd35e74256e6b8b078d40"
        },
        "inherit": [
          "ERC4626",
          "ERC20",
          "Owned",
          "ReentrancyGuard",
          "IERC3156FlashLender"
        ],
        "libraries": [
          "SafeTransferLib",
          "FixedPointMathLib"
        ],
        "methods": [
          "(address,address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "setFeeRecipient(address)",
          "totalAssets()",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnstoppableVault",
            "src": "contracts/unstoppable/UnstoppableVault.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "end",
            "src": "contracts/unstoppable/UnstoppableVault.sol:21"
          },
          {
            "kind": "state-variable-immutable",
            "name": "end",
            "src": "contracts/unstoppable/UnstoppableVault.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "solmate/src/utils/ReentrancyGuard.sol:8"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate/src/auth/Owned.sol:17"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "UnstoppableVault",
              "src": "contracts/unstoppable/UnstoppableVault.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AuthorizerUpgradeable": {
        "src": "contracts/wallet-mining/AuthorizerUpgradeable.sol:12",
        "version": {
          "withMetadata": "4c33ef71de605d0528a4da6704098c04af6e0fcc49985e429f59955fe685facc",
          "withoutMetadata": "4e68eb14f62fc8af3b9f479402583178d27e9f31615273b8a5443dd2d74619b5",
          "linkedWithoutMetadata": "4e68eb14f62fc8af3b9f479402583178d27e9f31615273b8a5443dd2d74619b5"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "init(address[],address[])",
          "can(address,address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "wards",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "AuthorizerUpgradeable",
              "src": "contracts/wallet-mining/AuthorizerUpgradeable.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGnosisSafeProxyFactory": {
        "src": "contracts/wallet-mining/WalletDeployer.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WalletDeployer": {
        "src": "contracts/wallet-mining/WalletDeployer.sol:17",
        "version": {
          "withMetadata": "67560163dcb601ffbe90b26d7ae5e7155a55937aededfe96a6f0cc6db080083c",
          "withoutMetadata": "2c783170f31b7b777548ab1e61b20f84422bf3a47121021218ed062e12db996e",
          "linkedWithoutMetadata": "2c783170f31b7b777548ab1e61b20f84422bf3a47121021218ed062e12db996e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "rule(address)",
          "drop(bytes)",
          "can(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WalletDeployer",
            "src": "contracts/wallet-mining/WalletDeployer.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "chief",
            "src": "contracts/wallet-mining/WalletDeployer.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "chief",
            "src": "contracts/wallet-mining/WalletDeployer.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "gem",
            "src": "contracts/wallet-mining/WalletDeployer.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "mom",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "WalletDeployer",
              "src": "contracts/wallet-mining/WalletDeployer.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "solady/src/auth/Ownable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "renounceOwnership()",
          "requestOwnershipHandover()",
          "cancelOwnershipHandover()",
          "completeOwnershipHandover(address)",
          "owner()",
          "ownershipHandoverExpiresAt(address)",
          "ownershipHandoverValidFor()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableRoles": {
        "src": "solady/src/auth/OwnableRoles.sol:11",
        "inherit": [
          "Ownable"
        ],
        "libraries": [],
        "methods": [
          "grantRoles(address,uint256)",
          "revokeRoles(address,uint256)",
          "renounceRoles(uint256)",
          "hasAnyRole(address,uint256)",
          "hasAllRoles(address,uint256)",
          "rolesOf(address)",
          "rolesFromOrdinals(uint8[])",
          "ordinalsFromRoles(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FixedPointMathLib": {
        "src": "solmate/src/utils/FixedPointMathLib.sol:7",
        "version": {
          "withMetadata": "b1d679ee3abc809dd44cb2bf24c6759d883a53ff3cd0843ddf80edceec390619",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LibSort": {
        "src": "solady/src/utils/LibSort.sol:6",
        "version": {
          "withMetadata": "aa8f4f2cabeb9fc9b4e4cbcdd1daf93b006eaa3a4a2423f6196a3f369e53d85c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeTransferLib": {
        "src": "solmate/src/utils/SafeTransferLib.sol:10",
        "version": {
          "withMetadata": "b86328ba394d85a95dff7bb2216feb7de2f654966cbe1daa662d3edca3b23ba3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Owned": {
        "src": "solmate/src/auth/Owned.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "solmate/src/auth/Owned.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate/src/auth/Owned.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC4626": {
        "src": "solmate/src/mixins/ERC4626.sol:10",
        "inherit": [
          "ERC20"
        ],
        "libraries": [
          "SafeTransferLib",
          "FixedPointMathLib"
        ],
        "methods": [
          "deposit(uint256,address)",
          "mint(uint256,address)",
          "withdraw(uint256,address,address)",
          "redeem(uint256,address,address)",
          "totalAssets()",
          "convertToShares(uint256)",
          "convertToAssets(uint256)",
          "previewDeposit(uint256)",
          "previewMint(uint256)",
          "previewWithdraw(uint256)",
          "previewRedeem(uint256)",
          "maxDeposit(address)",
          "maxMint(address)",
          "maxWithdraw(address)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC4626",
            "src": "solmate/src/mixins/ERC4626.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "asset",
            "src": "solmate/src/mixins/ERC4626.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETH": {
        "src": "solmate/src/tokens/WETH.sol:11",
        "version": {
          "withMetadata": "1cf71080db7dcad38785d6aaeda9665c2fbfb2f4a5dcf66b04bfb1257bb1930d",
          "withoutMetadata": "cc022fd82176407a2acacc0cf526b5c8e0bd837bd1aaae897cd4f9c0e90ed79f",
          "linkedWithoutMetadata": "cc022fd82176407a2acacc0cf526b5c8e0bd837bd1aaae897cd4f9c0e90ed79f"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "deposit()",
          "withdraw(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Pair": {
        "src": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@uniswap/v2-periphery/contracts/libraries/SafeMath.sol:5",
        "version": {
          "withMetadata": "16e8a68b6d097b1ac66147cf528304330e10aedb79b4c6d240572094955f8f64",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UniswapV2Library": {
        "src": "@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol:7",
        "version": {
          "withMetadata": "3feb8fd8aefdbb41506624b645202e56724643b28af4b49267506bfc5009d5f8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Pool.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapRouter": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "WETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:25",
        "version": {
          "withMetadata": "2ff71a59e6246b4b22e1f82a57494140f059905e5ec3c6584778bb5d3ac6087d",
          "withoutMetadata": "505d9a6b1f696566c67bedafd2cf6502674821e58ace7d19d245d2e86e97a136",
          "linkedWithoutMetadata": "505d9a6b1f696566c67bedafd2cf6502674821e58ace7d19d245d2e86e97a136"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "swapTokensForETH(uint256,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)1222",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:27"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)1222",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:28"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:29"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:30"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:31"
            },
            {
              "label": "_pool",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:32"
            },
            {
              "label": "_router",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1222": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PuppetV2Pool": {
        "src": "contracts/puppet-v2/PuppetV2Pool.sol:17",
        "version": {
          "withMetadata": "e86200f4694c0d3d13f427d5d1a76a853d793fc17c1a0c54e9a405366a852102",
          "withoutMetadata": "362d65dd9cbf97cd2898059d884d144998bdbde5dd8e52a622dc580dd84ccc48",
          "linkedWithoutMetadata": "362d65dd9cbf97cd2898059d884d144998bdbde5dd8e52a622dc580dd84ccc48"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "UniswapV2Library"
        ],
        "methods": [
          "(address,address,address,address)",
          "borrow(uint256)",
          "calculateDepositOfWETHRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Pool",
            "src": "contracts/puppet-v2/PuppetV2Pool.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:20"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:21"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)1413",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:22"
            },
            {
              "label": "_weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)1413",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:23"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1413": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapRouter": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "WETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:25",
        "version": {
          "withMetadata": "2ff71a59e6246b4b22e1f82a57494140f059905e5ec3c6584778bb5d3ac6087d",
          "withoutMetadata": "505d9a6b1f696566c67bedafd2cf6502674821e58ace7d19d245d2e86e97a136",
          "linkedWithoutMetadata": "505d9a6b1f696566c67bedafd2cf6502674821e58ace7d19d245d2e86e97a136"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "swapTokensForETH(uint256,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:27"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:28"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:29"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:30"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:31"
            },
            {
              "label": "_pool",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:32"
            },
            {
              "label": "_router",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)433": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapRouter": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "WETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:25",
        "version": {
          "withMetadata": "22f289f5df29a3bb9dbdfcf0f039cfdea8c08fb68cecb90940c07ede92e183d6",
          "withoutMetadata": "4604b017390dc56622b30ed83b3795df0a4a4608da807d5c9230afcf31673028",
          "linkedWithoutMetadata": "4604b017390dc56622b30ed83b3795df0a4a4608da807d5c9230afcf31673028"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "swapTokensForETH(uint256,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:27"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:28"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:29"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:30"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:31"
            },
            {
              "label": "_pool",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:32"
            },
            {
              "label": "_router",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)433": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapRouter": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "WETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:25",
        "version": {
          "withMetadata": "2ff71a59e6246b4b22e1f82a57494140f059905e5ec3c6584778bb5d3ac6087d",
          "withoutMetadata": "505d9a6b1f696566c67bedafd2cf6502674821e58ace7d19d245d2e86e97a136",
          "linkedWithoutMetadata": "505d9a6b1f696566c67bedafd2cf6502674821e58ace7d19d245d2e86e97a136"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "swapTokensForETH(uint256,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:27"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:28"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:29"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:30"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:31"
            },
            {
              "label": "_pool",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:32"
            },
            {
              "label": "_router",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)433": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapRouter": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "WETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:25",
        "version": {
          "withMetadata": "fea862117de01b90a755958d1051b8aee5dd9b48d1c771f4d0d239321108af7a",
          "withoutMetadata": "8917de0bcf37455821336265a9a6cd15de01cf547d4d9dcfd8852dc62b8188a8",
          "linkedWithoutMetadata": "8917de0bcf37455821336265a9a6cd15de01cf547d4d9dcfd8852dc62b8188a8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "swapTokensForETH(uint256,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:27"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:28"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:29"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:30"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:31"
            },
            {
              "label": "_pool",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:32"
            },
            {
              "label": "_router",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)433": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapRouter": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "WETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:25",
        "version": {
          "withMetadata": "7e594d7d0d2f23fed714ac78567a83921ea140a37e439265259434a521e9b047",
          "withoutMetadata": "b3396276e33c85f906a9eea1adca3ec4ece97288319fe7ef88ad6dfec28794a0",
          "linkedWithoutMetadata": "b3396276e33c85f906a9eea1adca3ec4ece97288319fe7ef88ad6dfec28794a0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "swapTokensForETH(address,uint256,uint256,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:27"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)433",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:28"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:29"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:30"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:31"
            },
            {
              "label": "_pool",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:32"
            },
            {
              "label": "_router",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)433": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapRouter": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:22",
        "version": {
          "withMetadata": "431c21abcb489b8f6276346b249b08bc7731c950d717bad848c2212d7f3d1cc5",
          "withoutMetadata": "f10aa162a8c82d3a4de2347a9d2dab450582d5f8e2d800ca105021288c9898cf",
          "linkedWithoutMetadata": "f10aa162a8c82d3a4de2347a9d2dab450582d5f8e2d800ca105021288c9898cf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)426",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:24"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)426",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:25"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:26"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:27"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:28"
            },
            {
              "label": "_pool",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:29"
            },
            {
              "label": "_router",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)426": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:12",
        "version": {
          "withMetadata": "2e7e1b49d6a2dc81f13ca0cd6a1b461565c0f55ef8baa61e78999fa43f5a20fd",
          "withoutMetadata": "a7cd122517a99d66a5880ee8c0e40c5e9b5c1a3132361ae0feca27b07220d16e",
          "linkedWithoutMetadata": "a7cd122517a99d66a5880ee8c0e40c5e9b5c1a3132361ae0feca27b07220d16e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address)",
          "_view_data()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)426",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:14"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)426",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:15"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:16"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:17"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:18"
            },
            {
              "label": "_pool",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)426": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:12",
        "version": {
          "withMetadata": "2d8c3de6b36361bf1f9e5e34cb7ce22427655f8aa972866d1b450c87cf1b6767",
          "withoutMetadata": "430a77cb52a3a0dbf986c2688359415a214a4a608a860fd979c6ad4278ea7ddd",
          "linkedWithoutMetadata": "430a77cb52a3a0dbf986c2688359415a214a4a608a860fd979c6ad4278ea7ddd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address)",
          "_view_data()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)426",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:14"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)426",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:15"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:16"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:17"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:18"
            },
            {
              "label": "_pool",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)426": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Exploit": {
        "src": "contracts/puppet-v2/PuppetV2Exploit.sol:12",
        "version": {
          "withMetadata": "304073b59963018b778b0d8b225a0de53b4a9218c88b2fc64d7b2ce94e6e0f36",
          "withoutMetadata": "306ca6f02dd07bb844447a3d02a1cf9ccd7eba843d125d88054208cca1c66d67",
          "linkedWithoutMetadata": "306ca6f02dd07bb844447a3d02a1cf9ccd7eba843d125d88054208cca1c66d67"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Exploit",
            "src": "contracts/puppet-v2/PuppetV2Exploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_weth",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)426",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:14"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)426",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:15"
            },
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:16"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:17"
            },
            {
              "label": "_player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PuppetV2Exploit",
              "src": "contracts/puppet-v2/PuppetV2Exploit.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)426": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "bb59a66fc767d62d21285ec4ee5e099ca51802ee7c234aebf54f268fcdba9b44",
          "withoutMetadata": "0c80620fb77be40f61f1b36892da7be0a2e0123769fa33a0725d861ba2ab1d3c",
          "linkedWithoutMetadata": "0c80620fb77be40f61f1b36892da7be0a2e0123769fa33a0725d861ba2ab1d3c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "_addr()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "22a396469959760e1379d494cac208114da6803c0190d38ec73620213d5feea1",
          "withoutMetadata": "3762a9398709583f5a9982d9120a1d9721723f35fd3ad6c37889a1512c606be0",
          "linkedWithoutMetadata": "3762a9398709583f5a9982d9120a1d9721723f35fd3ad6c37889a1512c606be0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "_addr()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "bb59a66fc767d62d21285ec4ee5e099ca51802ee7c234aebf54f268fcdba9b44",
          "withoutMetadata": "0c80620fb77be40f61f1b36892da7be0a2e0123769fa33a0725d861ba2ab1d3c",
          "linkedWithoutMetadata": "0c80620fb77be40f61f1b36892da7be0a2e0123769fa33a0725d861ba2ab1d3c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "_addr()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "b5a63a76b12ada5be043b71594fb5f98351a406aa385c9d3074d83f0810ff5f8",
          "withoutMetadata": "c5628b30808a21cc01db6083d0762a07974232e526dca0504cef6432194448c8",
          "linkedWithoutMetadata": "c5628b30808a21cc01db6083d0762a07974232e526dca0504cef6432194448c8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "_addr()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "f20ac47a61279a3f974104a0fef83698ce396a904b3b9268ed48d863766b40e8",
          "withoutMetadata": "7a21d3c82c7236b71d4b4a4d5824a61b4037a075c06c79bdf3df7d14423b0b17",
          "linkedWithoutMetadata": "7a21d3c82c7236b71d4b4a4d5824a61b4037a075c06c79bdf3df7d14423b0b17"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "_addr()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "15208a7994553611762ca57cc02867493954f1fdc49b7165e16e54f81f51db96",
          "withoutMetadata": "ddc3e8a5785779b327d0814920dad706072d716d8ac1cc00b5f600d4d8933742",
          "linkedWithoutMetadata": "ddc3e8a5785779b327d0814920dad706072d716d8ac1cc00b5f600d4d8933742"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "_addr()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "f9ea503de98e2703d733b93605945b200220e20e92801a4f7654c0227c5028dd",
          "withoutMetadata": "ffa271188d94969264ea6a47e78a8b62660e4a7f330def20846446a3df201100",
          "linkedWithoutMetadata": "ffa271188d94969264ea6a47e78a8b62660e4a7f330def20846446a3df201100"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "_addr()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "ff566518a89795774ac57f58445551277ce5837d06b24e5d681046165dc84232",
          "withoutMetadata": "ddc3e8a5785779b327d0814920dad706072d716d8ac1cc00b5f600d4d8933742",
          "linkedWithoutMetadata": "ddc3e8a5785779b327d0814920dad706072d716d8ac1cc00b5f600d4d8933742"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "_addr()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "1148fc4d3a7ad1ef1702dd086b89a2b0028e3a7ea7c293d6060827f4875b0053",
          "withoutMetadata": "cb8c0bb8c7bca8167425660b0bc32b4d99ef6db6401bdc3161b8efcdf765b781",
          "linkedWithoutMetadata": "cb8c0bb8c7bca8167425660b0bc32b4d99ef6db6401bdc3161b8efcdf765b781"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "02432997de90941e40dbf56836f4c3e3863cecbe147c803790c88190c3239039",
          "withoutMetadata": "886a449950268cba1e5a72f93df903794f81df8e53a6cbd1304ec1fa51bafaae",
          "linkedWithoutMetadata": "886a449950268cba1e5a72f93df903794f81df8e53a6cbd1304ec1fa51bafaae"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapExchange": {
        "src": "contracts/puppet/IUniswapExchange.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getInputPrice(uint256,uint256,uint256)",
          "getOutputPrice(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)",
          "ethToTokenTransferInput(uint256,uint256,address)",
          "ethToTokenSwapOutput(uint256,uint256)",
          "ethToTokenTransferOutput(uint256,uint256,address)",
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "tokenToEthTransferInput(uint256,uint256,uint256,address)",
          "tokenToEthSwapOutput(uint256,uint256,uint256)",
          "tokenToEthTransferOutput(uint256,uint256,uint256,address)",
          "tokenToTokenSwapInput(uint256,uint256,uint256,uint256,address)",
          "tokenToTokenTransferInput(uint256,uint256,uint256,uint256,address,address)",
          "tokenToTokenSwapOutput(uint256,uint256,uint256,uint256,address)",
          "tokenToTokenTransferOutput(uint256,uint256,uint256,uint256,address,address)",
          "tokenToExchangeSwapInput(uint256,uint256,uint256,uint256,address)",
          "tokenToExchangeTransferInput(uint256,uint256,uint256,uint256,address,address)",
          "tokenToExchangeSwapOutput(uint256,uint256,uint256,uint256,address)",
          "tokenToExchangeTransferOutput(uint256,uint256,uint256,uint256,address,address)",
          "getEthToTokenInputPrice(uint256)",
          "getEthToTokenOutputPrice(uint256)",
          "getTokenToEthInputPrice(uint256)",
          "getTokenToEthOutputPrice(uint256)",
          "tokenAddress()",
          "factoryAddress()",
          "addLiquidity(uint256,uint256,uint256)",
          "removeLiquidity(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AttackPuppet": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "version": {
          "withMetadata": "be5170bbdbc0b51151607f7aeb0af021533fea2d23548d12926c7a8b4ad092b5",
          "withoutMetadata": "d9e4470079f693b166ef1dfdd9522e26135dcb3b703409a225f3b6724f9cab74",
          "linkedWithoutMetadata": "d9e4470079f693b166ef1dfdd9522e26135dcb3b703409a225f3b6724f9cab74"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "swap()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttackPuppet",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amount1",
            "src": "contracts/puppet/PuppetExploit.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amount2",
            "src": "contracts/puppet/PuppetExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "amount1",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "AttackPuppet",
              "src": "contracts/puppet/PuppetExploit.sol:10"
            },
            {
              "label": "amount2",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AttackPuppet",
              "src": "contracts/puppet/PuppetExploit.sol:11"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PuppetPool)990",
              "contract": "AttackPuppet",
              "src": "contracts/puppet/PuppetExploit.sol:12"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(DamnValuableToken)360",
              "contract": "AttackPuppet",
              "src": "contracts/puppet/PuppetExploit.sol:13"
            },
            {
              "label": "exchange",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IUniswapExchange)723",
              "contract": "AttackPuppet",
              "src": "contracts/puppet/PuppetExploit.sol:14"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AttackPuppet",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "count",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "AttackPuppet",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DamnValuableToken)360": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapExchange)723": {
              "label": "contract IUniswapExchange",
              "numberOfBytes": "20"
            },
            "t_contract(PuppetPool)990": {
              "label": "contract PuppetPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PuppetPool": {
        "src": "contracts/puppet/PuppetPool.sol:12",
        "version": {
          "withMetadata": "913a39698f6ff9d65b7ccffda531f8f7a9cfd0c8b14904c571c1112c6345c892",
          "withoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72",
          "linkedWithoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetPool",
            "src": "contracts/puppet/PuppetPool.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswapPair",
            "src": "contracts/puppet/PuppetPool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/puppet/PuppetPool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetPool",
              "src": "contracts/puppet/PuppetPool.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "PuppetAttacker": {
        "src": "contracts/puppet/PuppetExploit.sol:21",
        "version": {
          "withMetadata": "f68ca684deb795327032e7177eafec2ec9799ff6747498025837c3db7ed435ab",
          "withoutMetadata": "459e3de5f1c2d8a113e061059bf793a02ec3655d934848b46b2c08eaa7fb4f72",
          "linkedWithoutMetadata": "459e3de5f1c2d8a113e061059bf793a02ec3655d934848b46b2c08eaa7fb4f72"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetAttacker",
            "src": "contracts/puppet/PuppetExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetPool_": {
        "src": "contracts/puppet/PuppetExploit.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Token_": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Uniswap_": {
        "src": "contracts/puppet/PuppetExploit.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:16",
        "version": {
          "withMetadata": "0bf1b3ea551aa969d39a79107bdbdac96573c5faa7fde834276ae4f79f121c2a",
          "withoutMetadata": "174673e4f51f985cbd6ba822cb36cbda8e3b671f9affbbb908b6a8be5fcac207",
          "linkedWithoutMetadata": "174673e4f51f985cbd6ba822cb36cbda8e3b671f9affbbb908b6a8be5fcac207"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)65",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)50",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:18"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)50": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)65": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "4083cf14e30eef5ade31120b17042aacfa161c5cadcb7ea8c74750785ed59386",
          "withoutMetadata": "886a449950268cba1e5a72f93df903794f81df8e53a6cbd1304ec1fa51bafaae",
          "linkedWithoutMetadata": "886a449950268cba1e5a72f93df903794f81df8e53a6cbd1304ec1fa51bafaae"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "09d46a33c3900095c9656ee0b4fd104714e4c64505171d4be14bdcd1936df57d",
          "withoutMetadata": "d5956f0024138a595c2b9a0e02a9a901d149eaa003610bced45787102d6dde4f",
          "linkedWithoutMetadata": "d5956f0024138a595c2b9a0e02a9a901d149eaa003610bced45787102d6dde4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "9e1f83c4674fc135faf03288a2405088f3780a2ba1448ce6e3bb8f7c65839090",
          "withoutMetadata": "82d835d75ad78ad0c20578706ea64c932c7cf01509e1d0750fad07e4012de4c5",
          "linkedWithoutMetadata": "82d835d75ad78ad0c20578706ea64c932c7cf01509e1d0750fad07e4012de4c5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "ecd98a5205f318b787c91ec681e7752c343c016203adf168fce08190b12a54ef",
          "withoutMetadata": "520e1c441b1ed81525fd6f2473b684cb7ed22aacddf8984f45f99075fd6190f0",
          "linkedWithoutMetadata": "520e1c441b1ed81525fd6f2473b684cb7ed22aacddf8984f45f99075fd6190f0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "9e1f83c4674fc135faf03288a2405088f3780a2ba1448ce6e3bb8f7c65839090",
          "withoutMetadata": "82d835d75ad78ad0c20578706ea64c932c7cf01509e1d0750fad07e4012de4c5",
          "linkedWithoutMetadata": "82d835d75ad78ad0c20578706ea64c932c7cf01509e1d0750fad07e4012de4c5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "46f61a5dc1948b7dba1825ca7f6b201b3ef08e20872326ffc573da9077c781c2",
          "withoutMetadata": "559e1bce51efdb8a780737b4f2c5dbbd320840017322af41480006adfe32ffe0",
          "linkedWithoutMetadata": "559e1bce51efdb8a780737b4f2c5dbbd320840017322af41480006adfe32ffe0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "8684accf43f9b1547ecf08779038c0e7d7f59820e30a5e1b5475764ea033ba7f",
          "withoutMetadata": "28448720c47618d1a2e32f732948f0f50e0113fedf682eea7ec1393472d129c6",
          "linkedWithoutMetadata": "28448720c47618d1a2e32f732948f0f50e0113fedf682eea7ec1393472d129c6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "2c1b30b9d2ba103d813756f873d37022781d08179227e9cc1f2f7b8aaa6cc046",
          "withoutMetadata": "83883da95c505a66c402cb44a7ce3b7bef15622ec0026a60e880b02d08e55c6e",
          "linkedWithoutMetadata": "83883da95c505a66c402cb44a7ce3b7bef15622ec0026a60e880b02d08e55c6e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "88e40530ccaaf4957efc1baa51e8a444c98db52b0c5ea81dda7f9b18e307ac56",
          "withoutMetadata": "10ff504e3fc6ee91b7b13dcda2c158692761ae9f45fbbcd41bf2d0a045f86eb6",
          "linkedWithoutMetadata": "10ff504e3fc6ee91b7b13dcda2c158692761ae9f45fbbcd41bf2d0a045f86eb6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "7c6f05669a38309efe37a19f140f813a3fd3565882adbf3df7d48cafbf6a9359",
          "withoutMetadata": "ebac624e17277fb2d10cb25e79173d1c88d049aea7d3d66acc9e4a58c25325dc",
          "linkedWithoutMetadata": "ebac624e17277fb2d10cb25e79173d1c88d049aea7d3d66acc9e4a58c25325dc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "f13cbbf2806c1c28662323b40af5b0f0b9b92fbfb61570fd41dc5331e3c9487e",
          "withoutMetadata": "70bd80c36c114151eaaf664edda95d5cbf2caed0226c4ce34558ca8bcbff138a",
          "linkedWithoutMetadata": "70bd80c36c114151eaaf664edda95d5cbf2caed0226c4ce34558ca8bcbff138a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "69b6315be6b9f67dc8dc1d80ab09dea6a08c74c33116d42761d3994d45334cee",
          "withoutMetadata": "ec810bc27222b2f683be36767f6a040218c34a54da9cf6a6b24d2b3ab22860a5",
          "linkedWithoutMetadata": "ec810bc27222b2f683be36767f6a040218c34a54da9cf6a6b24d2b3ab22860a5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "736879bfaddebab8c839412710dfd017e102d0ca0444bf3b424bf281a0137bdd",
          "withoutMetadata": "75812ba9b3597ceaba93ed19ad3b74e0b5039770af4c2322259fad2a6de2bc2a",
          "linkedWithoutMetadata": "75812ba9b3597ceaba93ed19ad3b74e0b5039770af4c2322259fad2a6de2bc2a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "46f61a5dc1948b7dba1825ca7f6b201b3ef08e20872326ffc573da9077c781c2",
          "withoutMetadata": "559e1bce51efdb8a780737b4f2c5dbbd320840017322af41480006adfe32ffe0",
          "linkedWithoutMetadata": "559e1bce51efdb8a780737b4f2c5dbbd320840017322af41480006adfe32ffe0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "69b6315be6b9f67dc8dc1d80ab09dea6a08c74c33116d42761d3994d45334cee",
          "withoutMetadata": "ec810bc27222b2f683be36767f6a040218c34a54da9cf6a6b24d2b3ab22860a5",
          "linkedWithoutMetadata": "ec810bc27222b2f683be36767f6a040218c34a54da9cf6a6b24d2b3ab22860a5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "7c6f05669a38309efe37a19f140f813a3fd3565882adbf3df7d48cafbf6a9359",
          "withoutMetadata": "ebac624e17277fb2d10cb25e79173d1c88d049aea7d3d66acc9e4a58c25325dc",
          "linkedWithoutMetadata": "ebac624e17277fb2d10cb25e79173d1c88d049aea7d3d66acc9e4a58c25325dc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "aa6e7515b7f75a50214af7fe65de40fd8e7bcc467b0e5e31020e2512af0836f8",
          "withoutMetadata": "7a7cf8b2bb8fdb745dcf18268c417cc7b529ae863cdb538c90d5984247da5562",
          "linkedWithoutMetadata": "7a7cf8b2bb8fdb745dcf18268c417cc7b529ae863cdb538c90d5984247da5562"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "736879bfaddebab8c839412710dfd017e102d0ca0444bf3b424bf281a0137bdd",
          "withoutMetadata": "75812ba9b3597ceaba93ed19ad3b74e0b5039770af4c2322259fad2a6de2bc2a",
          "linkedWithoutMetadata": "75812ba9b3597ceaba93ed19ad3b74e0b5039770af4c2322259fad2a6de2bc2a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "132ac4fef29e063205f94c957ff48e776e6f83bf6da802bbba7826e11059c38e",
          "withoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea",
          "linkedWithoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "fc13846878b7dbf706b4c6e0bad31679f5ba501a1a41b2b36a4d4ed8affe30ff",
          "withoutMetadata": "8482fe46db924e0263e1cbcb78b52f6c0df5c97648754d205ac3b605a41017ba",
          "linkedWithoutMetadata": "8482fe46db924e0263e1cbcb78b52f6c0df5c97648754d205ac3b605a41017ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "132ac4fef29e063205f94c957ff48e776e6f83bf6da802bbba7826e11059c38e",
          "withoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea",
          "linkedWithoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "07616ddec29ebfa832263e064e80f8b77544871d24b28e60f12e71f676d02731",
          "withoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea",
          "linkedWithoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)56",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)41",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)41": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)56": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "7de6a80d7c340c94f3aa5f978a78c75ff6977f2e9fc89c19ebfe60f8579f7201",
          "withoutMetadata": "3077f8bb0ab9c7109174af5e24333d699442357b63a66fa924a039422dd8e866",
          "linkedWithoutMetadata": "3077f8bb0ab9c7109174af5e24333d699442357b63a66fa924a039422dd8e866"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)54",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)39",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)39": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)54": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "c783a619498472faf917913f2fcf68988266f1be7c426b5eb2899a2d990999e7",
          "withoutMetadata": "9c1e857391962556e83bb95ebec9bd51d9be13427e42851a6d511339287e8e6e",
          "linkedWithoutMetadata": "9c1e857391962556e83bb95ebec9bd51d9be13427e42851a6d511339287e8e6e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)54",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)39",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)39": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)54": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "906b76c8521604755e969dd182f32176641aa86d719eed402c5a3a2428ac33fa",
          "withoutMetadata": "995889c94e8effafdd5bd519c85fbb5e1685e15db03d0a1300a1a22d547bc4a0",
          "linkedWithoutMetadata": "995889c94e8effafdd5bd519c85fbb5e1685e15db03d0a1300a1a22d547bc4a0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)54",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)39",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)39": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)54": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "56a3534f46d49592946198a1e9066ae211342954f3d8cdfa349febc654097814",
          "withoutMetadata": "4f02c6286b46a6b9d1b5b406e52111069e65368e4afab5aa16d11d1b15cb7cca",
          "linkedWithoutMetadata": "4f02c6286b46a6b9d1b5b406e52111069e65368e4afab5aa16d11d1b15cb7cca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)54",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)39",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)39": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)54": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapExchange": {
        "src": "contracts/puppet/IUniswapExchange.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getInputPrice(uint256,uint256,uint256)",
          "getOutputPrice(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)",
          "ethToTokenTransferInput(uint256,uint256,address)",
          "ethToTokenSwapOutput(uint256,uint256)",
          "ethToTokenTransferOutput(uint256,uint256,address)",
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "tokenToEthTransferInput(uint256,uint256,uint256,address)",
          "tokenToEthSwapOutput(uint256,uint256,uint256)",
          "tokenToEthTransferOutput(uint256,uint256,uint256,address)",
          "tokenToTokenSwapInput(uint256,uint256,uint256,uint256,address)",
          "tokenToTokenTransferInput(uint256,uint256,uint256,uint256,address,address)",
          "tokenToTokenSwapOutput(uint256,uint256,uint256,uint256,address)",
          "tokenToTokenTransferOutput(uint256,uint256,uint256,uint256,address,address)",
          "tokenToExchangeSwapInput(uint256,uint256,uint256,uint256,address)",
          "tokenToExchangeTransferInput(uint256,uint256,uint256,uint256,address,address)",
          "tokenToExchangeSwapOutput(uint256,uint256,uint256,uint256,address)",
          "tokenToExchangeTransferOutput(uint256,uint256,uint256,uint256,address,address)",
          "getEthToTokenInputPrice(uint256)",
          "getEthToTokenOutputPrice(uint256)",
          "getTokenToEthInputPrice(uint256)",
          "getTokenToEthOutputPrice(uint256)",
          "tokenAddress()",
          "factoryAddress()",
          "addLiquidity(uint256,uint256,uint256)",
          "removeLiquidity(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:12",
        "version": {
          "withMetadata": "393b1d81cd0d0f5071c4fb33769bff4b804260566df9980abe00b0b295ee383e",
          "withoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea",
          "linkedWithoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(PuppetPool)964",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:13"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapExchange)723",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)360",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)360": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapExchange)723": {
              "label": "contract IUniswapExchange",
              "numberOfBytes": "20"
            },
            "t_contract(PuppetPool)964": {
              "label": "contract PuppetPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PuppetPool": {
        "src": "contracts/puppet/PuppetPool.sol:12",
        "version": {
          "withMetadata": "913a39698f6ff9d65b7ccffda531f8f7a9cfd0c8b14904c571c1112c6345c892",
          "withoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72",
          "linkedWithoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetPool",
            "src": "contracts/puppet/PuppetPool.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswapPair",
            "src": "contracts/puppet/PuppetPool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/puppet/PuppetPool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetPool",
              "src": "contracts/puppet/PuppetPool.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapExchange": {
        "src": "contracts/puppet/IUniswapExchange.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getInputPrice(uint256,uint256,uint256)",
          "getOutputPrice(uint256,uint256,uint256)",
          "ethToTokenSwapInput(uint256,uint256)",
          "ethToTokenTransferInput(uint256,uint256,address)",
          "ethToTokenSwapOutput(uint256,uint256)",
          "ethToTokenTransferOutput(uint256,uint256,address)",
          "tokenToEthSwapInput(uint256,uint256,uint256)",
          "tokenToEthTransferInput(uint256,uint256,uint256,address)",
          "tokenToEthSwapOutput(uint256,uint256,uint256)",
          "tokenToEthTransferOutput(uint256,uint256,uint256,address)",
          "tokenToTokenSwapInput(uint256,uint256,uint256,uint256,address)",
          "tokenToTokenTransferInput(uint256,uint256,uint256,uint256,address,address)",
          "tokenToTokenSwapOutput(uint256,uint256,uint256,uint256,address)",
          "tokenToTokenTransferOutput(uint256,uint256,uint256,uint256,address,address)",
          "tokenToExchangeSwapInput(uint256,uint256,uint256,uint256,address)",
          "tokenToExchangeTransferInput(uint256,uint256,uint256,uint256,address,address)",
          "tokenToExchangeSwapOutput(uint256,uint256,uint256,uint256,address)",
          "tokenToExchangeTransferOutput(uint256,uint256,uint256,uint256,address,address)",
          "getEthToTokenInputPrice(uint256)",
          "getEthToTokenOutputPrice(uint256)",
          "getTokenToEthInputPrice(uint256)",
          "getTokenToEthOutputPrice(uint256)",
          "tokenAddress()",
          "factoryAddress()",
          "addLiquidity(uint256,uint256,uint256)",
          "removeLiquidity(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:12",
        "version": {
          "withMetadata": "bfef34d3bfbe73ddd26880d2d468e089d4401a8baff74796816817d5073d70cc",
          "withoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea",
          "linkedWithoutMetadata": "e9c53345d8fce058ca6b264866ce7c34b423430672896988802e6176e335c5ea"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)408",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:13"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapExchange)388",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapExchange)388": {
              "label": "contract IUniswapExchange",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)408": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "7de6a80d7c340c94f3aa5f978a78c75ff6977f2e9fc89c19ebfe60f8579f7201",
          "withoutMetadata": "3077f8bb0ab9c7109174af5e24333d699442357b63a66fa924a039422dd8e866",
          "linkedWithoutMetadata": "3077f8bb0ab9c7109174af5e24333d699442357b63a66fa924a039422dd8e866"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)54",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswap)39",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswap)39": {
              "label": "contract IUniswap",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)54": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "c54df29fa325682666a0e7013cabb6b9d9ec0889421f61e61fc2364b608e527e",
          "withoutMetadata": "3077f8bb0ab9c7109174af5e24333d699442357b63a66fa924a039422dd8e866",
          "linkedWithoutMetadata": "3077f8bb0ab9c7109174af5e24333d699442357b63a66fa924a039422dd8e866"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)54",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Uniswap)39",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)54": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            },
            "t_contract(Uniswap)39": {
              "label": "contract Uniswap",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Uniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "94b9dd08fe7c78bab7b7ca50ac8ad8e4b40f31a25774246287a13597457c17b3",
          "withoutMetadata": "9c1e857391962556e83bb95ebec9bd51d9be13427e42851a6d511339287e8e6e",
          "linkedWithoutMetadata": "9c1e857391962556e83bb95ebec9bd51d9be13427e42851a6d511339287e8e6e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)54",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Uniswap)39",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)54": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            },
            "t_contract(Uniswap)39": {
              "label": "contract Uniswap",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Uniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "c54df29fa325682666a0e7013cabb6b9d9ec0889421f61e61fc2364b608e527e",
          "withoutMetadata": "3077f8bb0ab9c7109174af5e24333d699442357b63a66fa924a039422dd8e866",
          "linkedWithoutMetadata": "3077f8bb0ab9c7109174af5e24333d699442357b63a66fa924a039422dd8e866"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)54",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Uniswap)39",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)54": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            },
            "t_contract(Uniswap)39": {
              "label": "contract Uniswap",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Uniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:14",
        "version": {
          "withMetadata": "9ba2e1c95250170e7631128c346ba999bd4ed96a65b7fb3a3e91878a43873cd0",
          "withoutMetadata": "047233f6d67a16a95513e1825068e60b5af85221f685ac29b207baff838a0be0",
          "linkedWithoutMetadata": "047233f6d67a16a95513e1825068e60b5af85221f685ac29b207baff838a0be0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)54",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Uniswap)39",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)25",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:17"
            }
          ],
          "types": {
            "t_contract(DamnValuableToken)25": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(Pool)54": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            },
            "t_contract(Uniswap)39": {
              "label": "contract Uniswap",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Uniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:13",
        "version": {
          "withMetadata": "207ca6f26cb7a1411ae0fd7f6ec1d35a53802bf2244ff757e74fdf625a3a7eb3",
          "withoutMetadata": "d6e551c470996a5b936821ad921d1aab0ddb19f6b917d83574d482ade82b7619",
          "linkedWithoutMetadata": "d6e551c470996a5b936821ad921d1aab0ddb19f6b917d83574d482ade82b7619"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)26",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:14"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Uniswap)11",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            }
          ],
          "types": {
            "t_contract(Pool)26": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            },
            "t_contract(Uniswap)11": {
              "label": "contract Uniswap",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Uniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Pool": {
        "src": "contracts/puppet/PuppetExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:13",
        "version": {
          "withMetadata": "4282ddb26a082ad3d22fd9aa75c21148e35f13f0c195fccc6863db2dd8374da4",
          "withoutMetadata": "68ef988a11407c5362500623578dc55781c7221b1498c049d0c52f9a24dd0624",
          "linkedWithoutMetadata": "68ef988a11407c5362500623578dc55781c7221b1498c049d0c52f9a24dd0624"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Pool)26",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:14"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Uniswap)11",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            }
          ],
          "types": {
            "t_contract(Pool)26": {
              "label": "contract Pool",
              "numberOfBytes": "20"
            },
            "t_contract(Uniswap)11": {
              "label": "contract Uniswap",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Uniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Puppet": {
        "src": "contracts/puppet/PuppetExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:13",
        "version": {
          "withMetadata": "2d99b8c85e23c51ae2c77ffed51a50d04a701910e2ab711343cbb86d1e3f8cc8",
          "withoutMetadata": "4462273632e7fb7d2ad0af1c462d23ff9da8651f7a76e75b5b9a357c86757697",
          "linkedWithoutMetadata": "4462273632e7fb7d2ad0af1c462d23ff9da8651f7a76e75b5b9a357c86757697"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Puppet)16",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:14"
            }
          ],
          "types": {
            "t_contract(Puppet)16": {
              "label": "contract Puppet",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Puppet": {
        "src": "contracts/puppet/PuppetExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:13",
        "version": {
          "withMetadata": "a0a6001589611fe1e9d706b169e04be740700056d6953367b20ad7e3f35c0bfa",
          "withoutMetadata": "1d922bb03d298cdfa476487f21941df1ec348464eb218d1fd50be5f8d4e05cc8",
          "linkedWithoutMetadata": "1d922bb03d298cdfa476487f21941df1ec348464eb218d1fd50be5f8d4e05cc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Puppet)26",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:14"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Uniswap)11",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            }
          ],
          "types": {
            "t_contract(Puppet)26": {
              "label": "contract Puppet",
              "numberOfBytes": "20"
            },
            "t_contract(Uniswap)11": {
              "label": "contract Uniswap",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Uniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Puppet": {
        "src": "contracts/puppet/PuppetExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetExploit": {
        "src": "contracts/puppet/PuppetExploit.sol:13",
        "version": {
          "withMetadata": "cfd835b5bb572b8a2c4460124eafb2cfee7a15dacb6bc381415f8b5f7b261b8b",
          "withoutMetadata": "68ef988a11407c5362500623578dc55781c7221b1498c049d0c52f9a24dd0624",
          "linkedWithoutMetadata": "68ef988a11407c5362500623578dc55781c7221b1498c049d0c52f9a24dd0624"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetExploit",
            "src": "contracts/puppet/PuppetExploit.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Puppet)26",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:14"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Uniswap)11",
              "contract": "PuppetExploit",
              "src": "contracts/puppet/PuppetExploit.sol:15"
            }
          ],
          "types": {
            "t_contract(Puppet)26": {
              "label": "contract Puppet",
              "numberOfBytes": "20"
            },
            "t_contract(Uniswap)11": {
              "label": "contract Uniswap",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Uniswap": {
        "src": "contracts/puppet/PuppetExploit.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthSwapInput(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "ERC165",
          "IERC165",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)19_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AccessControlEnumerable": {
        "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:13",
        "inherit": [
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControlEnumerable",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)2531_storage)",
              "contract": "AccessControlEnumerable",
              "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)2531_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2531_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2230_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)19_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2230_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAccessControlEnumerable": {
        "src": "@openzeppelin/contracts/access/IAccessControlEnumerable.sol:11",
        "inherit": [
          "IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "9f023b903b41630670b0fa6fd541ca4980908980eb5b26a8c51f04f3dc6079df",
          "withoutMetadata": "ec2b03b26bc843bec40bcade1595cd999bb83fb78eb039972e923f40d6b460be",
          "linkedWithoutMetadata": "ec2b03b26bc843bec40bcade1595cd999bb83fb78eb039972e923f40d6b460be"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "fd40d8ea8bea82af2079c30c856c0d79b1737610b260b0b90b633ac1d5931b22",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:38",
        "version": {
          "withMetadata": "c125d14211d838b012854b63105a733b5214b1e8f269dfa8bb1127b37a6c2f42",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableNFT": {
        "src": "contracts/DamnValuableNFT.sol:13",
        "version": {
          "withMetadata": "3e85dbb94f62df048d83f6c52a269c2092933c19b1093a3c0abe715766bfc2ca",
          "withoutMetadata": "c074aa150e2f9248f568f8307186172071aa176d6c31fe9b7f28266352fe4c86",
          "linkedWithoutMetadata": "c074aa150e2f9248f568f8307186172071aa176d6c31fe9b7f28266352fe4c86"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC721Burnable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "safeMint(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableNFT",
            "src": "contracts/DamnValuableNFT.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DamnValuableNFT",
              "src": "contracts/DamnValuableNFT.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Exchange": {
        "src": "contracts/compromised/Exchange.sol:13",
        "version": {
          "withMetadata": "9842e6c036533b9161a2a166d0be0d03bc47618ae73a4072ceb7f8999e83545c",
          "withoutMetadata": "73f2c676d65da64189c93a2460dc7676c85d920e271131c5df8ffa91b96d075e",
          "linkedWithoutMetadata": "73f2c676d65da64189c93a2460dc7676c85d920e271131c5df8ffa91b96d075e"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "buyOne()",
          "sellOne(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Exchange",
            "src": "contracts/compromised/Exchange.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/compromised/Exchange.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "oracle",
            "src": "contracts/compromised/Exchange.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrustfulOracle": {
        "src": "contracts/compromised/TrustfulOracle.sol:14",
        "version": {
          "withMetadata": "6bc4f9b2180fc6404c974e5d92ab841345d271e66dc4542f153d18e8e2b38657",
          "withoutMetadata": "48fea9c040abc744dbbd5627858061e16925140e19945063abbd9fe89ccac777",
          "linkedWithoutMetadata": "48fea9c040abc744dbbd5627858061e16925140e19945063abbd9fe89ccac777"
        },
        "inherit": [
          "AccessControlEnumerable",
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControlEnumerable",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "LibSort"
        ],
        "methods": [
          "(address[],bool)",
          "setupInitialPrices(address[],string[],uint256[])",
          "postPrice(string,uint256)",
          "getMedianPrice(string)",
          "getAllPricesForSymbol(string)",
          "getPriceBySource(string,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrustfulOracle",
            "src": "contracts/compromised/TrustfulOracle.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)2531_storage)",
              "contract": "AccessControlEnumerable",
              "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:16"
            },
            {
              "label": "_pricesBySource",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "TrustfulOracle",
              "src": "contracts/compromised/TrustfulOracle.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)2531_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2531_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2230_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)19_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2230_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrustfulOracleInitializer": {
        "src": "contracts/compromised/TrustfulOracleInitializer.sol:10",
        "version": {
          "withMetadata": "060d7bf1f908c663d18878109858aed37cf6a0abc1b15368809c8a0045a83154",
          "withoutMetadata": "90afaf52087944c708d6cb2ad864418462a5f1b32e7732f1ec467b2cabb87250",
          "linkedWithoutMetadata": "90afaf52087944c708d6cb2ad864418462a5f1b32e7732f1ec467b2cabb87250"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],string[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrustfulOracleInitializer",
            "src": "contracts/compromised/TrustfulOracleInitializer.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(TrustfulOracle)3445",
              "contract": "TrustfulOracleInitializer",
              "src": "contracts/compromised/TrustfulOracleInitializer.sol:13"
            }
          ],
          "types": {
            "t_contract(TrustfulOracle)3445": {
              "label": "contract TrustfulOracle",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "solady/src/auth/Ownable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "renounceOwnership()",
          "requestOwnershipHandover()",
          "cancelOwnershipHandover()",
          "completeOwnershipHandover(address)",
          "owner()",
          "ownershipHandoverExpiresAt(address)",
          "ownershipHandoverValidFor()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableRoles": {
        "src": "solady/src/auth/OwnableRoles.sol:11",
        "inherit": [
          "Ownable"
        ],
        "libraries": [],
        "methods": [
          "grantRoles(address,uint256)",
          "revokeRoles(address,uint256)",
          "renounceRoles(uint256)",
          "hasAnyRole(address,uint256)",
          "hasAllRoles(address,uint256)",
          "rolesOf(address)",
          "rolesFromOrdinals(uint8[])",
          "ordinalsFromRoles(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LibSort": {
        "src": "solady/src/utils/LibSort.sol:6",
        "version": {
          "withMetadata": "aa8f4f2cabeb9fc9b4e4cbcdd1daf93b006eaa3a4a2423f6196a3f369e53d85c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "fed05c2b1c5891318c144046681e699303d5831d16e04c78c248e4fc7772aa5f",
          "withoutMetadata": "7b4aa616b2d613bbd02d4ac9c02979747d5d1fa3da337dff1207b0c82a3150f2",
          "linkedWithoutMetadata": "7b4aa616b2d613bbd02d4ac9c02979747d5d1fa3da337dff1207b0c82a3150f2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "f7bf3cc4ad2d68c7cf77d07679cbfd6d9e011d03133274c496f42a0ab5b918c6",
          "withoutMetadata": "7b4aa616b2d613bbd02d4ac9c02979747d5d1fa3da337dff1207b0c82a3150f2",
          "linkedWithoutMetadata": "7b4aa616b2d613bbd02d4ac9c02979747d5d1fa3da337dff1207b0c82a3150f2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "fc149eb0b25f7f51fcb2443e83e3ada38779da9a6a4baef7595a2c3102140cff",
          "withoutMetadata": "3e5cafd63660ec9a5628eeae49b8ebcd931a585d9c17efd3053fd4ffe47d794b",
          "linkedWithoutMetadata": "3e5cafd63660ec9a5628eeae49b8ebcd931a585d9c17efd3053fd4ffe47d794b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "72529824cb4fdb124c5c984306019ea6e372894c1c4be661ef6cc494c5610944",
          "withoutMetadata": "f36e1d288b785d2c98d6703d4e9348b80d720ff381538ba8292e88cfa937434f",
          "linkedWithoutMetadata": "f36e1d288b785d2c98d6703d4e9348b80d720ff381538ba8292e88cfa937434f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableTokenSnapshot": {
        "src": "contracts/DamnValuableTokenSnapshot.sol:11",
        "version": {
          "withMetadata": "db14bdf42c78dc7e942731390b31456393a4893551369250e89711aa4dd6c0e5",
          "withoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f",
          "linkedWithoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f"
        },
        "inherit": [
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "snapshot()",
          "getBalanceAtLastSnapshot(address)",
          "getTotalSupplyAtLastSnapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableTokenSnapshot",
            "src": "contracts/DamnValuableTokenSnapshot.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            },
            {
              "label": "_lastSnapshotId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DamnValuableTokenSnapshot",
              "src": "contracts/DamnValuableTokenSnapshot.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ISimpleGovernance": {
        "src": "contracts/selfie/ISimpleGovernance.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "d928cc529ce34529a80e3a28a3167aba30c9468f4d337d197f5acddb969b2fe6",
          "withoutMetadata": "e4f877524b4e7b9f536cefb4b05795948bd70603597d428ea37bdfb55077da41",
          "linkedWithoutMetadata": "e4f877524b4e7b9f536cefb4b05795948bd70603597d428ea37bdfb55077da41"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1972",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1991",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)2022",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)2022": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1991": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1972": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SelfiePool": {
        "src": "contracts/selfie/SelfiePool.sol:15",
        "version": {
          "withMetadata": "7707d76863addef8af9b3d106c7b9b2ab1529244d573e7db9a0f3bf704d08e5b",
          "withoutMetadata": "0c7fb8f86d00c6ccf27cef2e84f76ac997b192b843b4adc60c56d461933e8d13",
          "linkedWithoutMetadata": "0c7fb8f86d00c6ccf27cef2e84f76ac997b192b843b4adc60c56d461933e8d13"
        },
        "inherit": [
          "IERC3156FlashLender",
          "ReentrancyGuard"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfiePool",
            "src": "contracts/selfie/SelfiePool.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/selfie/SelfiePool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "governance",
            "src": "contracts/selfie/SelfiePool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SimpleGovernance": {
        "src": "contracts/selfie/SimpleGovernance.sol:12",
        "version": {
          "withMetadata": "141f0eb0a8983b339944378a8cb37e82bf41ead00f4d20921704d7bda97a289f",
          "withoutMetadata": "dc7894ff5a63cc3bcf5aa71170954b02c4fa61b7eb4d53cdbb684b8483fec1a0",
          "linkedWithoutMetadata": "dc7894ff5a63cc3bcf5aa71170954b02c4fa61b7eb4d53cdbb684b8483fec1a0"
        },
        "inherit": [
          "ISimpleGovernance"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleGovernance",
            "src": "contracts/selfie/SimpleGovernance.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_governanceToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DamnValuableTokenSnapshot)1862",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:15"
            },
            {
              "label": "_actionCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:16"
            },
            {
              "label": "_actions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableTokenSnapshot)1862": {
              "label": "contract DamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)": {
              "label": "mapping(uint256 => struct ISimpleGovernance.GovernanceAction)",
              "numberOfBytes": "32"
            },
            "t_struct(GovernanceAction)1875_storage": {
              "label": "struct ISimpleGovernance.GovernanceAction",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proposedAt",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "c3bd55e31ab8bc23d29d4755fd060e28b51f4c1c2c4d6698f6815989abf404ab",
          "withoutMetadata": "0cc05e0cbb9ec590703530025a02c92809fd32b1fe318ab2c652fb7b6daa4e72",
          "linkedWithoutMetadata": "0cc05e0cbb9ec590703530025a02c92809fd32b1fe318ab2c652fb7b6daa4e72"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "72529824cb4fdb124c5c984306019ea6e372894c1c4be661ef6cc494c5610944",
          "withoutMetadata": "f36e1d288b785d2c98d6703d4e9348b80d720ff381538ba8292e88cfa937434f",
          "linkedWithoutMetadata": "f36e1d288b785d2c98d6703d4e9348b80d720ff381538ba8292e88cfa937434f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "21cfd69594b2f3e0a8cd24f4196875627e9151d818af0a02ae15da91488b9c2b",
          "withoutMetadata": "0af6edaa62f5f6481f47d9a76edcc2eb60a81e204b1234d729a54ffd5e12e59a",
          "linkedWithoutMetadata": "0af6edaa62f5f6481f47d9a76edcc2eb60a81e204b1234d729a54ffd5e12e59a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "bcff64f5c916c51325db1bbeee47d4be56937ad9631670154501e962afa4ed05",
          "withoutMetadata": "1b936451500b0f7d226427158114ff9e4faecb5a5580f6b92528ca92826818d0",
          "linkedWithoutMetadata": "1b936451500b0f7d226427158114ff9e4faecb5a5580f6b92528ca92826818d0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "505c6436578353948f258929b2a4febda4b32fd70e356ba89d391534477e3a03",
          "withoutMetadata": "dec9d36bbb4d79e81cf7ff1fcbd97aae0c7cfa978b4dc47ce8b150d7f2a5e8f9",
          "linkedWithoutMetadata": "dec9d36bbb4d79e81cf7ff1fcbd97aae0c7cfa978b4dc47ce8b150d7f2a5e8f9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:34",
        "version": {
          "withMetadata": "bcff64f5c916c51325db1bbeee47d4be56937ad9631670154501e962afa4ed05",
          "withoutMetadata": "1b936451500b0f7d226427158114ff9e4faecb5a5580f6b92528ca92826818d0",
          "linkedWithoutMetadata": "1b936451500b0f7d226427158114ff9e4faecb5a5580f6b92528ca92826818d0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1876",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:38"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1876": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "aed9ddadd7ddece310cb7a94f0af4ceb97cd724c0e4fee170e6e5102a1c5c875",
          "withoutMetadata": "10c2754ff491d561f94f8e6545c23b5dd38ffea1358dc36eededec7a24492609",
          "linkedWithoutMetadata": "10c2754ff491d561f94f8e6545c23b5dd38ffea1358dc36eededec7a24492609"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "daef77a18707ca7dff602264f62dd62e35a273acf4e0f8fd976809f3e0b4057b",
          "withoutMetadata": "854381ddd08f9c9ad0769ea117bbd382a539ab8a0d8033d8f7fd5823b1ee51e2",
          "linkedWithoutMetadata": "854381ddd08f9c9ad0769ea117bbd382a539ab8a0d8033d8f7fd5823b1ee51e2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "830c0cd19fd641cc5eb4341a28a9e48ca802c0c67741dc5d43e409a58f443fc9",
          "withoutMetadata": "c66a309eddb9f28ed0c7d70ecd7e1964c06f5b4d2b3f21390ba45dc04397d68a",
          "linkedWithoutMetadata": "c66a309eddb9f28ed0c7d70ecd7e1964c06f5b4d2b3f21390ba45dc04397d68a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "04ae2549f07abcab7d4dd839bdb6581d28fbcffd742ac15b36d4f1f41e2d183d",
          "withoutMetadata": "388e8ab1dd934e1d08539ff1c9d854c3d99b0584ba3d4eed9fe763b3c4bb38e2",
          "linkedWithoutMetadata": "388e8ab1dd934e1d08539ff1c9d854c3d99b0584ba3d4eed9fe763b3c4bb38e2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "c74c214e89c2c39b234540c2012c393eb595a2ff2cb0cf421ef0e01b90b9419b",
          "withoutMetadata": "c0aafcd4962d7e4a1ba9b5669732c165aea91c45be78880d3b1546d78d832983",
          "linkedWithoutMetadata": "c0aafcd4962d7e4a1ba9b5669732c165aea91c45be78880d3b1546d78d832983"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "77fcc7a72587050e2aa131053c23f7a68dfad2d34d64bab33afda659a5ebce2b",
          "withoutMetadata": "f07a23c77c53d7de7929dc2693597d4a1c536b31438bfb3b966ddfb7a677dd79",
          "linkedWithoutMetadata": "f07a23c77c53d7de7929dc2693597d4a1c536b31438bfb3b966ddfb7a677dd79"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "af8dfe163988221327c8a736064eeae53c6d5fe9c839dce56ca6178bc083632b",
          "withoutMetadata": "8bd68c671757adb841a30b5da842c55abcd11cf6f2326de89d2774ac04fdfe52",
          "linkedWithoutMetadata": "8bd68c671757adb841a30b5da842c55abcd11cf6f2326de89d2774ac04fdfe52"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "9108da1ba234a285a1900fd46d7a3ddff970befe84738c318d195fbfde8f1f7d",
          "withoutMetadata": "c66b1847089202ba5016dc12339a61b43881240060b4ee47f5d020ee65eabd2a",
          "linkedWithoutMetadata": "c66b1847089202ba5016dc12339a61b43881240060b4ee47f5d020ee65eabd2a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "5564df835041d7de23c6311073c488fb71aad2ef2d8d7ef607f43e86d47b4003",
          "withoutMetadata": "f07a23c77c53d7de7929dc2693597d4a1c536b31438bfb3b966ddfb7a677dd79",
          "linkedWithoutMetadata": "f07a23c77c53d7de7929dc2693597d4a1c536b31438bfb3b966ddfb7a677dd79"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:33",
        "version": {
          "withMetadata": "a73f4527e2f1190286a708f4384aa1f1a6c12acabcaacd9c5db82e75aab44b5c",
          "withoutMetadata": "d6faacab9d30454b640daca92654068118e871c5b72f75a7f59b682b1ae01dfa",
          "linkedWithoutMetadata": "d6faacab9d30454b640daca92654068118e871c5b72f75a7f59b682b1ae01dfa"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1826",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1845",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1869",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:37"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1869": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1845": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1826": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableTokenSnapshot": {
        "src": "contracts/DamnValuableTokenSnapshot.sol:11",
        "version": {
          "withMetadata": "db14bdf42c78dc7e942731390b31456393a4893551369250e89711aa4dd6c0e5",
          "withoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f",
          "linkedWithoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f"
        },
        "inherit": [
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "snapshot()",
          "getBalanceAtLastSnapshot(address)",
          "getTotalSupplyAtLastSnapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableTokenSnapshot",
            "src": "contracts/DamnValuableTokenSnapshot.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            },
            {
              "label": "_lastSnapshotId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DamnValuableTokenSnapshot",
              "src": "contracts/DamnValuableTokenSnapshot.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ISimpleGovernance": {
        "src": "contracts/selfie/ISimpleGovernance.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:32",
        "version": {
          "withMetadata": "27fc5d17ad99e0a88a27c04c48f9a375ec2c35cc4f84c36a74f5cee669990ff8",
          "withoutMetadata": "9e6102312d74b41c7d235ef0b73bb02f87aa731387068d9568a5eebdf7ba7e72",
          "linkedWithoutMetadata": "9e6102312d74b41c7d235ef0b73bb02f87aa731387068d9568a5eebdf7ba7e72"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1971",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:33"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1990",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)2014",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)2014": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1990": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1971": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SelfiePool": {
        "src": "contracts/selfie/SelfiePool.sol:15",
        "version": {
          "withMetadata": "1f9dcecec55172a411827eb5774ad157c07a7091fe0e42f6480c917933d85e74",
          "withoutMetadata": "383e1bcd50a9029e3ed448b6ddde1b059ec40f7c588516c043d0af050d741d8c",
          "linkedWithoutMetadata": "383e1bcd50a9029e3ed448b6ddde1b059ec40f7c588516c043d0af050d741d8c"
        },
        "inherit": [
          "IERC3156FlashLender",
          "ReentrancyGuard"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfiePool",
            "src": "contracts/selfie/SelfiePool.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/selfie/SelfiePool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "governance",
            "src": "contracts/selfie/SelfiePool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SimpleGovernance": {
        "src": "contracts/selfie/SimpleGovernance.sol:12",
        "version": {
          "withMetadata": "141f0eb0a8983b339944378a8cb37e82bf41ead00f4d20921704d7bda97a289f",
          "withoutMetadata": "dc7894ff5a63cc3bcf5aa71170954b02c4fa61b7eb4d53cdbb684b8483fec1a0",
          "linkedWithoutMetadata": "dc7894ff5a63cc3bcf5aa71170954b02c4fa61b7eb4d53cdbb684b8483fec1a0"
        },
        "inherit": [
          "ISimpleGovernance"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleGovernance",
            "src": "contracts/selfie/SimpleGovernance.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_governanceToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DamnValuableTokenSnapshot)1862",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:15"
            },
            {
              "label": "_actionCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:16"
            },
            {
              "label": "_actions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableTokenSnapshot)1862": {
              "label": "contract DamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)": {
              "label": "mapping(uint256 => struct ISimpleGovernance.GovernanceAction)",
              "numberOfBytes": "32"
            },
            "t_struct(GovernanceAction)1875_storage": {
              "label": "struct ISimpleGovernance.GovernanceAction",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proposedAt",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:32",
        "version": {
          "withMetadata": "59bfab79aec231e7a7653859bc789ff43de8725f57fb8fb3bc9bc3392fcdd85b",
          "withoutMetadata": "d6faacab9d30454b640daca92654068118e871c5b72f75a7f59b682b1ae01dfa",
          "linkedWithoutMetadata": "d6faacab9d30454b640daca92654068118e871c5b72f75a7f59b682b1ae01dfa"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:33"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1868",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1868": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:32",
        "version": {
          "withMetadata": "925ea2f14f908293ff9b09fef277c8ac454ef69e7f1773eba3eda19a9977fc94",
          "withoutMetadata": "cc99a74eadee0acc8792c335d0652e8785f25daa0f0309cf8690a73e6e9ed21d",
          "linkedWithoutMetadata": "cc99a74eadee0acc8792c335d0652e8785f25daa0f0309cf8690a73e6e9ed21d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:33"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1868",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1868": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:32",
        "version": {
          "withMetadata": "1c96597397b3d7aeb60d91eaadcd6c26acbe1618cc9c6f1a55673b2585118eb4",
          "withoutMetadata": "608578b87084fab69c6049d4899314040b888adf92d9246167e2187b29c9d41a",
          "linkedWithoutMetadata": "608578b87084fab69c6049d4899314040b888adf92d9246167e2187b29c9d41a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:33"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1868",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1868": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:32",
        "version": {
          "withMetadata": "2af016e03d0eaf10c034e07d396538b5ec0dc2e68bf725785b81a97ed0f9e0c8",
          "withoutMetadata": "04d384de6191db4b2ead7ad90b0c5abf65711545614e605faa9516cb520b6d65",
          "linkedWithoutMetadata": "04d384de6191db4b2ead7ad90b0c5abf65711545614e605faa9516cb520b6d65"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:33"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1868",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1868": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:32",
        "version": {
          "withMetadata": "48e34da0a44e4afca3ca6ec06bf85dba1e9176708b0cfc06e00afbda0871accb",
          "withoutMetadata": "82ef47a4b8206870bcd6a7f99971e86783ac37d2d6a4985418dbc2803aac1c61",
          "linkedWithoutMetadata": "82ef47a4b8206870bcd6a7f99971e86783ac37d2d6a4985418dbc2803aac1c61"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:33"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1868",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:36"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1868": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:31",
        "version": {
          "withMetadata": "d1ef7213fa60166f7eae80f3bbed4218e21c6c2e34d1763b3ad0d8b4be9d84ef",
          "withoutMetadata": "177691acf02491dd3d4d2f6dd6a0d379f5b680c08137f2ad1779648d463c4736",
          "linkedWithoutMetadata": "177691acf02491dd3d4d2f6dd6a0d379f5b680c08137f2ad1779648d463c4736"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "_run_actionid()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:32"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:33"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1859",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1859": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableTokenSnapshot": {
        "src": "contracts/DamnValuableTokenSnapshot.sol:11",
        "version": {
          "withMetadata": "db14bdf42c78dc7e942731390b31456393a4893551369250e89711aa4dd6c0e5",
          "withoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f",
          "linkedWithoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f"
        },
        "inherit": [
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "snapshot()",
          "getBalanceAtLastSnapshot(address)",
          "getTotalSupplyAtLastSnapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableTokenSnapshot",
            "src": "contracts/DamnValuableTokenSnapshot.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            },
            {
              "label": "_lastSnapshotId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DamnValuableTokenSnapshot",
              "src": "contracts/DamnValuableTokenSnapshot.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ISimpleGovernance": {
        "src": "contracts/selfie/ISimpleGovernance.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfiePool": {
        "src": "contracts/selfie/SelfiePool.sol:15",
        "version": {
          "withMetadata": "6db5d39ffae863ece872843362ae8c0ba71749d3b17af47c55297d1e888acfa7",
          "withoutMetadata": "383e1bcd50a9029e3ed448b6ddde1b059ec40f7c588516c043d0af050d741d8c",
          "linkedWithoutMetadata": "383e1bcd50a9029e3ed448b6ddde1b059ec40f7c588516c043d0af050d741d8c"
        },
        "inherit": [
          "IERC3156FlashLender",
          "ReentrancyGuard"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfiePool",
            "src": "contracts/selfie/SelfiePool.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/selfie/SelfiePool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "governance",
            "src": "contracts/selfie/SelfiePool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SimpleGovernance": {
        "src": "contracts/selfie/SimpleGovernance.sol:12",
        "version": {
          "withMetadata": "642f2237fb7ac96ec814b2c295be27f638c9f1d30f7b45a6bcdc8ef3c96f1172",
          "withoutMetadata": "dc7894ff5a63cc3bcf5aa71170954b02c4fa61b7eb4d53cdbb684b8483fec1a0",
          "linkedWithoutMetadata": "dc7894ff5a63cc3bcf5aa71170954b02c4fa61b7eb4d53cdbb684b8483fec1a0"
        },
        "inherit": [
          "ISimpleGovernance"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleGovernance",
            "src": "contracts/selfie/SimpleGovernance.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_governanceToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DamnValuableTokenSnapshot)1862",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:15"
            },
            {
              "label": "_actionCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:16"
            },
            {
              "label": "_actions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableTokenSnapshot)1862": {
              "label": "contract DamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)": {
              "label": "mapping(uint256 => struct ISimpleGovernance.GovernanceAction)",
              "numberOfBytes": "32"
            },
            "t_struct(GovernanceAction)1875_storage": {
              "label": "struct ISimpleGovernance.GovernanceAction",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proposedAt",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:31",
        "version": {
          "withMetadata": "74019ab4114601bdc8cb627cdcb01bdb4e38195b928d5b280b4579aca366553b",
          "withoutMetadata": "d7dd2563ee9de3933642ac4bbf26954eefa28666bf022a4b6c7d1e61f1970be8",
          "linkedWithoutMetadata": "d7dd2563ee9de3933642ac4bbf26954eefa28666bf022a4b6c7d1e61f1970be8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:32"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:33"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1859",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1859": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableTokenSnapshot": {
        "src": "contracts/selfie/SelfieExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "snapshot()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:31",
        "version": {
          "withMetadata": "dd5600239b98bca4942050bc4f2759182e2c399054941f6f4eecb66ef384da11",
          "withoutMetadata": "5ffc25693f42f8045ff4d2149b836fe16fc4a9f9e7a1482628cf32136a7215bc",
          "linkedWithoutMetadata": "5ffc25693f42f8045ff4d2149b836fe16fc4a9f9e7a1482628cf32136a7215bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit(uint256)",
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:32"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:33"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IDamnValuableTokenSnapshot)1859",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:34"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:35"
            }
          ],
          "types": {
            "t_contract(IDamnValuableTokenSnapshot)1859": {
              "label": "contract IDamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableTokenSnapshot": {
        "src": "contracts/DamnValuableTokenSnapshot.sol:11",
        "version": {
          "withMetadata": "db14bdf42c78dc7e942731390b31456393a4893551369250e89711aa4dd6c0e5",
          "withoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f",
          "linkedWithoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f"
        },
        "inherit": [
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "snapshot()",
          "getBalanceAtLastSnapshot(address)",
          "getTotalSupplyAtLastSnapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableTokenSnapshot",
            "src": "contracts/DamnValuableTokenSnapshot.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            },
            {
              "label": "_lastSnapshotId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DamnValuableTokenSnapshot",
              "src": "contracts/DamnValuableTokenSnapshot.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ISimpleGovernance": {
        "src": "contracts/selfie/ISimpleGovernance.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfiePool": {
        "src": "contracts/selfie/SelfiePool.sol:15",
        "version": {
          "withMetadata": "86538c3c765d7e92bbda164401176e8dbb77a55818b213cca46a11a9ffc2f68f",
          "withoutMetadata": "383e1bcd50a9029e3ed448b6ddde1b059ec40f7c588516c043d0af050d741d8c",
          "linkedWithoutMetadata": "383e1bcd50a9029e3ed448b6ddde1b059ec40f7c588516c043d0af050d741d8c"
        },
        "inherit": [
          "IERC3156FlashLender",
          "ReentrancyGuard"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfiePool",
            "src": "contracts/selfie/SelfiePool.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/selfie/SelfiePool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "governance",
            "src": "contracts/selfie/SelfiePool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SimpleGovernance": {
        "src": "contracts/selfie/SimpleGovernance.sol:11",
        "version": {
          "withMetadata": "357376096dc44981d616ceb8801547dc1e12b54737947276e3787fcfa55e99b8",
          "withoutMetadata": "82048fab24c9f9550b1c4a5740443c978c7daf763c21a66ebf4621c5b49e3655",
          "linkedWithoutMetadata": "82048fab24c9f9550b1c4a5740443c978c7daf763c21a66ebf4621c5b49e3655"
        },
        "inherit": [
          "ISimpleGovernance"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleGovernance",
            "src": "contracts/selfie/SimpleGovernance.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_governanceToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DamnValuableTokenSnapshot)1862",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:14"
            },
            {
              "label": "_actionCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:15"
            },
            {
              "label": "_actions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableTokenSnapshot)1862": {
              "label": "contract DamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)": {
              "label": "mapping(uint256 => struct ISimpleGovernance.GovernanceAction)",
              "numberOfBytes": "32"
            },
            "t_struct(GovernanceAction)1875_storage": {
              "label": "struct ISimpleGovernance.GovernanceAction",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proposedAt",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableTokenSnapshot": {
        "src": "contracts/DamnValuableTokenSnapshot.sol:11",
        "version": {
          "withMetadata": "db14bdf42c78dc7e942731390b31456393a4893551369250e89711aa4dd6c0e5",
          "withoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f",
          "linkedWithoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f"
        },
        "inherit": [
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "snapshot()",
          "getBalanceAtLastSnapshot(address)",
          "getTotalSupplyAtLastSnapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableTokenSnapshot",
            "src": "contracts/DamnValuableTokenSnapshot.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            },
            {
              "label": "_lastSnapshotId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DamnValuableTokenSnapshot",
              "src": "contracts/DamnValuableTokenSnapshot.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ISimpleGovernance": {
        "src": "contracts/selfie/ISimpleGovernance.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfiePool": {
        "src": "contracts/selfie/SelfiePool.sol:15",
        "version": {
          "withMetadata": "131a838dcf780c7a100ca76dd39c1de887ebe85dcdd7044b26cda5b8bb0981bf",
          "withoutMetadata": "0c7fb8f86d00c6ccf27cef2e84f76ac997b192b843b4adc60c56d461933e8d13",
          "linkedWithoutMetadata": "0c7fb8f86d00c6ccf27cef2e84f76ac997b192b843b4adc60c56d461933e8d13"
        },
        "inherit": [
          "IERC3156FlashLender",
          "ReentrancyGuard"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfiePool",
            "src": "contracts/selfie/SelfiePool.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/selfie/SelfiePool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "governance",
            "src": "contracts/selfie/SelfiePool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SimpleGovernance": {
        "src": "contracts/selfie/SimpleGovernance.sol:11",
        "version": {
          "withMetadata": "357376096dc44981d616ceb8801547dc1e12b54737947276e3787fcfa55e99b8",
          "withoutMetadata": "82048fab24c9f9550b1c4a5740443c978c7daf763c21a66ebf4621c5b49e3655",
          "linkedWithoutMetadata": "82048fab24c9f9550b1c4a5740443c978c7daf763c21a66ebf4621c5b49e3655"
        },
        "inherit": [
          "ISimpleGovernance"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleGovernance",
            "src": "contracts/selfie/SimpleGovernance.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_governanceToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DamnValuableTokenSnapshot)1862",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:14"
            },
            {
              "label": "_actionCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:15"
            },
            {
              "label": "_actions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableTokenSnapshot)1862": {
              "label": "contract DamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(GovernanceAction)1875_storage)": {
              "label": "mapping(uint256 => struct ISimpleGovernance.GovernanceAction)",
              "numberOfBytes": "32"
            },
            "t_struct(GovernanceAction)1875_storage": {
              "label": "struct ISimpleGovernance.GovernanceAction",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proposedAt",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "version": {
          "withMetadata": "caae56fc9bbfcdb5fa6df6628e1c0bcc10a7d058074bca9d686355d363579237",
          "withoutMetadata": "89b51bd05d61de46a48a2f510951b888e3609f02d698d28a64213071c36caed7",
          "linkedWithoutMetadata": "89b51bd05d61de46a48a2f510951b888e3609f02d698d28a64213071c36caed7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:27"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:28"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20Snapshot)1089",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:29"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:30"
            }
          ],
          "types": {
            "t_contract(ERC20Snapshot)1089": {
              "label": "contract ERC20Snapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "version": {
          "withMetadata": "5abe7f8634da3cf21831efc324d55efdf5119db613fbbd2194fc0ec5eefb7082",
          "withoutMetadata": "becf94d5935f04a7d592fccedf1180a592d1f95b9b40f1322e0a365b17db2b86",
          "linkedWithoutMetadata": "becf94d5935f04a7d592fccedf1180a592d1f95b9b40f1322e0a365b17db2b86"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:27"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:28"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20Snapshot)1089",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:29"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:30"
            }
          ],
          "types": {
            "t_contract(ERC20Snapshot)1089": {
              "label": "contract ERC20Snapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "version": {
          "withMetadata": "efdaff898d7b757d3a036d85ca36015dd105050ac45677fff765f8e9923a8683",
          "withoutMetadata": "3fb89c135df7bbb8772fba6fda2ec7f8ffa414538cf6c43e9ce9cf4c2933bd1f",
          "linkedWithoutMetadata": "3fb89c135df7bbb8772fba6fda2ec7f8ffa414538cf6c43e9ce9cf4c2933bd1f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:27"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:28"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20Snapshot)1089",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:29"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:30"
            }
          ],
          "types": {
            "t_contract(ERC20Snapshot)1089": {
              "label": "contract ERC20Snapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)784_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)784_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1227_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)784_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1227_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)784_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelGov": {
        "src": "contracts/selfie/SelfieExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelPool": {
        "src": "contracts/selfie/SelfieExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfieExploit": {
        "src": "contracts/selfie/SelfieExploit.sol:26",
        "version": {
          "withMetadata": "6a86839fcb00d8b17fa02435a32cc08951f61035787fb146481369b44b086659",
          "withoutMetadata": "93b1f7cbd9348b2bab1d96229215c3d8be825151b48f4e153ff540b8acb42c10",
          "linkedWithoutMetadata": "93b1f7cbd9348b2bab1d96229215c3d8be825151b48f4e153ff540b8acb42c10"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfieExploit",
            "src": "contracts/selfie/SelfieExploit.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelPool)1825",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:27"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelGov)1844",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:28"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20Snapshot)1089",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:29"
            },
            {
              "label": "actionId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfieExploit",
              "src": "contracts/selfie/SelfieExploit.sol:30"
            }
          ],
          "types": {
            "t_contract(ERC20Snapshot)1089": {
              "label": "contract ERC20Snapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelGov)1844": {
              "label": "contract SelGov",
              "numberOfBytes": "20"
            },
            "t_contract(SelPool)1825": {
              "label": "contract SelPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "fbe6b08d411c9ac70e2588c03f9170ab879612316a1d6534c55b3b55850e8be8",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "d3d97282d1686fae27a757819d5567d53efd9ae36ff316fc20eed44be717a080",
          "withoutMetadata": "f3c99b4fb85c55f0141eb21cf074990523b5871ab49f8c0b15fae43201a63e4a",
          "linkedWithoutMetadata": "f3c99b4fb85c55f0141eb21cf074990523b5871ab49f8c0b15fae43201a63e4a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "fbe6b08d411c9ac70e2588c03f9170ab879612316a1d6534c55b3b55850e8be8",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "d3d97282d1686fae27a757819d5567d53efd9ae36ff316fc20eed44be717a080",
          "withoutMetadata": "f3c99b4fb85c55f0141eb21cf074990523b5871ab49f8c0b15fae43201a63e4a",
          "linkedWithoutMetadata": "f3c99b4fb85c55f0141eb21cf074990523b5871ab49f8c0b15fae43201a63e4a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "fbe6b08d411c9ac70e2588c03f9170ab879612316a1d6534c55b3b55850e8be8",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "eba40e0bb10f9aaebc8093e964ac372098ced2a1e8438b7cad16780806caa2bd",
          "withoutMetadata": "e97b234c309ce6a55ee688e8ae608c48429cb88a39eef4cfa51403a291b5bb0a",
          "linkedWithoutMetadata": "e97b234c309ce6a55ee688e8ae608c48429cb88a39eef4cfa51403a291b5bb0a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "f63e0f218234182a3db4ca7c1eff7993b1f375c85112ccafc0dde8dd15ad11d1",
          "withoutMetadata": "45fb271a7f4fc9498f4cf0817be3a7d0eb6513f8ed6e4fc86a8667fdce99bdc2",
          "linkedWithoutMetadata": "45fb271a7f4fc9498f4cf0817be3a7d0eb6513f8ed6e4fc86a8667fdce99bdc2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "fbe6b08d411c9ac70e2588c03f9170ab879612316a1d6534c55b3b55850e8be8",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "83f4fbfaffdf7acfd4c7adf84e4cbb2751e5849433b81d855823b88c76d0a8e6",
          "withoutMetadata": "2501c88a9e50ba17edd7533d0f34efd6f98572623428d3814133c9e6a19f20dd",
          "linkedWithoutMetadata": "2501c88a9e50ba17edd7533d0f34efd6f98572623428d3814133c9e6a19f20dd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "ec8ab5b506ce4aae686ea2c6c4d7cf7ecb220bc3dbc93c441e3192a1d7a3cc77",
          "withoutMetadata": "cfa073813bbdd1949f1e1525a5d19c186a9951a299485c441096f4c8c5cbc5c6",
          "linkedWithoutMetadata": "cfa073813bbdd1949f1e1525a5d19c186a9951a299485c441096f4c8c5cbc5c6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "de102c98d034c203183d83b6d713354a46d08af3d654d2df758dc09415baedc5",
          "withoutMetadata": "9464ccb0d5cfdb9dbd7a50eda7d755309d4a8dcdb3e60a2a8261a78f1b04a0d1",
          "linkedWithoutMetadata": "9464ccb0d5cfdb9dbd7a50eda7d755309d4a8dcdb3e60a2a8261a78f1b04a0d1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "6cf878d17de033d2c71679a2201dfb81f7a7f50538290129dc31d8e273218d21",
          "withoutMetadata": "9c14d3cef28ffb910518c4b7d7047b23c4d5c5d0474ee141fc63bb1890f28081",
          "linkedWithoutMetadata": "9c14d3cef28ffb910518c4b7d7047b23c4d5c5d0474ee141fc63bb1890f28081"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "98307858831022a8226143cb50953fa7cc0c93ca09cb13697314cfc788ebb065",
          "withoutMetadata": "7a92fd950a6b873bb2881c768ed92832c8c47e830504ad1cc21b3f5b6992f02a",
          "linkedWithoutMetadata": "7a92fd950a6b873bb2881c768ed92832c8c47e830504ad1cc21b3f5b6992f02a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "d02e82546ba249da3f5c575dcbe07cecb1a08cb0f9faade3f1ff1a76ad237d05",
          "withoutMetadata": "e276382699878cbb13e3353ca7c524afc2623f3df1ad72f4a25e69279f8bf60e",
          "linkedWithoutMetadata": "e276382699878cbb13e3353ca7c524afc2623f3df1ad72f4a25e69279f8bf60e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)686_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)686_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1129_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)686_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1129_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)686_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccountingToken": {
        "src": "contracts/the-rewarder/AccountingToken.sol:14",
        "version": {
          "withMetadata": "dd9302d5117cd5c6f8c6f6cfd6f03bdd68a55f2f5909baade8c2fd8f3dabc2e0",
          "withoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db",
          "linkedWithoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "snapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccountingToken",
            "src": "contracts/the-rewarder/AccountingToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)686_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)686_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1129_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)686_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1129_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)686_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RewardToken": {
        "src": "contracts/the-rewarder/RewardToken.sol:12",
        "version": {
          "withMetadata": "5e9ef001191b02986ab7e2c2f9d3da443d2bfdd611b59f073913718998802325",
          "withoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c",
          "linkedWithoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewardToken",
            "src": "contracts/the-rewarder/RewardToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderPool.sol:14",
        "version": {
          "withMetadata": "ae70ba4fecf3f0ffb65c9c1735cce630060fded79a08ce80cb21cf8432874e6a",
          "withoutMetadata": "a41b2701c2a15816aef554d51adb1e46bf413a225772673974ff28f164f090e3",
          "linkedWithoutMetadata": "a41b2701c2a15816aef554d51adb1e46bf413a225772673974ff28f164f090e3"
        },
        "inherit": [],
        "libraries": [
          "FixedPointMathLib",
          "SafeTransferLib",
          "console"
        ],
        "methods": [
          "(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()",
          "isNewRewardsRound()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderPool",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "liquidityToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountingToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rewardToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lastSnapshotIdForRewards",
              "offset": 0,
              "slot": "0",
              "type": "t_uint128",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:32"
            },
            {
              "label": "lastRecordedSnapshotTimestamp",
              "offset": 16,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:33"
            },
            {
              "label": "roundNumber",
              "offset": 24,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:34"
            },
            {
              "label": "lastRewardTimestamps",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint64)",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint64)": {
              "label": "mapping(address => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "solady/src/auth/Ownable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "renounceOwnership()",
          "requestOwnershipHandover()",
          "cancelOwnershipHandover()",
          "completeOwnershipHandover(address)",
          "owner()",
          "ownershipHandoverExpiresAt(address)",
          "ownershipHandoverValidFor()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableRoles": {
        "src": "solady/src/auth/OwnableRoles.sol:11",
        "inherit": [
          "Ownable"
        ],
        "libraries": [],
        "methods": [
          "grantRoles(address,uint256)",
          "revokeRoles(address,uint256)",
          "renounceRoles(uint256)",
          "hasAnyRole(address,uint256)",
          "hasAllRoles(address,uint256)",
          "rolesOf(address)",
          "rolesFromOrdinals(uint8[])",
          "ordinalsFromRoles(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FixedPointMathLib": {
        "src": "solady/src/utils/FixedPointMathLib.sol:7",
        "version": {
          "withMetadata": "5685eaf23596b4eb6da74c614825f1a0cf19888a414a457d25816052e29525b4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeTransferLib": {
        "src": "solady/src/utils/SafeTransferLib.sol:8",
        "version": {
          "withMetadata": "2348c5465c7df2529a76d9ffac5c56ae6fbdf5ae32682535766b86662f817843",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "7e55f79857c52d3987c5a2abe89715bbac25ffb6d3b946bf613f7974d68a16d6",
          "withoutMetadata": "3538793c9f7f649632cc08bdd8a37496c94bdfcfb1d6ec643fa9ab340d21027b",
          "linkedWithoutMetadata": "3538793c9f7f649632cc08bdd8a37496c94bdfcfb1d6ec643fa9ab340d21027b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "6f749c15d5d8a66fed4e143b25735f2e0b20abfbbd77f82ed58c7af356e6cb9a",
          "withoutMetadata": "e4e6fa952ef415ed23f88e626f7375a69ea734d0fbbb7561413e96df6f698840",
          "linkedWithoutMetadata": "e4e6fa952ef415ed23f88e626f7375a69ea734d0fbbb7561413e96df6f698840"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "9455c56e1c0c2c577936c8553972310a52c86920b42d1e580d55305884c5dcad",
          "withoutMetadata": "d98ad6acc75e7bff41b30ff4a199ceb8692bd1be97dd4fa8a56f2830304423ef",
          "linkedWithoutMetadata": "d98ad6acc75e7bff41b30ff4a199ceb8692bd1be97dd4fa8a56f2830304423ef"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "fbe6b08d411c9ac70e2588c03f9170ab879612316a1d6534c55b3b55850e8be8",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "d3d97282d1686fae27a757819d5567d53efd9ae36ff316fc20eed44be717a080",
          "withoutMetadata": "f3c99b4fb85c55f0141eb21cf074990523b5871ab49f8c0b15fae43201a63e4a",
          "linkedWithoutMetadata": "f3c99b4fb85c55f0141eb21cf074990523b5871ab49f8c0b15fae43201a63e4a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "fbe6b08d411c9ac70e2588c03f9170ab879612316a1d6534c55b3b55850e8be8",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)686_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)686_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1129_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)686_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1129_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)686_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccountingToken": {
        "src": "contracts/the-rewarder/AccountingToken.sol:14",
        "version": {
          "withMetadata": "dd9302d5117cd5c6f8c6f6cfd6f03bdd68a55f2f5909baade8c2fd8f3dabc2e0",
          "withoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db",
          "linkedWithoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "snapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccountingToken",
            "src": "contracts/the-rewarder/AccountingToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)686_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)686_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1129_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)686_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1129_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)686_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RewardToken": {
        "src": "contracts/the-rewarder/RewardToken.sol:12",
        "version": {
          "withMetadata": "5e9ef001191b02986ab7e2c2f9d3da443d2bfdd611b59f073913718998802325",
          "withoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c",
          "linkedWithoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewardToken",
            "src": "contracts/the-rewarder/RewardToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "524eae0fa14c55b7e69f48cb90cf7708f8504638112af83e7dc3d8de00b8607e",
          "withoutMetadata": "67dabc9f02a6574cd1a920e4465a1346592d420da009de40d9fc5046d00618c0",
          "linkedWithoutMetadata": "67dabc9f02a6574cd1a920e4465a1346592d420da009de40d9fc5046d00618c0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)1904",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)1910",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)1888",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)1888": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)1910": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)1904": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderPool.sol:14",
        "version": {
          "withMetadata": "865ddd512a8cb79d0a8d77d937741c79d6cf18cd3dd83fc7a2f696655cc4eb26",
          "withoutMetadata": "bf1525bf58811fa51b6b370c3f975d6380956d7bcc83f92a7f04fb1fc75d9490",
          "linkedWithoutMetadata": "bf1525bf58811fa51b6b370c3f975d6380956d7bcc83f92a7f04fb1fc75d9490"
        },
        "inherit": [],
        "libraries": [
          "FixedPointMathLib",
          "SafeTransferLib",
          "console"
        ],
        "methods": [
          "(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()",
          "isNewRewardsRound()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderPool",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "liquidityToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountingToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rewardToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lastSnapshotIdForRewards",
              "offset": 0,
              "slot": "0",
              "type": "t_uint128",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:32"
            },
            {
              "label": "lastRecordedSnapshotTimestamp",
              "offset": 16,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:33"
            },
            {
              "label": "roundNumber",
              "offset": 24,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:34"
            },
            {
              "label": "lastRewardTimestamps",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint64)",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint64)": {
              "label": "mapping(address => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "solady/src/auth/Ownable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "renounceOwnership()",
          "requestOwnershipHandover()",
          "cancelOwnershipHandover()",
          "completeOwnershipHandover(address)",
          "owner()",
          "ownershipHandoverExpiresAt(address)",
          "ownershipHandoverValidFor()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableRoles": {
        "src": "solady/src/auth/OwnableRoles.sol:11",
        "inherit": [
          "Ownable"
        ],
        "libraries": [],
        "methods": [
          "grantRoles(address,uint256)",
          "revokeRoles(address,uint256)",
          "renounceRoles(uint256)",
          "hasAnyRole(address,uint256)",
          "hasAllRoles(address,uint256)",
          "rolesOf(address)",
          "rolesFromOrdinals(uint8[])",
          "ordinalsFromRoles(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FixedPointMathLib": {
        "src": "solady/src/utils/FixedPointMathLib.sol:7",
        "version": {
          "withMetadata": "5685eaf23596b4eb6da74c614825f1a0cf19888a414a457d25816052e29525b4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeTransferLib": {
        "src": "solady/src/utils/SafeTransferLib.sol:8",
        "version": {
          "withMetadata": "2348c5465c7df2529a76d9ffac5c56ae6fbdf5ae32682535766b86662f817843",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "a4f5b9e641bcfe55b1b3e1c7be49953ab93da74e07e7b7ce3a74e2608f7cb2e4",
          "withoutMetadata": "0e7a406723595c7081b4161bb059db2d88e97d34fce38822f4e98ff969bdc933",
          "linkedWithoutMetadata": "0e7a406723595c7081b4161bb059db2d88e97d34fce38822f4e98ff969bdc933"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "db46397edb7266057883080ecf15eaf9483f3219d1209d4974af1ef0bccff1cb",
          "withoutMetadata": "3e2c4468b412a60310a8df1be141184a2cd10ba78387c1e6879a699e2da8695b",
          "linkedWithoutMetadata": "3e2c4468b412a60310a8df1be141184a2cd10ba78387c1e6879a699e2da8695b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "fbe6b08d411c9ac70e2588c03f9170ab879612316a1d6534c55b3b55850e8be8",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "db46397edb7266057883080ecf15eaf9483f3219d1209d4974af1ef0bccff1cb",
          "withoutMetadata": "3e2c4468b412a60310a8df1be141184a2cd10ba78387c1e6879a699e2da8695b",
          "linkedWithoutMetadata": "3e2c4468b412a60310a8df1be141184a2cd10ba78387c1e6879a699e2da8695b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:24",
        "version": {
          "withMetadata": "6f3a459edeff79fcf394c20bbff9a7be3c5b73a68ef23db2e241dec9d022d573",
          "withoutMetadata": "10d39861ae7b188930a2d3786bd70c140b0a5be00fb6a72da2272402bb802df3",
          "linkedWithoutMetadata": "10d39861ae7b188930a2d3786bd70c140b0a5be00fb6a72da2272402bb802df3"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)749",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)755",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)733",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)733": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)755": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)749": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f92783e938e28885caaff1ccafa765c191b97848a7793fad804f6f98c77227c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "3c069932e32620d163c72fa5cbfaf70acf38d14cd46a3d9e2e38b3d4f089d4ad",
          "withoutMetadata": "9c14d3cef28ffb910518c4b7d7047b23c4d5c5d0474ee141fc63bb1890f28081",
          "linkedWithoutMetadata": "9c14d3cef28ffb910518c4b7d7047b23c4d5c5d0474ee141fc63bb1890f28081"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "b09a55e976f1ab62cce4bd1b6c658a16c3fe41657f1a8fdf92ab702798c5a47d",
          "withoutMetadata": "d5bc3d42e5ed1358b6cc2b2d63e9fae537f5111361305c9a24adb1e45330a3cb",
          "linkedWithoutMetadata": "d5bc3d42e5ed1358b6cc2b2d63e9fae537f5111361305c9a24adb1e45330a3cb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "eee694bb7fbd9fea07f37401037b0fb2d668693df813615c6dc7fb7f393da4a3",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "3c069932e32620d163c72fa5cbfaf70acf38d14cd46a3d9e2e38b3d4f089d4ad",
          "withoutMetadata": "9c14d3cef28ffb910518c4b7d7047b23c4d5c5d0474ee141fc63bb1890f28081",
          "linkedWithoutMetadata": "9c14d3cef28ffb910518c4b7d7047b23c4d5c5d0474ee141fc63bb1890f28081"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "af48c08f5c302703c71cfaed3ea8cac524a832281813d7dd359f0f82aa480a4e",
          "withoutMetadata": "bbbae8cec2eac83ea692f17de821b7845bac6accea167de692f968f7065267a2",
          "linkedWithoutMetadata": "bbbae8cec2eac83ea692f17de821b7845bac6accea167de692f968f7065267a2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "dc1ebfac9a421b6c6233138f1a885b8ffec785a9ed06ca10180657e8c0b39200",
          "withoutMetadata": "b680e9f84d2b35078fd88519be6f83a8ba1e4748fb000c9b2f377558cde0b85c",
          "linkedWithoutMetadata": "b680e9f84d2b35078fd88519be6f83a8ba1e4748fb000c9b2f377558cde0b85c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "eee694bb7fbd9fea07f37401037b0fb2d668693df813615c6dc7fb7f393da4a3",
          "withoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f",
          "linkedWithoutMetadata": "1464965b04c094985860904232844acd5a08ff88c3826ff7cc3825ce21d76d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "test()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "fe664f59f58c54a4b2d375bb38405fde1d8ff43a433116d72da6dd24df95988d",
          "withoutMetadata": "b589da4a52a08c3b4d7e663f08e7cb2ccba295a0de00ed356d5ffe6cffaf2f7a",
          "linkedWithoutMetadata": "b589da4a52a08c3b4d7e663f08e7cb2ccba295a0de00ed356d5ffe6cffaf2f7a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "d9079e405d00cc557af21442f2202234e0e2bc226ee50aba133cbc4889d74522",
          "withoutMetadata": "0904e2bc80417fb5d9e908bf2622ce262a1dc1ea15edb6fa1771d99ef2798bc5",
          "linkedWithoutMetadata": "0904e2bc80417fb5d9e908bf2622ce262a1dc1ea15edb6fa1771d99ef2798bc5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "f68d33d474e680a4327ffd7e97ecd4233475cd266f4768291cd5dcda40e526b9",
          "withoutMetadata": "bf610282ce482636cb3f8d23ffe980f064e2029547af9a71c3425c099c04205d",
          "linkedWithoutMetadata": "bf610282ce482636cb3f8d23ffe980f064e2029547af9a71c3425c099c04205d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "daa5075454ed2833300992642d54c5f8ef90d82131c5500d13159952f310270f",
          "withoutMetadata": "3ca027773b729cd612c065e557baec12de1604bc97da1a1e5c7375cec12492f6",
          "linkedWithoutMetadata": "3ca027773b729cd612c065e557baec12de1604bc97da1a1e5c7375cec12492f6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "5f539fc8ef5fc5d85bda3dc0c3efbc5bdaedf3c3ea50309707614f54e1c4464a",
          "withoutMetadata": "848e0e426f9d3a183bc59c9843ac67f0c5b18aa29584331c022ca894a3458969",
          "linkedWithoutMetadata": "848e0e426f9d3a183bc59c9843ac67f0c5b18aa29584331c022ca894a3458969"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "b840efdecc3e1dccde4f12ab7613411d1bde5b7e40bff31543c449e86b15ff63",
          "withoutMetadata": "79a2b2566979a7a79df32c8b0dcab3b4d4aad85bf479c907655c4fa861147afa",
          "linkedWithoutMetadata": "79a2b2566979a7a79df32c8b0dcab3b4d4aad85bf479c907655c4fa861147afa"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "fe664f59f58c54a4b2d375bb38405fde1d8ff43a433116d72da6dd24df95988d",
          "withoutMetadata": "b589da4a52a08c3b4d7e663f08e7cb2ccba295a0de00ed356d5ffe6cffaf2f7a",
          "linkedWithoutMetadata": "b589da4a52a08c3b4d7e663f08e7cb2ccba295a0de00ed356d5ffe6cffaf2f7a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "fbc8cd3744c89ee85325c136b4b422918b245491a57bd7711131d4cad6880eb0",
          "withoutMetadata": "da9101b87f7c10aa95f249f5cd3d3171a94316f9132747ad5646493467f7a850",
          "linkedWithoutMetadata": "da9101b87f7c10aa95f249f5cd3d3171a94316f9132747ad5646493467f7a850"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "2e609ff98b7366794163a4e331d0e358ad61012b3e8dfef26b4e1a1347cbe312",
          "withoutMetadata": "7f26196a90ffb8765f7a5cca2ba283647d5eb8f3038014b7db2d93e8fd854dfd",
          "linkedWithoutMetadata": "7f26196a90ffb8765f7a5cca2ba283647d5eb8f3038014b7db2d93e8fd854dfd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "26c3db319640716faaa93ca82da8573efbab5539208a2464a3d6ac9adc3a65e6",
          "withoutMetadata": "ae7af1effc75ce340b9ea27d1df4588f2657e96de5e636e5a3a43d69b2321475",
          "linkedWithoutMetadata": "ae7af1effc75ce340b9ea27d1df4588f2657e96de5e636e5a3a43d69b2321475"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "fc90f397a6030648a5e0ef9092b63cfe1d79df43482fb4575ec8ffbebd0b3d77",
          "withoutMetadata": "857fbb108022f397be2c0f398e2bee50231baff82b1ad8233a34ed69634097d8",
          "linkedWithoutMetadata": "857fbb108022f397be2c0f398e2bee50231baff82b1ad8233a34ed69634097d8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "7549b41f6d46a9b19622f90fca44140b6b2ed81bff6dc86d392e0d6d202a95b5",
          "withoutMetadata": "782e46295e84d7b39676871971114d8fb207ed7e66699dc211eb71df5d1bbe15",
          "linkedWithoutMetadata": "782e46295e84d7b39676871971114d8fb207ed7e66699dc211eb71df5d1bbe15"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "d339d61360343d685c137ca95ce20cb252bcfeb1e26dd00805e37a544a13b272",
          "withoutMetadata": "43453966c6282a0fd540325cb36e25a15df7d64743839fcc7d6c186825f11847",
          "linkedWithoutMetadata": "43453966c6282a0fd540325cb36e25a15df7d64743839fcc7d6c186825f11847"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "a81be35c414e3a8f96839cdcf5ac7085d6e8e154a7769a9971402263c77d9542",
          "withoutMetadata": "43453966c6282a0fd540325cb36e25a15df7d64743839fcc7d6c186825f11847",
          "linkedWithoutMetadata": "43453966c6282a0fd540325cb36e25a15df7d64743839fcc7d6c186825f11847"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "8f549baca5606b20f299aa658d93ba3f8a264d0797065e6d947bb2febc49c614",
          "withoutMetadata": "7ed2a39adc8226db7cefae157b90b9c8248b8be386811249c0a71b9bb5f66797",
          "linkedWithoutMetadata": "7ed2a39adc8226db7cefae157b90b9c8248b8be386811249c0a71b9bb5f66797"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "e1e65a342827c96b745ae1a66a819d3b5646726e0a221e5e488eb18efeea1cc7",
          "withoutMetadata": "b30efabe6434188b46c187ec25e467beb8a9e84bce311ba664784a16dfcd156a",
          "linkedWithoutMetadata": "b30efabe6434188b46c187ec25e467beb8a9e84bce311ba664784a16dfcd156a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "c9132258df3d723f1b88a2b49f2241835cc7ae9cdb01684fcb9d00a58e724c01",
          "withoutMetadata": "6bdfcdd53ab4a24ad698909c747e274266847895a54a4f5d65b53248fe489e94",
          "linkedWithoutMetadata": "6bdfcdd53ab4a24ad698909c747e274266847895a54a4f5d65b53248fe489e94"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "_balance()",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "1db07663ca7fcbf415043d754ae6d24a8150f6701247da8eef989d10834777b1",
          "withoutMetadata": "d526fc13280c8a980416cd8ee07a031e4ac1c3cd78043ab34d76b0821b2ac754",
          "linkedWithoutMetadata": "d526fc13280c8a980416cd8ee07a031e4ac1c3cd78043ab34d76b0821b2ac754"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "0c1d61b36fd2660c4755635155971f3af770b290b32b2e07f86e43b6099c62f0",
          "withoutMetadata": "f227e9794c72ab36722a6d209cd0fcd5f8ce20cdf158bdcafb07099df76e3b9a",
          "linkedWithoutMetadata": "f227e9794c72ab36722a6d209cd0fcd5f8ce20cdf158bdcafb07099df76e3b9a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "6b368a8faca0867f4213645ebe7dc9482422a17d82338752a59632833e6e24b1",
          "withoutMetadata": "6c48f2d7e4ae16d707b843bd14e44799c827d5a26bb490a2f8c3e6eb0fc87e13",
          "linkedWithoutMetadata": "6c48f2d7e4ae16d707b843bd14e44799c827d5a26bb490a2f8c3e6eb0fc87e13"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "49970a671f60bbcc679526a062f3ff18b4367545c0f1ee4f3c8ff81fff2860f1",
          "withoutMetadata": "d526fc13280c8a980416cd8ee07a031e4ac1c3cd78043ab34d76b0821b2ac754",
          "linkedWithoutMetadata": "d526fc13280c8a980416cd8ee07a031e4ac1c3cd78043ab34d76b0821b2ac754"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "total",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "1859512d0771504cb2c31f0b8a72230dc3158865373ef3227e7049d7407605be",
          "withoutMetadata": "f3e21bac04998bae59e6e6c475120f5d75cc0f79e422e8670cf9ef614bcf0b8a",
          "linkedWithoutMetadata": "f3e21bac04998bae59e6e6c475120f5d75cc0f79e422e8670cf9ef614bcf0b8a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "10b0c642da5246d50388d44e605fa3621cca43640beb54a3f72520a3bc888c7b",
          "withoutMetadata": "c3d4531e93d685713f4584e135654932824e19f0765d41944831ace8b5d79ef2",
          "linkedWithoutMetadata": "c3d4531e93d685713f4584e135654932824e19f0765d41944831ace8b5d79ef2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "total",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:24"
            },
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:23",
        "version": {
          "withMetadata": "c71abfab744138a70bba57d655189822c8ffb74a0bcd82367d7a089f7ef28aef",
          "withoutMetadata": "196db46f162fdb22ac0e723b5063b35c7d90dda6e0145004c14b2e07ac3e7305",
          "linkedWithoutMetadata": "196db46f162fdb22ac0e723b5063b35c7d90dda6e0145004c14b2e07ac3e7305"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)748",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:25"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)754",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:26"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:27"
            },
            {
              "label": "dvt",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IDamnValuableToken)732",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IDamnValuableToken)732": {
              "label": "contract IDamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)754": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)748": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:17",
        "version": {
          "withMetadata": "7b89e60b2e3bc189aad219184320b4475c25010b312ae6aae73d865faccda4a7",
          "withoutMetadata": "61d6551b7e6ba50b185e5da7d93c86b453451c8662767e071e95e1be258260e8",
          "linkedWithoutMetadata": "61d6551b7e6ba50b185e5da7d93c86b453451c8662767e071e95e1be258260e8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)729",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:19"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)735",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:20"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:21"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)735": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)729": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TheRewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:17",
        "version": {
          "withMetadata": "aef3ae49daa5a85cc800d79d365caa01eb68f99176b6d89f146fb6bc2e40a5c2",
          "withoutMetadata": "cc1aaf1c85a29e84da448f0a96ce87e4e0b346ce6f2525e6a64190ebb0b900b4",
          "linkedWithoutMetadata": "cc1aaf1c85a29e84da448f0a96ce87e4e0b346ce6f2525e6a64190ebb0b900b4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ITheRewarderPool)729",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:19"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IFlashLoanerPool)735",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:20"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)585",
              "contract": "TheRewarderExploit",
              "src": "contracts/the-rewarder/TheRewarderExploit.sol:21"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IFlashLoanerPool)735": {
              "label": "contract IFlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(ITheRewarderPool)729": {
              "label": "contract ITheRewarderPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IDamnValuableToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanReceiver": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveFlashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IFlashLoanerPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IRewardToken": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "liquidityToken()",
          "rewardToken()",
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RewarderExploit": {
        "src": "contracts/the-rewarder/TheRewarderExploit.sol:29",
        "version": {
          "withMetadata": "77a7ed0a92ea1b19a88203ada324719e9a4227a8ef981be746e6984f4bdffeb5",
          "withoutMetadata": "35af8bb3825173eeba994aa0b2480305a83f9f6724617b4adb33ae53ba9a5d22",
          "linkedWithoutMetadata": "35af8bb3825173eeba994aa0b2480305a83f9f6724617b4adb33ae53ba9a5d22"
        },
        "inherit": [
          "IFlashLoanReceiver"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address,address)",
          "pwn()",
          "receiveFlashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewarderExploit",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:36"
          },
          {
            "kind": "state-variable-immutable",
            "name": "attacker",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:30"
          },
          {
            "kind": "state-variable-immutable",
            "name": "TOKENS_IN_LENDER_POOL",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:31"
          },
          {
            "kind": "state-variable-immutable",
            "name": "flashLoanerPool",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rewarderPool",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:33"
          },
          {
            "kind": "state-variable-immutable",
            "name": "liquidityToken",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rewardToken",
            "src": "contracts/the-rewarder/TheRewarderExploit.sol:35"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntrance": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceExploit": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:12",
        "version": {
          "withMetadata": "8359ce810e5df458fcd0e53fc69416d979ae17bcfac2cb660e1500d4d2a90762",
          "withoutMetadata": "76c8079cd54b799b4ebe9e0d49561c35c21782df964abd9dd082aeb9a7062936",
          "linkedWithoutMetadata": "76c8079cd54b799b4ebe9e0d49561c35c21782df964abd9dd082aeb9a7062936"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balanceOf()",
          "exploit()",
          "execute()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SideEntranceExploit",
            "src": "contracts/side-entrance/SideEntranceExploit.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "S",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntrance)725",
              "contract": "SideEntranceExploit",
              "src": "contracts/side-entrance/SideEntranceExploit.sol:13"
            }
          ],
          "types": {
            "t_contract(SideEntrance)725": {
              "label": "contract SideEntrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntrance": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceExploit": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:12",
        "version": {
          "withMetadata": "11102bede3cb1b3ceaecd1960ff345a8f3f7f5708a4f0d9b921514a821a436ef",
          "withoutMetadata": "82a13f5481f168129a833109339b38e324880c546eb98679ee039b2d96e3eb22",
          "linkedWithoutMetadata": "82a13f5481f168129a833109339b38e324880c546eb98679ee039b2d96e3eb22"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balanceOf()",
          "exploit()",
          "execute()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SideEntranceExploit",
            "src": "contracts/side-entrance/SideEntranceExploit.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "S",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntrance)725",
              "contract": "SideEntranceExploit",
              "src": "contracts/side-entrance/SideEntranceExploit.sol:13"
            }
          ],
          "types": {
            "t_contract(SideEntrance)725": {
              "label": "contract SideEntrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntrance": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceExploit": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:12",
        "version": {
          "withMetadata": "6821551d22561051277b9a0633e17332e129ff16c0a6ea9771396843f5c421aa",
          "withoutMetadata": "bae41af532795e965654dd20a3dc9ff60890012137dbdda789031668c9495b51",
          "linkedWithoutMetadata": "bae41af532795e965654dd20a3dc9ff60890012137dbdda789031668c9495b51"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balanceOf()",
          "exploit()",
          "execute()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SideEntranceExploit",
            "src": "contracts/side-entrance/SideEntranceExploit.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "S",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntrance)725",
              "contract": "SideEntranceExploit",
              "src": "contracts/side-entrance/SideEntranceExploit.sol:13"
            }
          ],
          "types": {
            "t_contract(SideEntrance)725": {
              "label": "contract SideEntrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntrance": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceExploit": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:12",
        "version": {
          "withMetadata": "2bf17b056c2c9e4f5cf3f82a592c358725ab720e14c955ba0ee9c3cd8df1f970",
          "withoutMetadata": "ca2bb057f351f7263e97b5426fcb3690b3eebc7c58233f15379cd4bde7078182",
          "linkedWithoutMetadata": "ca2bb057f351f7263e97b5426fcb3690b3eebc7c58233f15379cd4bde7078182"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balanceOf()",
          "exploit()",
          "execute()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SideEntranceExploit",
            "src": "contracts/side-entrance/SideEntranceExploit.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "S",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntrance)725",
              "contract": "SideEntranceExploit",
              "src": "contracts/side-entrance/SideEntranceExploit.sol:13"
            }
          ],
          "types": {
            "t_contract(SideEntrance)725": {
              "label": "contract SideEntrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntrance": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceExploit": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:12",
        "version": {
          "withMetadata": "7eb9b938d17321718d95b5885eeee49b7f5f2abd2e49a11b6d47c4329626f4fd",
          "withoutMetadata": "595fb032c4714da9c34ba7b6532ca2ae28dcbb936a915bf00749d4e45722585c",
          "linkedWithoutMetadata": "595fb032c4714da9c34ba7b6532ca2ae28dcbb936a915bf00749d4e45722585c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balanceOf()",
          "exploit()",
          "execute()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SideEntranceExploit",
            "src": "contracts/side-entrance/SideEntranceExploit.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "S",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntrance)725",
              "contract": "SideEntranceExploit",
              "src": "contracts/side-entrance/SideEntranceExploit.sol:13"
            }
          ],
          "types": {
            "t_contract(SideEntrance)725": {
              "label": "contract SideEntrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntrance": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceExploit": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:12",
        "version": {
          "withMetadata": "2bf17b056c2c9e4f5cf3f82a592c358725ab720e14c955ba0ee9c3cd8df1f970",
          "withoutMetadata": "ca2bb057f351f7263e97b5426fcb3690b3eebc7c58233f15379cd4bde7078182",
          "linkedWithoutMetadata": "ca2bb057f351f7263e97b5426fcb3690b3eebc7c58233f15379cd4bde7078182"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balanceOf()",
          "exploit()",
          "execute()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SideEntranceExploit",
            "src": "contracts/side-entrance/SideEntranceExploit.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "S",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntrance)725",
              "contract": "SideEntranceExploit",
              "src": "contracts/side-entrance/SideEntranceExploit.sol:13"
            }
          ],
          "types": {
            "t_contract(SideEntrance)725": {
              "label": "contract SideEntrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntrance": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceExploit": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:12",
        "version": {
          "withMetadata": "c2572713eaeca309b55ab04cd6bcdbb33315920f4d8a4bb2deb2e9c153b18a38",
          "withoutMetadata": "2fe871eb4ef17ce1e9d75933c7513fc816e936d1bdcdbd6e3c51d3a103164915",
          "linkedWithoutMetadata": "2fe871eb4ef17ce1e9d75933c7513fc816e936d1bdcdbd6e3c51d3a103164915"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balanceOf()",
          "exploit()",
          "execute()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SideEntranceExploit",
            "src": "contracts/side-entrance/SideEntranceExploit.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "S",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntrance)725",
              "contract": "SideEntranceExploit",
              "src": "contracts/side-entrance/SideEntranceExploit.sol:13"
            }
          ],
          "types": {
            "t_contract(SideEntrance)725": {
              "label": "contract SideEntrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "SideEntrance": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceExploit": {
        "src": "contracts/side-entrance/SideEntranceExploit.sol:11",
        "version": {
          "withMetadata": "f332b76a7b18620f4aa781cbd9a10082b76909764aa70b2e66f12f337ff6cfe5",
          "withoutMetadata": "ec9a24d7dcf151712cdba72bf2ba6c40fba3d32ebaa3904417c57b806d79d38a",
          "linkedWithoutMetadata": "ec9a24d7dcf151712cdba72bf2ba6c40fba3d32ebaa3904417c57b806d79d38a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "exploit()",
          "execute()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SideEntranceExploit",
            "src": "contracts/side-entrance/SideEntranceExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "S",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntrance)13",
              "contract": "SideEntranceExploit",
              "src": "contracts/side-entrance/SideEntranceExploit.sol:12"
            }
          ],
          "types": {
            "t_contract(SideEntrance)13": {
              "label": "contract SideEntrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "60f85cb92ce463c987e6aeae4ed536f6e4705487dc5683d7e804c03eff6e66b0",
          "withoutMetadata": "ba4da2c71f50b64256026665aa16e6b1f79cd546a0c91cef0633910ee7e4faed",
          "linkedWithoutMetadata": "ba4da2c71f50b64256026665aa16e6b1f79cd546a0c91cef0633910ee7e4faed"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)727",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "E",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)585",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)727": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "50c437f2abc90c3ed07241629602f6f6aa8201acbf8fcee6821bdd59d0cb7392",
          "withoutMetadata": "0ea55e9eccee3f9003a954f1a9f453db7f2466b2ce52fffa692b01e8b936286c",
          "linkedWithoutMetadata": "0ea55e9eccee3f9003a954f1a9f453db7f2466b2ce52fffa692b01e8b936286c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "65a79ff7a8f37ac3dbe180ab953a77cb8751909811e97ccb33ee0e8672503eba",
          "withoutMetadata": "d891596d8d543de7cd0583b2f29b635371da121a8ade416cfc00371d56f7583e",
          "linkedWithoutMetadata": "d891596d8d543de7cd0583b2f29b635371da121a8ade416cfc00371d56f7583e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "db84d15fa6001562c7cdfe90be17de44433a91352bf0539f07326a787b14cdad",
          "withoutMetadata": "b44a5b71442a2e0975506f3cd36ea3ab0ec226e3081290e938acb734532fbf4b",
          "linkedWithoutMetadata": "b44a5b71442a2e0975506f3cd36ea3ab0ec226e3081290e938acb734532fbf4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "4222759778398e658922649f3a7539eb470b6ac5f3cdf7316bb987f745c86dfc",
          "withoutMetadata": "2dfb1cc5f8b61a1b0b24dee0bdbff019924588a1bd8debb4c3789603dbd17add",
          "linkedWithoutMetadata": "2dfb1cc5f8b61a1b0b24dee0bdbff019924588a1bd8debb4c3789603dbd17add"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "3ea7662c462fac0a381d7997d2f3fc6705359d1f117327b7648c118415d7ae55",
          "withoutMetadata": "248253e1fb2f33ef0a44a958674605a48e0ed25f4963c359824df55d9996ad61",
          "linkedWithoutMetadata": "248253e1fb2f33ef0a44a958674605a48e0ed25f4963c359824df55d9996ad61"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "53331d7a8330e79da66db2ca2a430788ea34a0f4143ba6cb5b1e5b04fc33f1fc",
          "withoutMetadata": "5859650ec60e748fc3df506c3a3e0bbec010005bcc7a3e94a920face1fd404e4",
          "linkedWithoutMetadata": "5859650ec60e748fc3df506c3a3e0bbec010005bcc7a3e94a920face1fd404e4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "e5f4d80cfa819a67925ad9c651bdfba7c50052a8436f342be8af67b47e6d4ea1",
          "withoutMetadata": "5859650ec60e748fc3df506c3a3e0bbec010005bcc7a3e94a920face1fd404e4",
          "linkedWithoutMetadata": "5859650ec60e748fc3df506c3a3e0bbec010005bcc7a3e94a920face1fd404e4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "1949d7d657ba4aaef02f1ab5eab31cf94980be2d5eed36b52edf5cfd62dee2fb",
          "withoutMetadata": "2cdf868e141a3a0f95c31e8f18070f6baf97de3e2da5cfd9baa8e59ddf884489",
          "linkedWithoutMetadata": "2cdf868e141a3a0f95c31e8f18070f6baf97de3e2da5cfd9baa8e59ddf884489"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "db271ae6cdb219334fbe617a6a86628f6fdea31e779f5c0dabbbffe23d712e21",
          "withoutMetadata": "dee2e9d1471c036ab46657049cf66f98faa4f807938e901927696aff6fe1e2f0",
          "linkedWithoutMetadata": "dee2e9d1471c036ab46657049cf66f98faa4f807938e901927696aff6fe1e2f0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "3ea7662c462fac0a381d7997d2f3fc6705359d1f117327b7648c118415d7ae55",
          "withoutMetadata": "248253e1fb2f33ef0a44a958674605a48e0ed25f4963c359824df55d9996ad61",
          "linkedWithoutMetadata": "248253e1fb2f33ef0a44a958674605a48e0ed25f4963c359824df55d9996ad61"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "74b46bd55af85e01f13e9eb61c4529f3305ef35e095f57ec5a242cc7f59ccf8c",
          "withoutMetadata": "971c432bc3e9f0b9e3e24301b39f090d15c33e416894dfbdd04a0c0afac2d462",
          "linkedWithoutMetadata": "971c432bc3e9f0b9e3e24301b39f090d15c33e416894dfbdd04a0c0afac2d462"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "view_data()",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "626d74fc4b24eb517586d7b7653a764678a8b0c0e8459f96fdcdde63a19a6db9",
          "withoutMetadata": "5541e6f991203efca5ed264a58fe895e95c768a4417d926ecbdb3f0729141123",
          "linkedWithoutMetadata": "5541e6f991203efca5ed264a58fe895e95c768a4417d926ecbdb3f0729141123"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "eafcf5cd0de7442b8824bab01cd24e1d78ca4ddef67495590a81373aa349db29",
          "withoutMetadata": "bc8acfce92076ab4a1ff7c1a25795cc3efc4b63086c05c00e0a071658183d860",
          "linkedWithoutMetadata": "bc8acfce92076ab4a1ff7c1a25795cc3efc4b63086c05c00e0a071658183d860"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "c2f25fc3d0c15f68974e1183d366d86820342842166f83dad73acc76be8708e2",
          "withoutMetadata": "5f5e69bb16bc0de9aaa305ea4c2cb9c6b1da42f53f4100d665322041b9b6abbe",
          "linkedWithoutMetadata": "5f5e69bb16bc0de9aaa305ea4c2cb9c6b1da42f53f4100d665322041b9b6abbe"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "0b59464452274375f08f38af707c957765370a11501b4c05442925507ef3c854",
          "withoutMetadata": "b1620cc5b77340d4eec2ed21ce2479e23c37e1f8c77e5f2f58dc9b8581180b93",
          "linkedWithoutMetadata": "b1620cc5b77340d4eec2ed21ce2479e23c37e1f8c77e5f2f58dc9b8581180b93"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "eee4b23f10996b9abf4608cb3c0109e748c54387a039b372fb9f0a4678df27d6",
          "withoutMetadata": "d6213d149432083b2870c0a6b08481b720d86d13ea3f4c95c8add544e59b23a7",
          "linkedWithoutMetadata": "d6213d149432083b2870c0a6b08481b720d86d13ea3f4c95c8add544e59b23a7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "626d74fc4b24eb517586d7b7653a764678a8b0c0e8459f96fdcdde63a19a6db9",
          "withoutMetadata": "5541e6f991203efca5ed264a58fe895e95c768a4417d926ecbdb3f0729141123",
          "linkedWithoutMetadata": "5541e6f991203efca5ed264a58fe895e95c768a4417d926ecbdb3f0729141123"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "a407e12b029ead6e305688afc1cba88b31a346f70b6da6e1da54f56c39f7a12c",
          "withoutMetadata": "17442b02417e1d33d9ecfc51ad0da0bbf3a4abe9c152f33a1130777b067e08f4",
          "linkedWithoutMetadata": "17442b02417e1d33d9ecfc51ad0da0bbf3a4abe9c152f33a1130777b067e08f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "909c364a4e78469c2da28e3a3a4b725de363cee942a68e639682c1ff429e2fbc",
          "withoutMetadata": "dc61b7f6e04edd2fcaf90ae8c38a84883c92153662b5fba8ec8e072cde01a63b",
          "linkedWithoutMetadata": "dc61b7f6e04edd2fcaf90ae8c38a84883c92153662b5fba8ec8e072cde01a63b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "a407e12b029ead6e305688afc1cba88b31a346f70b6da6e1da54f56c39f7a12c",
          "withoutMetadata": "17442b02417e1d33d9ecfc51ad0da0bbf3a4abe9c152f33a1130777b067e08f4",
          "linkedWithoutMetadata": "17442b02417e1d33d9ecfc51ad0da0bbf3a4abe9c152f33a1130777b067e08f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "201af11f740e64161a46b574c41cc6c6aedb3939c92a548aaf01f61fb75c83ea",
          "withoutMetadata": "1561968d4c3a8362df4667bf45a59bcd0758f5fea77b1d8bac91310d039b7f65",
          "linkedWithoutMetadata": "1561968d4c3a8362df4667bf45a59bcd0758f5fea77b1d8bac91310d039b7f65"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "aef1e1d14be8938b9bb0112ce2cc1fa9f2c455b19d6eb7172a37b9d144c4da9e",
          "withoutMetadata": "2e6e2ddbfd4e6e036cb36cab16a2e72f54c4c544c32312f783ffde72adef9006",
          "linkedWithoutMetadata": "2e6e2ddbfd4e6e036cb36cab16a2e72f54c4c544c32312f783ffde72adef9006"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "trust",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "erc",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "201af11f740e64161a46b574c41cc6c6aedb3939c92a548aaf01f61fb75c83ea",
          "withoutMetadata": "1561968d4c3a8362df4667bf45a59bcd0758f5fea77b1d8bac91310d039b7f65",
          "linkedWithoutMetadata": "1561968d4c3a8362df4667bf45a59bcd0758f5fea77b1d8bac91310d039b7f65"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "52634ddf226b53a55bd6c436a13dfc857df15bdab0c2af4385cb6159354f8be4",
          "withoutMetadata": "1561968d4c3a8362df4667bf45a59bcd0758f5fea77b1d8bac91310d039b7f65",
          "linkedWithoutMetadata": "1561968d4c3a8362df4667bf45a59bcd0758f5fea77b1d8bac91310d039b7f65"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "9ff45e416b3c64790f282a2a1d7b9bef44b2e61170c302fa658327a651461ca5",
          "withoutMetadata": "1561968d4c3a8362df4667bf45a59bcd0758f5fea77b1d8bac91310d039b7f65",
          "linkedWithoutMetadata": "1561968d4c3a8362df4667bf45a59bcd0758f5fea77b1d8bac91310d039b7f65"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "T",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "E",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "1d906cc6bb1278fe355a6461bbb026219d47e8b43a57684326d9e654fda78cde",
          "withoutMetadata": "264c90218048886d44dbd1ecaafc5e60ef44ab83244fcdd895325bcdc26b7538",
          "linkedWithoutMetadata": "264c90218048886d44dbd1ecaafc5e60ef44ab83244fcdd895325bcdc26b7538"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)727",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "E",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)663",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)727": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "72230f183a18049e80a2ccff1014ebca74fdd88717bead071eebfd706ad982e2",
          "withoutMetadata": "d63ed02a905877dbcc3c423175cebffda63d31fb7a5860ca5111b1c6e74d43b4",
          "linkedWithoutMetadata": "d63ed02a905877dbcc3c423175cebffda63d31fb7a5860ca5111b1c6e74d43b4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)727",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "E",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)663",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)727": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "e5321d1ed16e18fc124d8a40e96adb22ec5aee1337ffb6c400495a4ffab50c73",
          "withoutMetadata": "117518687e75c28d9d89a836a9d1e6b28339c93b3cd0f608c3f2792710362de5",
          "linkedWithoutMetadata": "117518687e75c28d9d89a836a9d1e6b28339c93b3cd0f608c3f2792710362de5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)727",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "E",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)663",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)727": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterAttacker": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "c33c92f9063bc4b1281a5885caad123b65f5f242c34dab2013963b3390abb919",
          "withoutMetadata": "c6ef47acd7a1062ac8ec4365a16c2671a9a856e5c5f1cb366e8fcdbaefd465e3",
          "linkedWithoutMetadata": "c6ef47acd7a1062ac8ec4365a16c2671a9a856e5c5f1cb366e8fcdbaefd465e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "fakeLoan()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterAttacker",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)727",
              "contract": "TrusterAttacker",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)585",
              "contract": "TrusterAttacker",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20)585": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)727": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterAttacker": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "1c7fc045a06a01cdbef43a7572fb5ea6ee8733e705bcb883890ce0607f255529",
          "withoutMetadata": "971b1d1110b10494aface0786e19080f450e3a14c232ea170c116df1316b1b5e",
          "linkedWithoutMetadata": "971b1d1110b10494aface0786e19080f450e3a14c232ea170c116df1316b1b5e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "fakeLoan()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterAttacker",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pool",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterAttacker": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "a28db422d82259aa41b0d21b47f4084f387a76ce0c08185564cb08970cfefc66",
          "withoutMetadata": "971b1d1110b10494aface0786e19080f450e3a14c232ea170c116df1316b1b5e",
          "linkedWithoutMetadata": "971b1d1110b10494aface0786e19080f450e3a14c232ea170c116df1316b1b5e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "fakeLoan()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterAttacker",
            "src": "contracts/truster/TrusterExploit.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pool",
            "src": "contracts/truster/TrusterExploit.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterExploit.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "8d2d97e2a98a440eeb3305ad8881758c9a8de16d116834a6601c1abf1b7840f7",
          "withoutMetadata": "40c03fa93d55230b901bca4915e0a26aeae8e1816ceea81bbc0a5babde4641bd",
          "linkedWithoutMetadata": "40c03fa93d55230b901bca4915e0a26aeae8e1816ceea81bbc0a5babde4641bd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "c3ac1d68f6704d91cfd2727e18edd9e01bf9433a6dc15e54ac2eea20f0f753d9",
          "withoutMetadata": "0f3d6b882546329efaa7f5660023a0259d45a58eb3adbe43ffb6ad97dc24376a",
          "linkedWithoutMetadata": "0f3d6b882546329efaa7f5660023a0259d45a58eb3adbe43ffb6ad97dc24376a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "fcc02cf648a0a2027f2e8430d49ba3263e25cd1e928336fa8899e95ea8eee371",
          "withoutMetadata": "bb6acfdcaf875c07346cd5ed2df6909cf9e1ede3211d59f5f972676ccf80b97f",
          "linkedWithoutMetadata": "bb6acfdcaf875c07346cd5ed2df6909cf9e1ede3211d59f5f972676ccf80b97f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "f1749eabd0a3ad436672fd161b6fd6d952d8a1e6fbf4e69396b7cbcbf274a276",
          "withoutMetadata": "f3aa7490d45fecbac7821eab46f3317bb73d0ff04c1f9deaaf4627305321b3bb",
          "linkedWithoutMetadata": "f3aa7490d45fecbac7821eab46f3317bb73d0ff04c1f9deaaf4627305321b3bb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "279f09c99a5223ec9e0a3dfd446dad6959c773835a347d75026b7334fe584339",
          "withoutMetadata": "61fe4307f9700dd5e9203b5800ccb7768889cf5c508db325737722795fd6aa3a",
          "linkedWithoutMetadata": "61fe4307f9700dd5e9203b5800ccb7768889cf5c508db325737722795fd6aa3a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exploit(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "46d76168f68163182f693461ed5c6317257eabd3ee06e64763227c1e47592181",
          "withoutMetadata": "61fe4307f9700dd5e9203b5800ccb7768889cf5c508db325737722795fd6aa3a",
          "linkedWithoutMetadata": "61fe4307f9700dd5e9203b5800ccb7768889cf5c508db325737722795fd6aa3a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exploit(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "b63c63a8032b183017f07af9cf5d3fab5c5074bfbd7ce220838af24529d163a0",
          "withoutMetadata": "3ef3dd6d96bbb7e268bf8e9c32397a3c6ee578da869509f10ec4d4db627983e1",
          "linkedWithoutMetadata": "3ef3dd6d96bbb7e268bf8e9c32397a3c6ee578da869509f10ec4d4db627983e1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exploit(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "b63c63a8032b183017f07af9cf5d3fab5c5074bfbd7ce220838af24529d163a0",
          "withoutMetadata": "3ef3dd6d96bbb7e268bf8e9c32397a3c6ee578da869509f10ec4d4db627983e1",
          "linkedWithoutMetadata": "3ef3dd6d96bbb7e268bf8e9c32397a3c6ee578da869509f10ec4d4db627983e1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exploit(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "b3bfe5c58da68a81e88df44c8202921b835a87928edeee56181c1830fa0a14f4",
          "withoutMetadata": "3ef3dd6d96bbb7e268bf8e9c32397a3c6ee578da869509f10ec4d4db627983e1",
          "linkedWithoutMetadata": "3ef3dd6d96bbb7e268bf8e9c32397a3c6ee578da869509f10ec4d4db627983e1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exploit(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "b63c63a8032b183017f07af9cf5d3fab5c5074bfbd7ce220838af24529d163a0",
          "withoutMetadata": "3ef3dd6d96bbb7e268bf8e9c32397a3c6ee578da869509f10ec4d4db627983e1",
          "linkedWithoutMetadata": "3ef3dd6d96bbb7e268bf8e9c32397a3c6ee578da869509f10ec4d4db627983e1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exploit(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "34bfb58d4956e8f28af0a820bfbe28838157565e8cbb51d1656dc31ad25784cd",
          "withoutMetadata": "6b0a8a62c63f7592f0a250c9642c3c5bfdc03378c8c4acd7ad690eb31945cb91",
          "linkedWithoutMetadata": "6b0a8a62c63f7592f0a250c9642c3c5bfdc03378c8c4acd7ad690eb31945cb91"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "039deccbc10ca2b8d9db5bab4c993c832bd6ba13a0b9de7d12a7808241ec04e1",
          "withoutMetadata": "aa67d681a3f4a6ae6956c7bb7a67dcbf54b7c70fda8de8c0190e855fcef79cbc",
          "linkedWithoutMetadata": "aa67d681a3f4a6ae6956c7bb7a67dcbf54b7c70fda8de8c0190e855fcef79cbc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "426c350f97a28d3d423441ae02fb7c68db4003ea3447329189a70d43f8ca44cb",
          "withoutMetadata": "7231554526d02f781de5d9504c900617664feb926f2a852323ac077d2d0a44cc",
          "linkedWithoutMetadata": "7231554526d02f781de5d9504c900617664feb926f2a852323ac077d2d0a44cc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "426c350f97a28d3d423441ae02fb7c68db4003ea3447329189a70d43f8ca44cb",
          "withoutMetadata": "7231554526d02f781de5d9504c900617664feb926f2a852323ac077d2d0a44cc",
          "linkedWithoutMetadata": "7231554526d02f781de5d9504c900617664feb926f2a852323ac077d2d0a44cc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "ae4c0a124ac2956e09a3f1300643fe40af3420e742421f02c73f72e2eda82cfd",
          "withoutMetadata": "58994cacedb8c2a0be75e434552c1924de3a0c23797fb14c554ddfbfd75a9b56",
          "linkedWithoutMetadata": "58994cacedb8c2a0be75e434552c1924de3a0c23797fb14c554ddfbfd75a9b56"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "59a0c2914d12df8b04723dc2f554c0b7710f7f0a5c3da40dddf4b9892248e386",
          "withoutMetadata": "d988ec1777dd02c8d0158af4080bd5ec2bb0d647c717c28a71f6dd6345974401",
          "linkedWithoutMetadata": "d988ec1777dd02c8d0158af4080bd5ec2bb0d647c717c28a71f6dd6345974401"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "d4ade415843a16b404d0d1cc6b6942706ed999b5b7877de927d4b2db5c18f917",
          "withoutMetadata": "f3aa7490d45fecbac7821eab46f3317bb73d0ff04c1f9deaaf4627305321b3bb",
          "linkedWithoutMetadata": "f3aa7490d45fecbac7821eab46f3317bb73d0ff04c1f9deaaf4627305321b3bb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "43f30ab0713e0516dc62720df6db1122fc0c6266b03895adf18a18fab42d5d43",
          "withoutMetadata": "a1e60824bf00514a6b8fccc899867b74910cd45494fc2e3817c102964d0dcb8d",
          "linkedWithoutMetadata": "a1e60824bf00514a6b8fccc899867b74910cd45494fc2e3817c102964d0dcb8d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "4d3fba92f87ec9bb8fc5ef8b426d53c4f89d048f9bd5987cfdc7aa88389efa0f",
          "withoutMetadata": "7fa41e246a40d1708fbdd37627082266e4335ca5681ebb57f32e81b717b18460",
          "linkedWithoutMetadata": "7fa41e246a40d1708fbdd37627082266e4335ca5681ebb57f32e81b717b18460"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Trust": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "510f05b96be3fc17a41278b066b65b3385ad0f238c1f2ff67e5ba31aec39e6f1",
          "withoutMetadata": "f694c086ec62cd2c0a5ee033cb78e6089e2c20bf805152e8e261da2a1b5c19a7",
          "linkedWithoutMetadata": "f694c086ec62cd2c0a5ee033cb78e6089e2c20bf805152e8e261da2a1b5c19a7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Trust)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Trust)94": {
              "label": "contract Trust",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "c0f56fce6ce0760c4fd5fb55ecd320d91165eeca149635b0f9452d640725aab7",
          "withoutMetadata": "f694c086ec62cd2c0a5ee033cb78e6089e2c20bf805152e8e261da2a1b5c19a7",
          "linkedWithoutMetadata": "f694c086ec62cd2c0a5ee033cb78e6089e2c20bf805152e8e261da2a1b5c19a7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(TrusterLenderPool)455",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(TrusterLenderPool)455": {
              "label": "contract TrusterLenderPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "4372f9a1a109dd60470d42d1789c4b9a0ac289c35f6a924579e6e770b7c3f0b1",
          "withoutMetadata": "25592c2d3945629a3bb6f967af73aeeb97944333f2ec8ffd7b673068b64ccf22",
          "linkedWithoutMetadata": "25592c2d3945629a3bb6f967af73aeeb97944333f2ec8ffd7b673068b64ccf22"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(TrusterLenderPool)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(TrusterLenderPool)94": {
              "label": "contract TrusterLenderPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:12",
        "version": {
          "withMetadata": "c0f56fce6ce0760c4fd5fb55ecd320d91165eeca149635b0f9452d640725aab7",
          "withoutMetadata": "f694c086ec62cd2c0a5ee033cb78e6089e2c20bf805152e8e261da2a1b5c19a7",
          "linkedWithoutMetadata": "f694c086ec62cd2c0a5ee033cb78e6089e2c20bf805152e8e261da2a1b5c19a7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "T",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(TrusterLenderPool)94",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(TrusterLenderPool)94": {
              "label": "contract TrusterLenderPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterExploit.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Attack": {
        "src": "contracts/truster/TrusterExploit.sol:8",
        "version": {
          "withMetadata": "8adfeaa3fd310723355078da3923f1a9e7582306a8e1814f13d28b3c8279a35e",
          "withoutMetadata": "9ffd6040d258580d5598fbe2bb246a6a1699e480ed4675cd608dc3a2de4d56fd",
          "linkedWithoutMetadata": "9ffd6040d258580d5598fbe2bb246a6a1699e480ed4675cd608dc3a2de4d56fd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "attack(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterAttacker": {
        "src": "contracts/truster/TrusterExploit.sol:4",
        "version": {
          "withMetadata": "b083389f4022b71df1f2c20d459359a9a739abb57a3f1ddc3d98b6db9d3ebdd0",
          "withoutMetadata": "411f816d2f6e64f9ab0563544fbbdd1a1caafc798d37298c15302db87be992c6",
          "linkedWithoutMetadata": "411f816d2f6e64f9ab0563544fbbdd1a1caafc798d37298c15302db87be992c6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "attack(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "d29ff14e2539dbeffd44f32d39380855652b0d5199cd2c9e4eb24fb371fe0a0c",
          "withoutMetadata": "4440fa0d2a93a858bdb5103e6170a155e9def195e09c74db6f85782a473105c7",
          "linkedWithoutMetadata": "4440fa0d2a93a858bdb5103e6170a155e9def195e09c74db6f85782a473105c7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "a8b8aac0c6d1c72730ab420deb9a831d7e53226eb7bd55514aec02ebb331a554",
          "withoutMetadata": "8b43ae2f69eef7fe3527cedc8c0f71e9cb2c8183dc18b018567ca510275095ba",
          "linkedWithoutMetadata": "8b43ae2f69eef7fe3527cedc8c0f71e9cb2c8183dc18b018567ca510275095ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "b140e1d2768bd2738cf888c5a2796a58b424ac731e77185e16d9927631d6adf8",
          "withoutMetadata": "b6b2dbeab90207a5a01f92fb56017386b248998ab4afd503751fa83e2640180f",
          "linkedWithoutMetadata": "b6b2dbeab90207a5a01f92fb56017386b248998ab4afd503751fa83e2640180f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "3031294be0ba8fa625b0cc67a9feed79d8c40d6d80059bb483c81b52c2a67b48",
          "withoutMetadata": "78c7c908824e6a3d59413189096d6dcfa3e08a56c74c06375cdb8145c5c19f13",
          "linkedWithoutMetadata": "78c7c908824e6a3d59413189096d6dcfa3e08a56c74c06375cdb8145c5c19f13"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "b140e1d2768bd2738cf888c5a2796a58b424ac731e77185e16d9927631d6adf8",
          "withoutMetadata": "b6b2dbeab90207a5a01f92fb56017386b248998ab4afd503751fa83e2640180f",
          "linkedWithoutMetadata": "b6b2dbeab90207a5a01f92fb56017386b248998ab4afd503751fa83e2640180f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "ea1f085d0344240d0e32dab2e6d5cc36bbb83227b7150125eee84d28ceda109d",
          "withoutMetadata": "5421503cde75f60689607d1af3726963bd757a6212d12de23560b33d9dc94888",
          "linkedWithoutMetadata": "5421503cde75f60689607d1af3726963bd757a6212d12de23560b33d9dc94888"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "3e8f52e2e8b3c45810f6a28edca0170d8d0509b1cc54dfc5efd6c8a208041f93",
          "withoutMetadata": "226eab4b177427b9e08e2b1c409e280a2fac9bbcb2aa570f1c9feeca7179f276",
          "linkedWithoutMetadata": "226eab4b177427b9e08e2b1c409e280a2fac9bbcb2aa570f1c9feeca7179f276"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "bdc3febfdbc365c112fab2700179480366408de6285f27840c3c13c2d026a949",
          "withoutMetadata": "16b00928cc23af63712a803ae8a71fa2b6b4535a892b654d02a5d697ddd98683",
          "linkedWithoutMetadata": "16b00928cc23af63712a803ae8a71fa2b6b4535a892b654d02a5d697ddd98683"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "76c343eae59db63b65e745f8c62a750e70928eeef0729d6e220189da3ecafa9a",
          "withoutMetadata": "f20e44952bf99bf28c6cc7cc089b9a59561ef1f91200cb4390bf9c8d3574f1e9",
          "linkedWithoutMetadata": "f20e44952bf99bf28c6cc7cc089b9a59561ef1f91200cb4390bf9c8d3574f1e9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "014f50bf39cb2d136aa36f4af3882a510c94f769d0e990348935ae1a4f129a83",
          "withoutMetadata": "3e17ae140cb911088c8b3f77f829ba2678274ecb8717e30b57ec22567186d0c4",
          "linkedWithoutMetadata": "3e17ae140cb911088c8b3f77f829ba2678274ecb8717e30b57ec22567186d0c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "_token()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "868242de2f3c982156806e3baf2360a46018ef4e93315cd60274dac2977d1231",
          "withoutMetadata": "9473078b61b240fd0cd6836e39cea5398f97b98707b12e1d65c5c89d49f6ae66",
          "linkedWithoutMetadata": "9473078b61b240fd0cd6836e39cea5398f97b98707b12e1d65c5c89d49f6ae66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "_balance()",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "f6da8d0411b52db5e62bf84d0443a6242ae5df87e3aca33bd6f5a2918c432ace",
          "withoutMetadata": "5dafccf0b463de54bc126acc67e3099de9c7598d497df69772ea272800132e91",
          "linkedWithoutMetadata": "5dafccf0b463de54bc126acc67e3099de9c7598d497df69772ea272800132e91"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "e16c8c88bfbf92bedf0f8b6e0921175055ef7bc20efafd3ea1709e82d8655b6f",
          "withoutMetadata": "801520467e4bad102ee227f9fb495e563a797fdddb1c3e8dfbdd84d9aa76d63b",
          "linkedWithoutMetadata": "801520467e4bad102ee227f9fb495e563a797fdddb1c3e8dfbdd84d9aa76d63b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Truster": {
        "src": "contracts/truster/TrusterExploit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,address,address,bytes)",
          "token()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TrusterExploit": {
        "src": "contracts/truster/TrusterExploit.sol:10",
        "version": {
          "withMetadata": "71bde986283f0ead8c3101a0da51a99a7d5dc3b5c9d44cd6e2237050df36b836",
          "withoutMetadata": "d4eea124e427f92aa2851db7580e2133a47d32763b47aed6b5a137a6b39a7eb5",
          "linkedWithoutMetadata": "d4eea124e427f92aa2851db7580e2133a47d32763b47aed6b5a137a6b39a7eb5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterExploit",
            "src": "contracts/truster/TrusterExploit.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_INT",
            "src": "contracts/truster/TrusterExploit.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "MAX_INT",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:11"
            },
            {
              "label": "T",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Truster)46",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TrusterExploit",
              "src": "contracts/truster/TrusterExploit.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Truster)46": {
              "label": "contract Truster",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IUniswapV2Pair": {
        "src": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@uniswap/v2-periphery/contracts/libraries/SafeMath.sol:5",
        "version": {
          "withMetadata": "16e8a68b6d097b1ac66147cf528304330e10aedb79b4c6d240572094955f8f64",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UniswapV2Library": {
        "src": "@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol:7",
        "version": {
          "withMetadata": "3feb8fd8aefdbb41506624b645202e56724643b28af4b49267506bfc5009d5f8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Pool.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV2Pool": {
        "src": "contracts/puppet-v2/PuppetV2Pool.sol:17",
        "version": {
          "withMetadata": "e86200f4694c0d3d13f427d5d1a76a853d793fc17c1a0c54e9a405366a852102",
          "withoutMetadata": "362d65dd9cbf97cd2898059d884d144998bdbde5dd8e52a622dc580dd84ccc48",
          "linkedWithoutMetadata": "362d65dd9cbf97cd2898059d884d144998bdbde5dd8e52a622dc580dd84ccc48"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "UniswapV2Library"
        ],
        "methods": [
          "(address,address,address,address)",
          "borrow(uint256)",
          "calculateDepositOfWETHRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Pool",
            "src": "contracts/puppet-v2/PuppetV2Pool.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:20"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:21"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)820",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:22"
            },
            {
              "label": "_weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)820",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:23"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)820": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "cfc55ce51b27a66b87c7f0da5787a31c35abf40e90b578b989670cabf8c02e23",
          "withoutMetadata": "9eea8ecbb6587451bd0fc9431d0e7cf1ac52fcfd98b030223e4528b46ea0dd96",
          "linkedWithoutMetadata": "9eea8ecbb6587451bd0fc9431d0e7cf1ac52fcfd98b030223e4528b46ea0dd96"
        },
        "inherit": [
          "GuardManager",
          "StorageAccessible",
          "FallbackManager",
          "ISignatureValidatorConstants",
          "SecuredTokenTransfer",
          "SignatureDecoder",
          "OwnerManager",
          "ModuleManager",
          "Executor",
          "SelfAuthorized",
          "Singleton",
          "EtherPaymentFallback"
        ],
        "libraries": [
          "GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "1123bd35224680e2c32ba89c35e13183ecf6d43ff64f93b69ad6124882ab1475",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "30c255bdaa2a976b50f871a75376c0f75bc9026ab2750f3b47a9dec94ff2806f",
          "withoutMetadata": "3ac5655136666b142f425391f53843c36a3603a86aa4c6aeb1c7fb8a1de177ba",
          "linkedWithoutMetadata": "3ac5655136666b142f425391f53843c36a3603a86aa4c6aeb1c7fb8a1de177ba"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "7c3f153bbc8bd88876e5506aac86c2d91f7b7f908d7b2705e76da787c460ffff",
          "withoutMetadata": "fc7ef81238283a2d1cc2e126f8bbaf431d4dca91dbbf475d58340386770ecbc4",
          "linkedWithoutMetadata": "fc7ef81238283a2d1cc2e126f8bbaf431d4dca91dbbf475d58340386770ecbc4"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "49bb258682294002be5a9675956a7d3ba70d1557e8715ccc1a292d05b0fe1e96",
          "withoutMetadata": "da3402829f09dcf600da2153f8080ddabd64ccd8a036dd5a19599fd71c13eaec",
          "linkedWithoutMetadata": "da3402829f09dcf600da2153f8080ddabd64ccd8a036dd5a19599fd71c13eaec"
        },
        "inherit": [
          "Executor",
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "d58f0ef96cf70ceb6ca018b9e6db6d54f094e6d8cd2aa3f99a23c793aac00cc8",
          "withoutMetadata": "cb7759f9f859a8a6d470ef997bb276bd95f084b2a02ee46df34574e8990f3b61",
          "linkedWithoutMetadata": "cb7759f9f859a8a6d470ef997bb276bd95f084b2a02ee46df34574e8990f3b61"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "f494b134a56e2f98648350dded7d7f9e63ff92b2420189f3b4df6a0fcf807b9c",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "f77b47e11c244dbea953b3f0af40242f595fc65efbf918a3ba2552c4db35d7f2",
          "withoutMetadata": "aa9f6ca005d60a39d6bbf035dd936b9d9b8fca26233fee462c90b41cf3a4eeeb",
          "linkedWithoutMetadata": "aa9f6ca005d60a39d6bbf035dd936b9d9b8fca26233fee462c90b41cf3a4eeeb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "a62cef5c0d2965ccb2586973868dd54f6c4b51a16cdeaa0697b01aa3a1d368d8",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "4049cdc67f91f3b1f2a06418b36774a486644c40fb9b9f8cace712bde431441b",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "1b816bf9c0f2c0fa6f8ad29fa730f0cac60000d77cba696db6f7ed78f0a5fce4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "b6f1a3b0b3f5a42fde470b7a0d40337a2b6d308f0804c0fe9744f3807a6af3cb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "f6d97a0ed0e695461ae1f35cbf78bae9ec142c05acac03ba5e6315fffbec048e",
          "withoutMetadata": "475cc06389df6fff164fc2399d0b2efa267e8e5ffb3c15ff30825d10e9f5f791",
          "linkedWithoutMetadata": "475cc06389df6fff164fc2399d0b2efa267e8e5ffb3c15ff30825d10e9f5f791"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "003629153ddecc38f91225a421a909dd954dd25ceffbf5100176a9177e3ff65d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "1ee6b8496a02c5ee1488f3d081515c679212a2604cd42dfb45236011275d2e80",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "ceee13c3ef642412c57bdf5682b2b096665e7978fb36a17c6d6fcd617cf77f10",
          "withoutMetadata": "bd64e1ae69adb745796d30e323e9e6b42c7fc9ca418c8897db4f8d44970361af",
          "linkedWithoutMetadata": "bd64e1ae69adb745796d30e323e9e6b42c7fc9ca418c8897db4f8d44970361af"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "294f0b467ad2203cdb2058787259c641795106cbc64370b8c274a6e0d0a27de0",
          "withoutMetadata": "b09f353c740e7ec3f9c66b0b5e4c067b7b9004eae144d8bbabc872f0f494ad83",
          "linkedWithoutMetadata": "b09f353c740e7ec3f9c66b0b5e4c067b7b9004eae144d8bbabc872f0f494ad83"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "a7501a82ca3537d09f53cb97c8cd1a495ad13f58bdf7bba0cd4018b0f07c719d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "59b6dc9630efde0604c6fe8a808b8b015877ca50b3272c3db0cbc1347c77268f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "ERC165",
          "IERC165",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AccessControlEnumerable": {
        "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:13",
        "inherit": [
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControlEnumerable",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)",
              "contract": "AccessControlEnumerable",
              "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)8003_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)7702_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)7702_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAccessControlEnumerable": {
        "src": "@openzeppelin/contracts/access/IAccessControlEnumerable.sol:11",
        "inherit": [
          "IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "solmate/src/utils/ReentrancyGuard.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "solmate/src/utils/ReentrancyGuard.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "solmate/src/utils/ReentrancyGuard.sol:8"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Arrays",
          "Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)5061_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)5061_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)6857_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)5061_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6857_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)5061_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "9f023b903b41630670b0fa6fd541ca4980908980eb5b26a8c51f04f3dc6079df",
          "withoutMetadata": "ec2b03b26bc843bec40bcade1595cd999bb83fb78eb039972e923f40d6b460be",
          "linkedWithoutMetadata": "ec2b03b26bc843bec40bcade1595cd999bb83fb78eb039972e923f40d6b460be"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "fd40d8ea8bea82af2079c30c856c0d79b1737610b260b0b90b633ac1d5931b22",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:38",
        "version": {
          "withMetadata": "c125d14211d838b012854b63105a733b5214b1e8f269dfa8bb1127b37a6c2f42",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Minimal": {
        "src": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "IUniswapV3PoolEvents",
          "IUniswapV3PoolOwnerActions",
          "IUniswapV3PoolActions",
          "IUniswapV3PoolDerivedState",
          "IUniswapV3PoolState",
          "IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "@uniswap/v3-core/contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "5a5432e901cb55bf29ac8a5580c43db43e85079775876defb174b7e21d124180",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DamnValuableNFT": {
        "src": "contracts/DamnValuableNFT.sol:13",
        "version": {
          "withMetadata": "3e85dbb94f62df048d83f6c52a269c2092933c19b1093a3c0abe715766bfc2ca",
          "withoutMetadata": "c074aa150e2f9248f568f8307186172071aa176d6c31fe9b7f28266352fe4c86",
          "linkedWithoutMetadata": "c074aa150e2f9248f568f8307186172071aa176d6c31fe9b7f28266352fe4c86"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC721Burnable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "safeMint(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableNFT",
            "src": "contracts/DamnValuableNFT.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DamnValuableNFT",
              "src": "contracts/DamnValuableNFT.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DamnValuableTokenSnapshot": {
        "src": "contracts/DamnValuableTokenSnapshot.sol:11",
        "version": {
          "withMetadata": "db14bdf42c78dc7e942731390b31456393a4893551369250e89711aa4dd6c0e5",
          "withoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f",
          "linkedWithoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f"
        },
        "inherit": [
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "snapshot()",
          "getBalanceAtLastSnapshot(address)",
          "getTotalSupplyAtLastSnapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableTokenSnapshot",
            "src": "contracts/DamnValuableTokenSnapshot.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)5061_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)5061_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)6857_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            },
            {
              "label": "_lastSnapshotId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DamnValuableTokenSnapshot",
              "src": "contracts/DamnValuableTokenSnapshot.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)5061_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6857_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)5061_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AuthorizedExecutor": {
        "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:11",
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "setPermissions(bytes32[])",
          "execute(address,bytes)",
          "getActionId(bytes4,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:14"
            },
            {
              "label": "permissions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:17"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SelfAuthorizedVault": {
        "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:12",
        "version": {
          "withMetadata": "2e1f4236192382614706f07381fca360bb47487c004dc4763f532a1aba9d49df",
          "withoutMetadata": "f2318384b2ecd5a7433f6f18332b585222a5b42bb54d6539c32a4814a0454eac",
          "linkedWithoutMetadata": "f2318384b2ecd5a7433f6f18332b585222a5b42bb54d6539c32a4814a0454eac"
        },
        "inherit": [
          "AuthorizedExecutor",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "withdraw(address,address,uint256)",
          "sweepFunds(address,address)",
          "getLastWithdrawalTimestamp()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_lastWithdrawalTimestamp",
            "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:14"
            },
            {
              "label": "permissions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:17"
            },
            {
              "label": "_lastWithdrawalTimestamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfAuthorizedVault",
              "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WalletRegistry": {
        "src": "contracts/backdoor/WalletRegistry.sol:17",
        "version": {
          "withMetadata": "b85b53bcc5a9e0f8323ad7bb9509c55d7c723279436f51b04075946a62e09dec",
          "withoutMetadata": "116314d1cf422ddcd1da4f5cbf2e14170a872957a9bf9c5bd43c464249266126",
          "linkedWithoutMetadata": "116314d1cf422ddcd1da4f5cbf2e14170a872957a9bf9c5bd43c464249266126"
        },
        "inherit": [
          "Ownable",
          "IProxyCreationCallback"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "(address,address,address,address[])",
          "addBeneficiary(address)",
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WalletRegistry",
            "src": "contracts/backdoor/WalletRegistry.sol:40"
          },
          {
            "kind": "state-variable-immutable",
            "name": "masterCopy",
            "src": "contracts/backdoor/WalletRegistry.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "walletFactory",
            "src": "contracts/backdoor/WalletRegistry.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/backdoor/WalletRegistry.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaries",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "WalletRegistry",
              "src": "contracts/backdoor/WalletRegistry.sol:26"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "WalletRegistry",
              "src": "contracts/backdoor/WalletRegistry.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ClimberTimelock": {
        "src": "contracts/climber/ClimberTimelock.sol:21",
        "version": {
          "withMetadata": "054db4ec5a4a2ac56efcf2e41fe3cbf13c1a6b6f83d970f428709f61c7c34b9c",
          "withoutMetadata": "22c50716512da2f691ef9dd8184fb4590e51b50fc11565f4ee77b403413bbadb",
          "linkedWithoutMetadata": "22c50716512da2f691ef9dd8184fb4590e51b50fc11565f4ee77b403413bbadb"
        },
        "inherit": [
          "ClimberTimelockBase",
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "schedule(address[],uint256[],bytes[],bytes32)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "updateDelay(uint64)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ClimberTimelock",
            "src": "contracts/climber/ClimberTimelock.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "operations",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(Operation)10216_storage)",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:27"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Operation)10216_storage)": {
              "label": "mapping(bytes32 => struct ClimberTimelockBase.Operation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Operation)10216_storage": {
              "label": "struct ClimberTimelockBase.Operation",
              "members": [
                {
                  "label": "readyAtTimestamp",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "known",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 9,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ClimberTimelockBase": {
        "src": "contracts/climber/ClimberTimelockBase.sol:10",
        "inherit": [
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControl",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getOperationState(bytes32)",
          "getOperationId(address[],uint256[],bytes[],bytes32)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "operations",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(Operation)10216_storage)",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:27"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Operation)10216_storage)": {
              "label": "mapping(bytes32 => struct ClimberTimelockBase.Operation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Operation)10216_storage": {
              "label": "struct ClimberTimelockBase.Operation",
              "members": [
                {
                  "label": "readyAtTimestamp",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "known",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 9,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ClimberVault": {
        "src": "contracts/climber/ClimberVault.sol:19",
        "version": {
          "withMetadata": "4405546fbc5bd1456300e7d72faeb83c91b838971af76d722a18d9e34cb647fc",
          "withoutMetadata": "5464eb85cc8d892d42052478761138b79df192f598e61e0b35c6f84fbef159a3",
          "linkedWithoutMetadata": "5464eb85cc8d892d42052478761138b79df192f598e61e0b35c6f84fbef159a3"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "()",
          "initialize(address,address,address)",
          "withdraw(address,address,uint256)",
          "sweepFunds(address)",
          "getSweeper()",
          "getLastWithdrawalTimestamp()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_lastWithdrawalTimestamp",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "ClimberVault",
              "src": "contracts/climber/ClimberVault.sol:20"
            },
            {
              "label": "_sweeper",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "ClimberVault",
              "src": "contracts/climber/ClimberVault.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Exchange": {
        "src": "contracts/compromised/Exchange.sol:13",
        "version": {
          "withMetadata": "458514cc57e9ba2eaf41bd3c429142f74577f1dcc67f03e83d88b07ecd37af21",
          "withoutMetadata": "e546cb6ddcd5836bb9748b79e5a8101b16e86ed64d67e051f8b4e8bdffef8c71",
          "linkedWithoutMetadata": "e546cb6ddcd5836bb9748b79e5a8101b16e86ed64d67e051f8b4e8bdffef8c71"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "buyOne()",
          "sellOne(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Exchange",
            "src": "contracts/compromised/Exchange.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/compromised/Exchange.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "oracle",
            "src": "contracts/compromised/Exchange.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrustfulOracle": {
        "src": "contracts/compromised/TrustfulOracle.sol:13",
        "version": {
          "withMetadata": "f5152d5089898fd2aae555161cfa8fd0de4660e26c3c63ceea0580564f4ab1fb",
          "withoutMetadata": "48fea9c040abc744dbbd5627858061e16925140e19945063abbd9fe89ccac777",
          "linkedWithoutMetadata": "48fea9c040abc744dbbd5627858061e16925140e19945063abbd9fe89ccac777"
        },
        "inherit": [
          "AccessControlEnumerable",
          "AccessControl",
          "ERC165",
          "IERC165",
          "IAccessControlEnumerable",
          "IAccessControl",
          "Context"
        ],
        "libraries": [
          "LibSort"
        ],
        "methods": [
          "(address[],bool)",
          "setupInitialPrices(address[],string[],uint256[])",
          "postPrice(string,uint256)",
          "getMedianPrice(string)",
          "getAllPricesForSymbol(string)",
          "getPriceBySource(string,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrustfulOracle",
            "src": "contracts/compromised/TrustfulOracle.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)",
              "contract": "AccessControlEnumerable",
              "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:16"
            },
            {
              "label": "_pricesBySource",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "TrustfulOracle",
              "src": "contracts/compromised/TrustfulOracle.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)8003_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)7702_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)7702_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrustfulOracleInitializer": {
        "src": "contracts/compromised/TrustfulOracleInitializer.sol:10",
        "version": {
          "withMetadata": "48d6638d50901c4bb29ba312b8fc2721924cc3aecdc87ca6a1ca502982069496",
          "withoutMetadata": "2688b18cc57ea0fcccd85175a62a83388aac02d13b63e5f6558a14c09d3194cf",
          "linkedWithoutMetadata": "2688b18cc57ea0fcccd85175a62a83388aac02d13b63e5f6558a14c09d3194cf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],string[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrustfulOracleInitializer",
            "src": "contracts/compromised/TrustfulOracleInitializer.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(TrustfulOracle)11074",
              "contract": "TrustfulOracleInitializer",
              "src": "contracts/compromised/TrustfulOracleInitializer.sol:13"
            }
          ],
          "types": {
            "t_contract(TrustfulOracle)11074": {
              "label": "contract TrustfulOracle",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:12",
        "version": {
          "withMetadata": "bd09b2293f7b537a3e55cee94f2cf7d3034cf6ccdfa9fd1eb6d31d391716d1e8",
          "withoutMetadata": "b2653bf4183ffa557908eb8bf3a731867ef6dd73a67a7e27b679562c9a3890e3",
          "linkedWithoutMetadata": "b2653bf4183ffa557908eb8bf3a731867ef6dd73a67a7e27b679562c9a3890e3"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(uint256)",
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderNFTMarketplace",
            "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(DamnValuableNFT)9157",
              "contract": "FreeRiderNFTMarketplace",
              "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:15"
            },
            {
              "label": "offersCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FreeRiderNFTMarketplace",
              "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:16"
            },
            {
              "label": "offers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FreeRiderNFTMarketplace",
              "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableNFT)9157": {
              "label": "contract DamnValuableNFT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FreeRiderRecovery": {
        "src": "contracts/free-rider/FreeRiderRecovery.sol:13",
        "version": {
          "withMetadata": "6a3f6e2948a1bdb49ffaa2c6912f9c5d0ddd19465cda425f0926239d100bf646",
          "withoutMetadata": "6a35cc984f424dc55871068a4da2631b0e70b6e720f26082d5f18b153f37a1f1",
          "linkedWithoutMetadata": "6a35cc984f424dc55871068a4da2631b0e70b6e720f26082d5f18b153f37a1f1"
        },
        "inherit": [
          "IERC721Receiver",
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderRecovery",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "beneficiary",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nft",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "received",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FreeRiderRecovery",
              "src": "contracts/free-rider/FreeRiderRecovery.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FlashLoanReceiver": {
        "src": "contracts/naive-receiver/FlashLoanReceiver.sol:13",
        "version": {
          "withMetadata": "e45bdc30ef87f025f8523ae5e71e4f6e28bcdf90463eed794be37acdfc3a9a68",
          "withoutMetadata": "b597bd3d8d0bc3f3656f400764af0a6919580cb4338c0d18a724332e611d1d28",
          "linkedWithoutMetadata": "b597bd3d8d0bc3f3656f400764af0a6919580cb4338c0d18a724332e611d1d28"
        },
        "inherit": [
          "IERC3156FlashBorrower"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "(address)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FlashLoanReceiver",
            "src": "contracts/naive-receiver/FlashLoanReceiver.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FlashLoanReceiver",
              "src": "contracts/naive-receiver/FlashLoanReceiver.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NaiveReceiverLenderPool": {
        "src": "contracts/naive-receiver/NaiveReceiverLenderPool.sol:14",
        "version": {
          "withMetadata": "7c19afc91ec483d4e9fa06df804e45b139c933956a61f22f9a8c03c1aae216bc",
          "withoutMetadata": "7e2db52589a95ef0b5d3e2d3a94a2469f7be7212339a6d88aca4061c7d6fd035",
          "linkedWithoutMetadata": "7e2db52589a95ef0b5d3e2d3a94a2469f7be7212339a6d88aca4061c7d6fd035"
        },
        "inherit": [
          "IERC3156FlashLender",
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PuppetPool": {
        "src": "contracts/puppet/PuppetPool.sol:12",
        "version": {
          "withMetadata": "913a39698f6ff9d65b7ccffda531f8f7a9cfd0c8b14904c571c1112c6345c892",
          "withoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72",
          "linkedWithoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address,address)",
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetPool",
            "src": "contracts/puppet/PuppetPool.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswapPair",
            "src": "contracts/puppet/PuppetPool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/puppet/PuppetPool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetPool",
              "src": "contracts/puppet/PuppetPool.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ISimpleGovernance": {
        "src": "contracts/selfie/ISimpleGovernance.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfiePool": {
        "src": "contracts/selfie/SelfiePool.sol:14",
        "version": {
          "withMetadata": "298832ebf7fd36bf32bebd752c4db52b7c78f18cbc4e2a889d889f29c262236d",
          "withoutMetadata": "bbd19302755aded490c48ea90919a77f764117659420a90fc55c527bdf0f09a0",
          "linkedWithoutMetadata": "bbd19302755aded490c48ea90919a77f764117659420a90fc55c527bdf0f09a0"
        },
        "inherit": [
          "IERC3156FlashLender",
          "ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfiePool",
            "src": "contracts/selfie/SelfiePool.sol:33"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/selfie/SelfiePool.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "governance",
            "src": "contracts/selfie/SelfiePool.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SimpleGovernance": {
        "src": "contracts/selfie/SimpleGovernance.sol:11",
        "version": {
          "withMetadata": "357376096dc44981d616ceb8801547dc1e12b54737947276e3787fcfa55e99b8",
          "withoutMetadata": "82048fab24c9f9550b1c4a5740443c978c7daf763c21a66ebf4621c5b49e3655",
          "linkedWithoutMetadata": "82048fab24c9f9550b1c4a5740443c978c7daf763c21a66ebf4621c5b49e3655"
        },
        "inherit": [
          "ISimpleGovernance"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleGovernance",
            "src": "contracts/selfie/SimpleGovernance.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_governanceToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DamnValuableTokenSnapshot)9246",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:14"
            },
            {
              "label": "_actionCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:15"
            },
            {
              "label": "_actions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(GovernanceAction)12017_storage)",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableTokenSnapshot)9246": {
              "label": "contract DamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(GovernanceAction)12017_storage)": {
              "label": "mapping(uint256 => struct ISimpleGovernance.GovernanceAction)",
              "numberOfBytes": "32"
            },
            "t_struct(GovernanceAction)12017_storage": {
              "label": "struct ISimpleGovernance.GovernanceAction",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proposedAt",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IFlashLoanEtherReceiver": {
        "src": "contracts/side-entrance/SideEntranceLenderPool.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SideEntranceLenderPool": {
        "src": "contracts/side-entrance/SideEntranceLenderPool.sol:15",
        "version": {
          "withMetadata": "690a3dce8717c5466d2cc12dbf84fc128a79fd48619d5be624aca54534467e67",
          "withoutMetadata": "15548b6006e89d74f5c12bf3c4bdcabb069631699345b84b04f3dc2caac589a0",
          "linkedWithoutMetadata": "15548b6006e89d74f5c12bf3c4bdcabb069631699345b84b04f3dc2caac589a0"
        },
        "inherit": [],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "deposit()",
          "withdraw()",
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SideEntranceLenderPool",
              "src": "contracts/side-entrance/SideEntranceLenderPool.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AccountingToken": {
        "src": "contracts/the-rewarder/AccountingToken.sol:14",
        "version": {
          "withMetadata": "dd9302d5117cd5c6f8c6f6cfd6f03bdd68a55f2f5909baade8c2fd8f3dabc2e0",
          "withoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db",
          "linkedWithoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC20Snapshot",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "snapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccountingToken",
            "src": "contracts/the-rewarder/AccountingToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)5061_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)5061_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)6857_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)5061_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6857_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)5061_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FlashLoanerPool": {
        "src": "contracts/the-rewarder/FlashLoanerPool.sol:14",
        "version": {
          "withMetadata": "b6cf364faffb67a9311293324ad13bbcf44dae88c7621e763d4aceab37fd622d",
          "withoutMetadata": "5a080ea82edf5897f193b2e457636bf7b19d73cd14d8a7c6ca402fedc7e9861e",
          "linkedWithoutMetadata": "5a080ea82edf5897f193b2e457636bf7b19d73cd14d8a7c6ca402fedc7e9861e"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FlashLoanerPool",
            "src": "contracts/the-rewarder/FlashLoanerPool.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "liquidityToken",
            "src": "contracts/the-rewarder/FlashLoanerPool.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RewardToken": {
        "src": "contracts/the-rewarder/RewardToken.sol:12",
        "version": {
          "withMetadata": "5e9ef001191b02986ab7e2c2f9d3da443d2bfdd611b59f073913718998802325",
          "withoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c",
          "linkedWithoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c"
        },
        "inherit": [
          "OwnableRoles",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewardToken",
            "src": "contracts/the-rewarder/RewardToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderPool.sol:13",
        "version": {
          "withMetadata": "09799ecbd0f49569e53085dafe22621de3646a822f36fe4a4951891592fd5f5f",
          "withoutMetadata": "f3c8d397d23f68fa7b01f215054182fd3c14d76683cd7134e47f25ebbc2c1660",
          "linkedWithoutMetadata": "f3c8d397d23f68fa7b01f215054182fd3c14d76683cd7134e47f25ebbc2c1660"
        },
        "inherit": [],
        "libraries": [
          "FixedPointMathLib",
          "SafeTransferLib"
        ],
        "methods": [
          "(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()",
          "isNewRewardsRound()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderPool",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:38"
          },
          {
            "kind": "state-variable-immutable",
            "name": "liquidityToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountingToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rewardToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lastSnapshotIdForRewards",
              "offset": 0,
              "slot": "0",
              "type": "t_uint128",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:31"
            },
            {
              "label": "lastRecordedSnapshotTimestamp",
              "offset": 16,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:32"
            },
            {
              "label": "roundNumber",
              "offset": 24,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:33"
            },
            {
              "label": "lastRewardTimestamps",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint64)",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint64)": {
              "label": "mapping(address => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReceiverUnstoppable": {
        "src": "contracts/unstoppable/ReceiverUnstoppable.sol:12",
        "version": {
          "withMetadata": "01fa500f06a24f2b0740580854d3be6f386f174585dd8b33d80e29402c637bf0",
          "withoutMetadata": "a314e95cabc5d00000eca6575da729edead499639043e73a6758b8ba7b583148",
          "linkedWithoutMetadata": "a314e95cabc5d00000eca6575da729edead499639043e73a6758b8ba7b583148"
        },
        "inherit": [
          "IERC3156FlashBorrower",
          "Owned"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "executeFlashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReceiverUnstoppable",
            "src": "contracts/unstoppable/ReceiverUnstoppable.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pool",
            "src": "contracts/unstoppable/ReceiverUnstoppable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate/src/auth/Owned.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnstoppableVault": {
        "src": "contracts/unstoppable/UnstoppableVault.sol:14",
        "version": {
          "withMetadata": "8f5c639f30001bdc4cd23260978c54d8cf369d4accbc08a665e4cef55d98ab97",
          "withoutMetadata": "929faa6e5329cd43c38d6e12b76b7093c8acda3c73bcd35e74256e6b8b078d40",
          "linkedWithoutMetadata": "929faa6e5329cd43c38d6e12b76b7093c8acda3c73bcd35e74256e6b8b078d40"
        },
        "inherit": [
          "ERC4626",
          "ERC20",
          "Owned",
          "ReentrancyGuard",
          "IERC3156FlashLender"
        ],
        "libraries": [
          "SafeTransferLib",
          "FixedPointMathLib"
        ],
        "methods": [
          "(address,address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "setFeeRecipient(address)",
          "totalAssets()",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnstoppableVault",
            "src": "contracts/unstoppable/UnstoppableVault.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "end",
            "src": "contracts/unstoppable/UnstoppableVault.sol:21"
          },
          {
            "kind": "state-variable-immutable",
            "name": "end",
            "src": "contracts/unstoppable/UnstoppableVault.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "solmate/src/utils/ReentrancyGuard.sol:8"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate/src/auth/Owned.sol:17"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "UnstoppableVault",
              "src": "contracts/unstoppable/UnstoppableVault.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AuthorizerUpgradeable": {
        "src": "contracts/wallet-mining/AuthorizerUpgradeable.sol:12",
        "version": {
          "withMetadata": "4c33ef71de605d0528a4da6704098c04af6e0fcc49985e429f59955fe685facc",
          "withoutMetadata": "4e68eb14f62fc8af3b9f479402583178d27e9f31615273b8a5443dd2d74619b5",
          "linkedWithoutMetadata": "4e68eb14f62fc8af3b9f479402583178d27e9f31615273b8a5443dd2d74619b5"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "init(address[],address[])",
          "can(address,address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "wards",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "AuthorizerUpgradeable",
              "src": "contracts/wallet-mining/AuthorizerUpgradeable.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGnosisSafeProxyFactory": {
        "src": "contracts/wallet-mining/WalletDeployer.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WalletDeployer": {
        "src": "contracts/wallet-mining/WalletDeployer.sol:17",
        "version": {
          "withMetadata": "67560163dcb601ffbe90b26d7ae5e7155a55937aededfe96a6f0cc6db080083c",
          "withoutMetadata": "2c783170f31b7b777548ab1e61b20f84422bf3a47121021218ed062e12db996e",
          "linkedWithoutMetadata": "2c783170f31b7b777548ab1e61b20f84422bf3a47121021218ed062e12db996e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "rule(address)",
          "drop(bytes)",
          "can(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WalletDeployer",
            "src": "contracts/wallet-mining/WalletDeployer.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "chief",
            "src": "contracts/wallet-mining/WalletDeployer.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "chief",
            "src": "contracts/wallet-mining/WalletDeployer.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "gem",
            "src": "contracts/wallet-mining/WalletDeployer.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "mom",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "WalletDeployer",
              "src": "contracts/wallet-mining/WalletDeployer.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "solady/src/auth/Ownable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "renounceOwnership()",
          "requestOwnershipHandover()",
          "cancelOwnershipHandover()",
          "completeOwnershipHandover(address)",
          "owner()",
          "ownershipHandoverExpiresAt(address)",
          "ownershipHandoverValidFor()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableRoles": {
        "src": "solady/src/auth/OwnableRoles.sol:11",
        "inherit": [
          "Ownable"
        ],
        "libraries": [],
        "methods": [
          "grantRoles(address,uint256)",
          "revokeRoles(address,uint256)",
          "renounceRoles(uint256)",
          "hasAnyRole(address,uint256)",
          "hasAllRoles(address,uint256)",
          "rolesOf(address)",
          "rolesFromOrdinals(uint8[])",
          "ordinalsFromRoles(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FixedPointMathLib": {
        "src": "solmate/src/utils/FixedPointMathLib.sol:7",
        "version": {
          "withMetadata": "b1d679ee3abc809dd44cb2bf24c6759d883a53ff3cd0843ddf80edceec390619",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LibSort": {
        "src": "solady/src/utils/LibSort.sol:6",
        "version": {
          "withMetadata": "aa8f4f2cabeb9fc9b4e4cbcdd1daf93b006eaa3a4a2423f6196a3f369e53d85c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeTransferLib": {
        "src": "solmate/src/utils/SafeTransferLib.sol:10",
        "version": {
          "withMetadata": "b86328ba394d85a95dff7bb2216feb7de2f654966cbe1daa662d3edca3b23ba3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Owned": {
        "src": "solmate/src/auth/Owned.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "solmate/src/auth/Owned.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate/src/auth/Owned.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC4626": {
        "src": "solmate/src/mixins/ERC4626.sol:10",
        "inherit": [
          "ERC20"
        ],
        "libraries": [
          "SafeTransferLib",
          "FixedPointMathLib"
        ],
        "methods": [
          "deposit(uint256,address)",
          "mint(uint256,address)",
          "withdraw(uint256,address,address)",
          "redeem(uint256,address,address)",
          "totalAssets()",
          "convertToShares(uint256)",
          "convertToAssets(uint256)",
          "previewDeposit(uint256)",
          "previewMint(uint256)",
          "previewWithdraw(uint256)",
          "previewRedeem(uint256)",
          "maxDeposit(address)",
          "maxMint(address)",
          "maxWithdraw(address)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC4626",
            "src": "solmate/src/mixins/ERC4626.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "asset",
            "src": "solmate/src/mixins/ERC4626.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETH": {
        "src": "solmate/src/tokens/WETH.sol:11",
        "version": {
          "withMetadata": "1cf71080db7dcad38785d6aaeda9665c2fbfb2f4a5dcf66b04bfb1257bb1930d",
          "withoutMetadata": "cc022fd82176407a2acacc0cf526b5c8e0bd837bd1aaae897cd4f9c0e90ed79f",
          "linkedWithoutMetadata": "cc022fd82176407a2acacc0cf526b5c8e0bd837bd1aaae897cd4f9c0e90ed79f"
        },
        "inherit": [
          "ERC20"
        ],
        "libraries": [
          "SafeTransferLib"
        ],
        "methods": [
          "deposit()",
          "withdraw(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20Minimal": {
        "src": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "IUniswapV3PoolEvents",
          "IUniswapV3PoolOwnerActions",
          "IUniswapV3PoolActions",
          "IUniswapV3PoolDerivedState",
          "IUniswapV3PoolState",
          "IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FullMath": {
        "src": "@uniswap/v3-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "cf2c4d4d3bea0b2e9ef49240613f3cb48d73dcd714b95b447441facc9fa72621",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TickMath": {
        "src": "@uniswap/v3-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "e2ce058f5eb0ffc8e9823618f74bd13009d16afb69f48051ee868452d0b1b42b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "@uniswap/v3-core/contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "05d7ae5f8b7e957e62d88103b3429af299b19c71345bd7bb139f330d28672bdd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OracleLibrary": {
        "src": "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:10",
        "version": {
          "withMetadata": "92e5c62062317d7d72978a4409d80341a03e453f3f748a17498ab2afb57a9093",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "TickMath",
          "FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PuppetV3Pool": {
        "src": "contracts/puppet-v3/PuppetV3Pool.sol:14",
        "version": {
          "withMetadata": "77c81b3ba77c3e43c76399ef8a6a715013b192a49b4d2afaf5971084e79936cc",
          "withoutMetadata": "7f41d709fd2d64f937de627398ac22f010648d313d0bd98237cef5c246ecf774",
          "linkedWithoutMetadata": "7f41d709fd2d64f937de627398ac22f010648d313d0bd98237cef5c246ecf774"
        },
        "inherit": [],
        "libraries": [
          "TransferHelper",
          "OracleLibrary"
        ],
        "methods": [
          "(address,address,address)",
          "borrow(uint256)",
          "calculateDepositOfWETHRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV3Pool",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "weth",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswapV3Pool",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetV3Pool",
              "src": "contracts/puppet-v3/PuppetV3Pool.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}